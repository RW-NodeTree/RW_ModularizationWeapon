### YamlMime:ManagedReference
items:
- uid: RW_ModularizationWeapon.FieldReaderInstList`1
  commentId: T:RW_ModularizationWeapon.FieldReaderInstList`1
  id: FieldReaderInstList`1
  parent: RW_ModularizationWeapon
  children:
  - RW_ModularizationWeapon.FieldReaderInstList`1.#ctor
  - RW_ModularizationWeapon.FieldReaderInstList`1.#ctor(RW_ModularizationWeapon.FieldReaderInstList{`0})
  - RW_ModularizationWeapon.FieldReaderInstList`1.LoadDataFromXmlCustom(System.Xml.XmlNode)
  - RW_ModularizationWeapon.FieldReaderInstList`1.op_BitwiseAnd(`0,RW_ModularizationWeapon.FieldReaderInstList{`0})
  - RW_ModularizationWeapon.FieldReaderInstList`1.op_BitwiseAnd(RW_ModularizationWeapon.FieldReaderInstList{`0},RW_ModularizationWeapon.FieldReaderInstList{`0})
  - RW_ModularizationWeapon.FieldReaderInstList`1.op_BitwiseOr(`0,RW_ModularizationWeapon.FieldReaderInstList{`0})
  - RW_ModularizationWeapon.FieldReaderInstList`1.op_BitwiseOr(RW_ModularizationWeapon.FieldReaderInstList{`0},RW_ModularizationWeapon.FieldReaderInstList{`0})
  - RW_ModularizationWeapon.FieldReaderInstList`1.ToString
  langs:
  - csharp
  - vb
  name: FieldReaderInstList<T>
  nameWithType: FieldReaderInstList<T>
  fullName: RW_ModularizationWeapon.FieldReaderInstList<T>
  type: Class
  source:
    remote:
      path: src/RW_ModularizationWeapon/FieldReaderList.cs
      branch: master
      repo: https://github.com/RW-NodeTree/RW_ModularizationWeapon.git
    id: FieldReaderInstList
    path: FieldReaderList.cs
    startLine: 826
  assemblies:
  - RW_ModularizationWeapon
  namespace: RW_ModularizationWeapon
  syntax:
    content: 'public class FieldReaderInstList<T> : List<FieldReaderInstance<T>>, IList<FieldReaderInstance<T>>, ICollection<FieldReaderInstance<T>>, IList, ICollection, IReadOnlyList<FieldReaderInstance<T>>, IReadOnlyCollection<FieldReaderInstance<T>>, IEnumerable<FieldReaderInstance<T>>, IEnumerable'
    typeParameters:
    - id: T
    content.vb: >-
      Public Class FieldReaderInstList(Of T)

          Inherits List(Of FieldReaderInstance(Of T))

          Implements IList(Of FieldReaderInstance(Of T)), ICollection(Of FieldReaderInstance(Of T)), IList, ICollection, IReadOnlyList(Of FieldReaderInstance(Of T)), IReadOnlyCollection(Of FieldReaderInstance(Of T)), IEnumerable(Of FieldReaderInstance(Of T)), IEnumerable
  inheritance:
  - System.Object
  - System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{{T}}}
  implements:
  - System.Collections.Generic.IList{RW_ModularizationWeapon.FieldReaderInstance{{T}}}
  - System.Collections.Generic.ICollection{RW_ModularizationWeapon.FieldReaderInstance{{T}}}
  - System.Collections.IList
  - System.Collections.ICollection
  - System.Collections.Generic.IReadOnlyList{RW_ModularizationWeapon.FieldReaderInstance{{T}}}
  - System.Collections.Generic.IReadOnlyCollection{RW_ModularizationWeapon.FieldReaderInstance{{T}}}
  - System.Collections.Generic.IEnumerable{RW_ModularizationWeapon.FieldReaderInstance{{T}}}
  - System.Collections.IEnumerable
  inheritedMembers:
  - System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{{T}}}.System#Collections#IList#get_Item(System.Int32)
  - System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{{T}}}.System#Collections#IList#set_Item(System.Int32,System.Object)
  - System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{{T}}}.Add(RW_ModularizationWeapon.FieldReaderInstance{{T}})
  - System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{{T}}}.System#Collections#IList#Add(System.Object)
  - System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{{T}}}.AddRange(System.Collections.Generic.IEnumerable{RW_ModularizationWeapon.FieldReaderInstance{{T}}})
  - System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{{T}}}.AsReadOnly
  - System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{{T}}}.BinarySearch(System.Int32,System.Int32,RW_ModularizationWeapon.FieldReaderInstance{{T}},System.Collections.Generic.IComparer{RW_ModularizationWeapon.FieldReaderInstance{{T}}})
  - System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{{T}}}.BinarySearch(RW_ModularizationWeapon.FieldReaderInstance{{T}})
  - System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{{T}}}.BinarySearch(RW_ModularizationWeapon.FieldReaderInstance{{T}},System.Collections.Generic.IComparer{RW_ModularizationWeapon.FieldReaderInstance{{T}}})
  - System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{{T}}}.Clear
  - System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{{T}}}.Contains(RW_ModularizationWeapon.FieldReaderInstance{{T}})
  - System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{{T}}}.System#Collections#IList#Contains(System.Object)
  - System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{{T}}}.ConvertAll``1(System.Converter{RW_ModularizationWeapon.FieldReaderInstance{{T}},{TOutput}})
  - System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{{T}}}.CopyTo(RW_ModularizationWeapon.FieldReaderInstance{{T}}[])
  - System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{{T}}}.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  - System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{{T}}}.CopyTo(System.Int32,RW_ModularizationWeapon.FieldReaderInstance{{T}}[],System.Int32,System.Int32)
  - System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{{T}}}.CopyTo(RW_ModularizationWeapon.FieldReaderInstance{{T}}[],System.Int32)
  - System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{{T}}}.Exists(System.Predicate{RW_ModularizationWeapon.FieldReaderInstance{{T}}})
  - System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{{T}}}.Find(System.Predicate{RW_ModularizationWeapon.FieldReaderInstance{{T}}})
  - System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{{T}}}.FindAll(System.Predicate{RW_ModularizationWeapon.FieldReaderInstance{{T}}})
  - System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{{T}}}.FindIndex(System.Predicate{RW_ModularizationWeapon.FieldReaderInstance{{T}}})
  - System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{{T}}}.FindIndex(System.Int32,System.Predicate{RW_ModularizationWeapon.FieldReaderInstance{{T}}})
  - System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{{T}}}.FindIndex(System.Int32,System.Int32,System.Predicate{RW_ModularizationWeapon.FieldReaderInstance{{T}}})
  - System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{{T}}}.FindLast(System.Predicate{RW_ModularizationWeapon.FieldReaderInstance{{T}}})
  - System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{{T}}}.FindLastIndex(System.Predicate{RW_ModularizationWeapon.FieldReaderInstance{{T}}})
  - System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{{T}}}.FindLastIndex(System.Int32,System.Predicate{RW_ModularizationWeapon.FieldReaderInstance{{T}}})
  - System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{{T}}}.FindLastIndex(System.Int32,System.Int32,System.Predicate{RW_ModularizationWeapon.FieldReaderInstance{{T}}})
  - System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{{T}}}.ForEach(System.Action{RW_ModularizationWeapon.FieldReaderInstance{{T}}})
  - System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{{T}}}.GetEnumerator
  - System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{{T}}}.System#Collections#Generic#IEnumerable{T}#GetEnumerator
  - System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{{T}}}.System#Collections#IEnumerable#GetEnumerator
  - System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{{T}}}.GetRange(System.Int32,System.Int32)
  - System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{{T}}}.IndexOf(RW_ModularizationWeapon.FieldReaderInstance{{T}})
  - System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{{T}}}.System#Collections#IList#IndexOf(System.Object)
  - System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{{T}}}.IndexOf(RW_ModularizationWeapon.FieldReaderInstance{{T}},System.Int32)
  - System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{{T}}}.IndexOf(RW_ModularizationWeapon.FieldReaderInstance{{T}},System.Int32,System.Int32)
  - System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{{T}}}.Insert(System.Int32,RW_ModularizationWeapon.FieldReaderInstance{{T}})
  - System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{{T}}}.System#Collections#IList#Insert(System.Int32,System.Object)
  - System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{{T}}}.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{RW_ModularizationWeapon.FieldReaderInstance{{T}}})
  - System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{{T}}}.LastIndexOf(RW_ModularizationWeapon.FieldReaderInstance{{T}})
  - System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{{T}}}.LastIndexOf(RW_ModularizationWeapon.FieldReaderInstance{{T}},System.Int32)
  - System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{{T}}}.LastIndexOf(RW_ModularizationWeapon.FieldReaderInstance{{T}},System.Int32,System.Int32)
  - System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{{T}}}.Remove(RW_ModularizationWeapon.FieldReaderInstance{{T}})
  - System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{{T}}}.System#Collections#IList#Remove(System.Object)
  - System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{{T}}}.RemoveAll(System.Predicate{RW_ModularizationWeapon.FieldReaderInstance{{T}}})
  - System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{{T}}}.RemoveAt(System.Int32)
  - System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{{T}}}.RemoveRange(System.Int32,System.Int32)
  - System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{{T}}}.Reverse
  - System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{{T}}}.Reverse(System.Int32,System.Int32)
  - System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{{T}}}.Sort
  - System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{{T}}}.Sort(System.Collections.Generic.IComparer{RW_ModularizationWeapon.FieldReaderInstance{{T}}})
  - System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{{T}}}.Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer{RW_ModularizationWeapon.FieldReaderInstance{{T}}})
  - System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{{T}}}.Sort(System.Comparison{RW_ModularizationWeapon.FieldReaderInstance{{T}}})
  - System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{{T}}}.ToArray
  - System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{{T}}}.TrimExcess
  - System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{{T}}}.TrueForAll(System.Predicate{RW_ModularizationWeapon.FieldReaderInstance{{T}}})
  - System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{{T}}}.Capacity
  - System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{{T}}}.Count
  - System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{{T}}}.System#Collections#IList#IsFixedSize
  - System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{{T}}}.System#Collections#Generic#ICollection{T}#IsReadOnly
  - System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{{T}}}.System#Collections#IList#IsReadOnly
  - System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{{T}}}.System#Collections#ICollection#IsSynchronized
  - System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{{T}}}.System#Collections#ICollection#SyncRoot
  - System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{{T}}}.Item(System.Int32)
  - System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{{T}}}.System#Collections#IList#Item(System.Int32)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  extensionMethods:
  - System.Object.RW_ModularizationWeapon.Tools.ToolsFunction.LogAllField
  nameWithType.vb: FieldReaderInstList(Of T)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: RW_ModularizationWeapon.FieldReaderInstList(Of T)
  name.vb: FieldReaderInstList(Of T)
- uid: RW_ModularizationWeapon.FieldReaderInstList`1.#ctor
  commentId: M:RW_ModularizationWeapon.FieldReaderInstList`1.#ctor
  id: '#ctor'
  parent: RW_ModularizationWeapon.FieldReaderInstList`1
  langs:
  - csharp
  - vb
  name: FieldReaderInstList()
  nameWithType: FieldReaderInstList<T>.FieldReaderInstList()
  fullName: RW_ModularizationWeapon.FieldReaderInstList<T>.FieldReaderInstList()
  type: Constructor
  source:
    remote:
      path: src/RW_ModularizationWeapon/FieldReaderList.cs
      branch: master
      repo: https://github.com/RW-NodeTree/RW_ModularizationWeapon.git
    id: .ctor
    path: FieldReaderList.cs
    startLine: 829
  assemblies:
  - RW_ModularizationWeapon
  namespace: RW_ModularizationWeapon
  syntax:
    content: public FieldReaderInstList()
    content.vb: Public Sub New
  overload: RW_ModularizationWeapon.FieldReaderInstList`1.#ctor*
  nameWithType.vb: FieldReaderInstList(Of T).FieldReaderInstList()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: RW_ModularizationWeapon.FieldReaderInstList(Of T).FieldReaderInstList()
- uid: RW_ModularizationWeapon.FieldReaderInstList`1.#ctor(RW_ModularizationWeapon.FieldReaderInstList{`0})
  commentId: M:RW_ModularizationWeapon.FieldReaderInstList`1.#ctor(RW_ModularizationWeapon.FieldReaderInstList{`0})
  id: '#ctor(RW_ModularizationWeapon.FieldReaderInstList{`0})'
  parent: RW_ModularizationWeapon.FieldReaderInstList`1
  langs:
  - csharp
  - vb
  name: FieldReaderInstList(FieldReaderInstList<T>)
  nameWithType: FieldReaderInstList<T>.FieldReaderInstList(FieldReaderInstList<T>)
  fullName: RW_ModularizationWeapon.FieldReaderInstList<T>.FieldReaderInstList(RW_ModularizationWeapon.FieldReaderInstList<T>)
  type: Constructor
  source:
    remote:
      path: src/RW_ModularizationWeapon/FieldReaderList.cs
      branch: master
      repo: https://github.com/RW-NodeTree/RW_ModularizationWeapon.git
    id: .ctor
    path: FieldReaderList.cs
    startLine: 831
  assemblies:
  - RW_ModularizationWeapon
  namespace: RW_ModularizationWeapon
  syntax:
    content: public FieldReaderInstList(FieldReaderInstList<T> other)
    parameters:
    - id: other
      type: RW_ModularizationWeapon.FieldReaderInstList`1
    content.vb: Public Sub New(other As FieldReaderInstList(Of T))
  overload: RW_ModularizationWeapon.FieldReaderInstList`1.#ctor*
  nameWithType.vb: FieldReaderInstList(Of T).FieldReaderInstList(FieldReaderInstList(Of T))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: RW_ModularizationWeapon.FieldReaderInstList(Of T).FieldReaderInstList(RW_ModularizationWeapon.FieldReaderInstList(Of T))
  name.vb: FieldReaderInstList(FieldReaderInstList(Of T))
- uid: RW_ModularizationWeapon.FieldReaderInstList`1.LoadDataFromXmlCustom(System.Xml.XmlNode)
  commentId: M:RW_ModularizationWeapon.FieldReaderInstList`1.LoadDataFromXmlCustom(System.Xml.XmlNode)
  id: LoadDataFromXmlCustom(System.Xml.XmlNode)
  parent: RW_ModularizationWeapon.FieldReaderInstList`1
  langs:
  - csharp
  - vb
  name: LoadDataFromXmlCustom(XmlNode)
  nameWithType: FieldReaderInstList<T>.LoadDataFromXmlCustom(XmlNode)
  fullName: RW_ModularizationWeapon.FieldReaderInstList<T>.LoadDataFromXmlCustom(System.Xml.XmlNode)
  type: Method
  source:
    remote:
      path: src/RW_ModularizationWeapon/FieldReaderList.cs
      branch: master
      repo: https://github.com/RW-NodeTree/RW_ModularizationWeapon.git
    id: LoadDataFromXmlCustom
    path: FieldReaderList.cs
    startLine: 833
  assemblies:
  - RW_ModularizationWeapon
  namespace: RW_ModularizationWeapon
  syntax:
    content: public void LoadDataFromXmlCustom(XmlNode xmlRoot)
    parameters:
    - id: xmlRoot
      type: System.Xml.XmlNode
    content.vb: Public Sub LoadDataFromXmlCustom(xmlRoot As XmlNode)
  overload: RW_ModularizationWeapon.FieldReaderInstList`1.LoadDataFromXmlCustom*
  nameWithType.vb: FieldReaderInstList(Of T).LoadDataFromXmlCustom(XmlNode)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: RW_ModularizationWeapon.FieldReaderInstList(Of T).LoadDataFromXmlCustom(System.Xml.XmlNode)
- uid: RW_ModularizationWeapon.FieldReaderInstList`1.ToString
  commentId: M:RW_ModularizationWeapon.FieldReaderInstList`1.ToString
  id: ToString
  parent: RW_ModularizationWeapon.FieldReaderInstList`1
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: FieldReaderInstList<T>.ToString()
  fullName: RW_ModularizationWeapon.FieldReaderInstList<T>.ToString()
  type: Method
  source:
    remote:
      path: src/RW_ModularizationWeapon/FieldReaderList.cs
      branch: master
      repo: https://github.com/RW-NodeTree/RW_ModularizationWeapon.git
    id: ToString
    path: FieldReaderList.cs
    startLine: 854
  assemblies:
  - RW_ModularizationWeapon
  namespace: RW_ModularizationWeapon
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString As String
  overridden: System.Object.ToString
  overload: RW_ModularizationWeapon.FieldReaderInstList`1.ToString*
  nameWithType.vb: FieldReaderInstList(Of T).ToString()
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: RW_ModularizationWeapon.FieldReaderInstList(Of T).ToString()
- uid: RW_ModularizationWeapon.FieldReaderInstList`1.op_BitwiseAnd(`0,RW_ModularizationWeapon.FieldReaderInstList{`0})
  commentId: M:RW_ModularizationWeapon.FieldReaderInstList`1.op_BitwiseAnd(`0,RW_ModularizationWeapon.FieldReaderInstList{`0})
  id: op_BitwiseAnd(`0,RW_ModularizationWeapon.FieldReaderInstList{`0})
  parent: RW_ModularizationWeapon.FieldReaderInstList`1
  langs:
  - csharp
  - vb
  name: BitwiseAnd(T, FieldReaderInstList<T>)
  nameWithType: FieldReaderInstList<T>.BitwiseAnd(T, FieldReaderInstList<T>)
  fullName: RW_ModularizationWeapon.FieldReaderInstList<T>.BitwiseAnd(T, RW_ModularizationWeapon.FieldReaderInstList<T>)
  type: Operator
  source:
    remote:
      path: src/RW_ModularizationWeapon/FieldReaderList.cs
      branch: master
      repo: https://github.com/RW-NodeTree/RW_ModularizationWeapon.git
    id: op_BitwiseAnd
    path: FieldReaderList.cs
    startLine: 866
  assemblies:
  - RW_ModularizationWeapon
  namespace: RW_ModularizationWeapon
  syntax:
    content: public static T operator &(T a, FieldReaderInstList<T> b)
    parameters:
    - id: a
      type: '{T}'
    - id: b
      type: RW_ModularizationWeapon.FieldReaderInstList`1
    return:
      type: '{T}'
    content.vb: Public Shared Operator And(a As T, b As FieldReaderInstList(Of T)) As T
  overload: RW_ModularizationWeapon.FieldReaderInstList`1.op_BitwiseAnd*
  nameWithType.vb: FieldReaderInstList(Of T).BitwiseAnd(T, FieldReaderInstList(Of T))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: RW_ModularizationWeapon.FieldReaderInstList(Of T).BitwiseAnd(T, RW_ModularizationWeapon.FieldReaderInstList(Of T))
  name.vb: BitwiseAnd(T, FieldReaderInstList(Of T))
- uid: RW_ModularizationWeapon.FieldReaderInstList`1.op_BitwiseOr(`0,RW_ModularizationWeapon.FieldReaderInstList{`0})
  commentId: M:RW_ModularizationWeapon.FieldReaderInstList`1.op_BitwiseOr(`0,RW_ModularizationWeapon.FieldReaderInstList{`0})
  id: op_BitwiseOr(`0,RW_ModularizationWeapon.FieldReaderInstList{`0})
  parent: RW_ModularizationWeapon.FieldReaderInstList`1
  langs:
  - csharp
  - vb
  name: BitwiseOr(T, FieldReaderInstList<T>)
  nameWithType: FieldReaderInstList<T>.BitwiseOr(T, FieldReaderInstList<T>)
  fullName: RW_ModularizationWeapon.FieldReaderInstList<T>.BitwiseOr(T, RW_ModularizationWeapon.FieldReaderInstList<T>)
  type: Operator
  source:
    remote:
      path: src/RW_ModularizationWeapon/FieldReaderList.cs
      branch: master
      repo: https://github.com/RW-NodeTree/RW_ModularizationWeapon.git
    id: op_BitwiseOr
    path: FieldReaderList.cs
    startLine: 887
  assemblies:
  - RW_ModularizationWeapon
  namespace: RW_ModularizationWeapon
  syntax:
    content: public static T operator |(T a, FieldReaderInstList<T> b)
    parameters:
    - id: a
      type: '{T}'
    - id: b
      type: RW_ModularizationWeapon.FieldReaderInstList`1
    return:
      type: '{T}'
    content.vb: Public Shared Operator Or(a As T, b As FieldReaderInstList(Of T)) As T
  overload: RW_ModularizationWeapon.FieldReaderInstList`1.op_BitwiseOr*
  nameWithType.vb: FieldReaderInstList(Of T).BitwiseOr(T, FieldReaderInstList(Of T))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: RW_ModularizationWeapon.FieldReaderInstList(Of T).BitwiseOr(T, RW_ModularizationWeapon.FieldReaderInstList(Of T))
  name.vb: BitwiseOr(T, FieldReaderInstList(Of T))
- uid: RW_ModularizationWeapon.FieldReaderInstList`1.op_BitwiseAnd(RW_ModularizationWeapon.FieldReaderInstList{`0},RW_ModularizationWeapon.FieldReaderInstList{`0})
  commentId: M:RW_ModularizationWeapon.FieldReaderInstList`1.op_BitwiseAnd(RW_ModularizationWeapon.FieldReaderInstList{`0},RW_ModularizationWeapon.FieldReaderInstList{`0})
  id: op_BitwiseAnd(RW_ModularizationWeapon.FieldReaderInstList{`0},RW_ModularizationWeapon.FieldReaderInstList{`0})
  parent: RW_ModularizationWeapon.FieldReaderInstList`1
  langs:
  - csharp
  - vb
  name: BitwiseAnd(FieldReaderInstList<T>, FieldReaderInstList<T>)
  nameWithType: FieldReaderInstList<T>.BitwiseAnd(FieldReaderInstList<T>, FieldReaderInstList<T>)
  fullName: RW_ModularizationWeapon.FieldReaderInstList<T>.BitwiseAnd(RW_ModularizationWeapon.FieldReaderInstList<T>, RW_ModularizationWeapon.FieldReaderInstList<T>)
  type: Operator
  source:
    remote:
      path: src/RW_ModularizationWeapon/FieldReaderList.cs
      branch: master
      repo: https://github.com/RW-NodeTree/RW_ModularizationWeapon.git
    id: op_BitwiseAnd
    path: FieldReaderList.cs
    startLine: 910
  assemblies:
  - RW_ModularizationWeapon
  namespace: RW_ModularizationWeapon
  syntax:
    content: public static FieldReaderInstList<T> operator &(FieldReaderInstList<T> a, FieldReaderInstList<T> b)
    parameters:
    - id: a
      type: RW_ModularizationWeapon.FieldReaderInstList`1
    - id: b
      type: RW_ModularizationWeapon.FieldReaderInstList`1
    return:
      type: RW_ModularizationWeapon.FieldReaderInstList`1
    content.vb: Public Shared Operator And(a As FieldReaderInstList(Of T), b As FieldReaderInstList(Of T)) As FieldReaderInstList(Of T)
  overload: RW_ModularizationWeapon.FieldReaderInstList`1.op_BitwiseAnd*
  nameWithType.vb: FieldReaderInstList(Of T).BitwiseAnd(FieldReaderInstList(Of T), FieldReaderInstList(Of T))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: RW_ModularizationWeapon.FieldReaderInstList(Of T).BitwiseAnd(RW_ModularizationWeapon.FieldReaderInstList(Of T), RW_ModularizationWeapon.FieldReaderInstList(Of T))
  name.vb: BitwiseAnd(FieldReaderInstList(Of T), FieldReaderInstList(Of T))
- uid: RW_ModularizationWeapon.FieldReaderInstList`1.op_BitwiseOr(RW_ModularizationWeapon.FieldReaderInstList{`0},RW_ModularizationWeapon.FieldReaderInstList{`0})
  commentId: M:RW_ModularizationWeapon.FieldReaderInstList`1.op_BitwiseOr(RW_ModularizationWeapon.FieldReaderInstList{`0},RW_ModularizationWeapon.FieldReaderInstList{`0})
  id: op_BitwiseOr(RW_ModularizationWeapon.FieldReaderInstList{`0},RW_ModularizationWeapon.FieldReaderInstList{`0})
  parent: RW_ModularizationWeapon.FieldReaderInstList`1
  langs:
  - csharp
  - vb
  name: BitwiseOr(FieldReaderInstList<T>, FieldReaderInstList<T>)
  nameWithType: FieldReaderInstList<T>.BitwiseOr(FieldReaderInstList<T>, FieldReaderInstList<T>)
  fullName: RW_ModularizationWeapon.FieldReaderInstList<T>.BitwiseOr(RW_ModularizationWeapon.FieldReaderInstList<T>, RW_ModularizationWeapon.FieldReaderInstList<T>)
  type: Operator
  source:
    remote:
      path: src/RW_ModularizationWeapon/FieldReaderList.cs
      branch: master
      repo: https://github.com/RW-NodeTree/RW_ModularizationWeapon.git
    id: op_BitwiseOr
    path: FieldReaderList.cs
    startLine: 960
  assemblies:
  - RW_ModularizationWeapon
  namespace: RW_ModularizationWeapon
  syntax:
    content: public static FieldReaderInstList<T> operator |(FieldReaderInstList<T> a, FieldReaderInstList<T> b)
    parameters:
    - id: a
      type: RW_ModularizationWeapon.FieldReaderInstList`1
    - id: b
      type: RW_ModularizationWeapon.FieldReaderInstList`1
    return:
      type: RW_ModularizationWeapon.FieldReaderInstList`1
    content.vb: Public Shared Operator Or(a As FieldReaderInstList(Of T), b As FieldReaderInstList(Of T)) As FieldReaderInstList(Of T)
  overload: RW_ModularizationWeapon.FieldReaderInstList`1.op_BitwiseOr*
  nameWithType.vb: FieldReaderInstList(Of T).BitwiseOr(FieldReaderInstList(Of T), FieldReaderInstList(Of T))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: RW_ModularizationWeapon.FieldReaderInstList(Of T).BitwiseOr(RW_ModularizationWeapon.FieldReaderInstList(Of T), RW_ModularizationWeapon.FieldReaderInstList(Of T))
  name.vb: BitwiseOr(FieldReaderInstList(Of T), FieldReaderInstList(Of T))
references:
- uid: RW_ModularizationWeapon
  commentId: N:RW_ModularizationWeapon
  name: RW_ModularizationWeapon
  nameWithType: RW_ModularizationWeapon
  fullName: RW_ModularizationWeapon
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{{T}}}
  commentId: T:System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{`0}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<FieldReaderInstance<T>>
  nameWithType: List<FieldReaderInstance<T>>
  fullName: System.Collections.Generic.List<RW_ModularizationWeapon.FieldReaderInstance<T>>
  nameWithType.vb: List(Of FieldReaderInstance(Of T))
  fullName.vb: System.Collections.Generic.List(Of RW_ModularizationWeapon.FieldReaderInstance(Of T))
  name.vb: List(Of FieldReaderInstance(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: RW_ModularizationWeapon.FieldReaderInstance`1
    name: FieldReaderInstance
    nameWithType: FieldReaderInstance
    fullName: RW_ModularizationWeapon.FieldReaderInstance
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: RW_ModularizationWeapon.FieldReaderInstance`1
    name: FieldReaderInstance
    nameWithType: FieldReaderInstance
    fullName: RW_ModularizationWeapon.FieldReaderInstance
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList{RW_ModularizationWeapon.FieldReaderInstance{{T}}}
  commentId: T:System.Collections.Generic.IList{RW_ModularizationWeapon.FieldReaderInstance{`0}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<FieldReaderInstance<T>>
  nameWithType: IList<FieldReaderInstance<T>>
  fullName: System.Collections.Generic.IList<RW_ModularizationWeapon.FieldReaderInstance<T>>
  nameWithType.vb: IList(Of FieldReaderInstance(Of T))
  fullName.vb: System.Collections.Generic.IList(Of RW_ModularizationWeapon.FieldReaderInstance(Of T))
  name.vb: IList(Of FieldReaderInstance(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: RW_ModularizationWeapon.FieldReaderInstance`1
    name: FieldReaderInstance
    nameWithType: FieldReaderInstance
    fullName: RW_ModularizationWeapon.FieldReaderInstance
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: RW_ModularizationWeapon.FieldReaderInstance`1
    name: FieldReaderInstance
    nameWithType: FieldReaderInstance
    fullName: RW_ModularizationWeapon.FieldReaderInstance
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection{RW_ModularizationWeapon.FieldReaderInstance{{T}}}
  commentId: T:System.Collections.Generic.ICollection{RW_ModularizationWeapon.FieldReaderInstance{`0}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  name: ICollection<FieldReaderInstance<T>>
  nameWithType: ICollection<FieldReaderInstance<T>>
  fullName: System.Collections.Generic.ICollection<RW_ModularizationWeapon.FieldReaderInstance<T>>
  nameWithType.vb: ICollection(Of FieldReaderInstance(Of T))
  fullName.vb: System.Collections.Generic.ICollection(Of RW_ModularizationWeapon.FieldReaderInstance(Of T))
  name.vb: ICollection(Of FieldReaderInstance(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: RW_ModularizationWeapon.FieldReaderInstance`1
    name: FieldReaderInstance
    nameWithType: FieldReaderInstance
    fullName: RW_ModularizationWeapon.FieldReaderInstance
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: RW_ModularizationWeapon.FieldReaderInstance`1
    name: FieldReaderInstance
    nameWithType: FieldReaderInstance
    fullName: RW_ModularizationWeapon.FieldReaderInstance
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IList
  commentId: T:System.Collections.IList
  parent: System.Collections
  isExternal: true
  name: IList
  nameWithType: IList
  fullName: System.Collections.IList
- uid: System.Collections.ICollection
  commentId: T:System.Collections.ICollection
  parent: System.Collections
  isExternal: true
  name: ICollection
  nameWithType: ICollection
  fullName: System.Collections.ICollection
- uid: System.Collections.Generic.IReadOnlyList{RW_ModularizationWeapon.FieldReaderInstance{{T}}}
  commentId: T:System.Collections.Generic.IReadOnlyList{RW_ModularizationWeapon.FieldReaderInstance{`0}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyList`1
  name: IReadOnlyList<FieldReaderInstance<T>>
  nameWithType: IReadOnlyList<FieldReaderInstance<T>>
  fullName: System.Collections.Generic.IReadOnlyList<RW_ModularizationWeapon.FieldReaderInstance<T>>
  nameWithType.vb: IReadOnlyList(Of FieldReaderInstance(Of T))
  fullName.vb: System.Collections.Generic.IReadOnlyList(Of RW_ModularizationWeapon.FieldReaderInstance(Of T))
  name.vb: IReadOnlyList(Of FieldReaderInstance(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: RW_ModularizationWeapon.FieldReaderInstance`1
    name: FieldReaderInstance
    nameWithType: FieldReaderInstance
    fullName: RW_ModularizationWeapon.FieldReaderInstance
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: RW_ModularizationWeapon.FieldReaderInstance`1
    name: FieldReaderInstance
    nameWithType: FieldReaderInstance
    fullName: RW_ModularizationWeapon.FieldReaderInstance
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IReadOnlyCollection{RW_ModularizationWeapon.FieldReaderInstance{{T}}}
  commentId: T:System.Collections.Generic.IReadOnlyCollection{RW_ModularizationWeapon.FieldReaderInstance{`0}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyCollection`1
  name: IReadOnlyCollection<FieldReaderInstance<T>>
  nameWithType: IReadOnlyCollection<FieldReaderInstance<T>>
  fullName: System.Collections.Generic.IReadOnlyCollection<RW_ModularizationWeapon.FieldReaderInstance<T>>
  nameWithType.vb: IReadOnlyCollection(Of FieldReaderInstance(Of T))
  fullName.vb: System.Collections.Generic.IReadOnlyCollection(Of RW_ModularizationWeapon.FieldReaderInstance(Of T))
  name.vb: IReadOnlyCollection(Of FieldReaderInstance(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: RW_ModularizationWeapon.FieldReaderInstance`1
    name: FieldReaderInstance
    nameWithType: FieldReaderInstance
    fullName: RW_ModularizationWeapon.FieldReaderInstance
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: RW_ModularizationWeapon.FieldReaderInstance`1
    name: FieldReaderInstance
    nameWithType: FieldReaderInstance
    fullName: RW_ModularizationWeapon.FieldReaderInstance
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{RW_ModularizationWeapon.FieldReaderInstance{{T}}}
  commentId: T:System.Collections.Generic.IEnumerable{RW_ModularizationWeapon.FieldReaderInstance{`0}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<FieldReaderInstance<T>>
  nameWithType: IEnumerable<FieldReaderInstance<T>>
  fullName: System.Collections.Generic.IEnumerable<RW_ModularizationWeapon.FieldReaderInstance<T>>
  nameWithType.vb: IEnumerable(Of FieldReaderInstance(Of T))
  fullName.vb: System.Collections.Generic.IEnumerable(Of RW_ModularizationWeapon.FieldReaderInstance(Of T))
  name.vb: IEnumerable(Of FieldReaderInstance(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: RW_ModularizationWeapon.FieldReaderInstance`1
    name: FieldReaderInstance
    nameWithType: FieldReaderInstance
    fullName: RW_ModularizationWeapon.FieldReaderInstance
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: RW_ModularizationWeapon.FieldReaderInstance`1
    name: FieldReaderInstance
    nameWithType: FieldReaderInstance
    fullName: RW_ModularizationWeapon.FieldReaderInstance
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IEnumerable
  commentId: T:System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{{T}}}.System#Collections#IList#get_Item(System.Int32)
  commentId: M:System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{`0}}.System#Collections#IList#get_Item(System.Int32)
  parent: System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{{T}}}
  definition: System.Collections.Generic.List`1.System#Collections#IList#get_Item(System.Int32)
  name: IList.get_Item(Int32)
  nameWithType: List<FieldReaderInstance<T>>.IList.get_Item(Int32)
  fullName: System.Collections.Generic.List<RW_ModularizationWeapon.FieldReaderInstance<T>>.System.Collections.IList.get_Item(System.Int32)
  nameWithType.vb: List(Of FieldReaderInstance(Of T)).System.Collections.IList.get_Item(Int32)
  fullName.vb: System.Collections.Generic.List(Of RW_ModularizationWeapon.FieldReaderInstance(Of T)).System.Collections.IList.get_Item(System.Int32)
  name.vb: System.Collections.IList.get_Item(Int32)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.System#Collections#IList#get_Item(System.Int32)
    name: IList.get_Item
    nameWithType: List<FieldReaderInstance<T>>.IList.get_Item
    fullName: System.Collections.Generic.List<RW_ModularizationWeapon.FieldReaderInstance<T>>.System.Collections.IList.get_Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.System#Collections#IList#get_Item(System.Int32)
    name: System.Collections.IList.get_Item
    nameWithType: List(Of FieldReaderInstance(Of T)).System.Collections.IList.get_Item
    fullName: System.Collections.Generic.List(Of RW_ModularizationWeapon.FieldReaderInstance(Of T)).System.Collections.IList.get_Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{{T}}}.System#Collections#IList#set_Item(System.Int32,System.Object)
  commentId: M:System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{`0}}.System#Collections#IList#set_Item(System.Int32,System.Object)
  parent: System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{{T}}}
  definition: System.Collections.Generic.List`1.System#Collections#IList#set_Item(System.Int32,System.Object)
  name: IList.set_Item(Int32, Object)
  nameWithType: List<FieldReaderInstance<T>>.IList.set_Item(Int32, Object)
  fullName: System.Collections.Generic.List<RW_ModularizationWeapon.FieldReaderInstance<T>>.System.Collections.IList.set_Item(System.Int32, System.Object)
  nameWithType.vb: List(Of FieldReaderInstance(Of T)).System.Collections.IList.set_Item(Int32, Object)
  fullName.vb: System.Collections.Generic.List(Of RW_ModularizationWeapon.FieldReaderInstance(Of T)).System.Collections.IList.set_Item(System.Int32, System.Object)
  name.vb: System.Collections.IList.set_Item(Int32, Object)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.System#Collections#IList#set_Item(System.Int32,System.Object)
    name: IList.set_Item
    nameWithType: List<FieldReaderInstance<T>>.IList.set_Item
    fullName: System.Collections.Generic.List<RW_ModularizationWeapon.FieldReaderInstance<T>>.System.Collections.IList.set_Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.System#Collections#IList#set_Item(System.Int32,System.Object)
    name: System.Collections.IList.set_Item
    nameWithType: List(Of FieldReaderInstance(Of T)).System.Collections.IList.set_Item
    fullName: System.Collections.Generic.List(Of RW_ModularizationWeapon.FieldReaderInstance(Of T)).System.Collections.IList.set_Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{{T}}}.Add(RW_ModularizationWeapon.FieldReaderInstance{{T}})
  commentId: M:System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{`0}}.Add(RW_ModularizationWeapon.FieldReaderInstance{`0})
  parent: System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{{T}}}
  definition: System.Collections.Generic.List`1.Add(`0)
  name: Add(FieldReaderInstance<T>)
  nameWithType: List<FieldReaderInstance<T>>.Add(FieldReaderInstance<T>)
  fullName: System.Collections.Generic.List<RW_ModularizationWeapon.FieldReaderInstance<T>>.Add(RW_ModularizationWeapon.FieldReaderInstance<T>)
  nameWithType.vb: List(Of FieldReaderInstance(Of T)).Add(FieldReaderInstance(Of T))
  fullName.vb: System.Collections.Generic.List(Of RW_ModularizationWeapon.FieldReaderInstance(Of T)).Add(RW_ModularizationWeapon.FieldReaderInstance(Of T))
  name.vb: Add(FieldReaderInstance(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.Add(`0)
    name: Add
    nameWithType: List<FieldReaderInstance<T>>.Add
    fullName: System.Collections.Generic.List<RW_ModularizationWeapon.FieldReaderInstance<T>>.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: RW_ModularizationWeapon.FieldReaderInstance`1
    name: FieldReaderInstance
    nameWithType: FieldReaderInstance
    fullName: RW_ModularizationWeapon.FieldReaderInstance
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.Add(`0)
    name: Add
    nameWithType: List(Of FieldReaderInstance(Of T)).Add
    fullName: System.Collections.Generic.List(Of RW_ModularizationWeapon.FieldReaderInstance(Of T)).Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: RW_ModularizationWeapon.FieldReaderInstance`1
    name: FieldReaderInstance
    nameWithType: FieldReaderInstance
    fullName: RW_ModularizationWeapon.FieldReaderInstance
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{{T}}}.System#Collections#IList#Add(System.Object)
  commentId: M:System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{`0}}.System#Collections#IList#Add(System.Object)
  parent: System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{{T}}}
  definition: System.Collections.Generic.List`1.System#Collections#IList#Add(System.Object)
  name: IList.Add(Object)
  nameWithType: List<FieldReaderInstance<T>>.IList.Add(Object)
  fullName: System.Collections.Generic.List<RW_ModularizationWeapon.FieldReaderInstance<T>>.System.Collections.IList.Add(System.Object)
  nameWithType.vb: List(Of FieldReaderInstance(Of T)).System.Collections.IList.Add(Object)
  fullName.vb: System.Collections.Generic.List(Of RW_ModularizationWeapon.FieldReaderInstance(Of T)).System.Collections.IList.Add(System.Object)
  name.vb: System.Collections.IList.Add(Object)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.System#Collections#IList#Add(System.Object)
    name: IList.Add
    nameWithType: List<FieldReaderInstance<T>>.IList.Add
    fullName: System.Collections.Generic.List<RW_ModularizationWeapon.FieldReaderInstance<T>>.System.Collections.IList.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.System#Collections#IList#Add(System.Object)
    name: System.Collections.IList.Add
    nameWithType: List(Of FieldReaderInstance(Of T)).System.Collections.IList.Add
    fullName: System.Collections.Generic.List(Of RW_ModularizationWeapon.FieldReaderInstance(Of T)).System.Collections.IList.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{{T}}}.AddRange(System.Collections.Generic.IEnumerable{RW_ModularizationWeapon.FieldReaderInstance{{T}}})
  commentId: M:System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{`0}}.AddRange(System.Collections.Generic.IEnumerable{RW_ModularizationWeapon.FieldReaderInstance{`0}})
  parent: System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{{T}}}
  definition: System.Collections.Generic.List`1.AddRange(System.Collections.Generic.IEnumerable{`0})
  name: AddRange(IEnumerable<FieldReaderInstance<T>>)
  nameWithType: List<FieldReaderInstance<T>>.AddRange(IEnumerable<FieldReaderInstance<T>>)
  fullName: System.Collections.Generic.List<RW_ModularizationWeapon.FieldReaderInstance<T>>.AddRange(System.Collections.Generic.IEnumerable<RW_ModularizationWeapon.FieldReaderInstance<T>>)
  nameWithType.vb: List(Of FieldReaderInstance(Of T)).AddRange(IEnumerable(Of FieldReaderInstance(Of T)))
  fullName.vb: System.Collections.Generic.List(Of RW_ModularizationWeapon.FieldReaderInstance(Of T)).AddRange(System.Collections.Generic.IEnumerable(Of RW_ModularizationWeapon.FieldReaderInstance(Of T)))
  name.vb: AddRange(IEnumerable(Of FieldReaderInstance(Of T)))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.AddRange(System.Collections.Generic.IEnumerable{`0})
    name: AddRange
    nameWithType: List<FieldReaderInstance<T>>.AddRange
    fullName: System.Collections.Generic.List<RW_ModularizationWeapon.FieldReaderInstance<T>>.AddRange
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: RW_ModularizationWeapon.FieldReaderInstance`1
    name: FieldReaderInstance
    nameWithType: FieldReaderInstance
    fullName: RW_ModularizationWeapon.FieldReaderInstance
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.AddRange(System.Collections.Generic.IEnumerable{`0})
    name: AddRange
    nameWithType: List(Of FieldReaderInstance(Of T)).AddRange
    fullName: System.Collections.Generic.List(Of RW_ModularizationWeapon.FieldReaderInstance(Of T)).AddRange
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: RW_ModularizationWeapon.FieldReaderInstance`1
    name: FieldReaderInstance
    nameWithType: FieldReaderInstance
    fullName: RW_ModularizationWeapon.FieldReaderInstance
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{{T}}}.AsReadOnly
  commentId: M:System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{`0}}.AsReadOnly
  parent: System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{{T}}}
  definition: System.Collections.Generic.List`1.AsReadOnly
  name: AsReadOnly()
  nameWithType: List<FieldReaderInstance<T>>.AsReadOnly()
  fullName: System.Collections.Generic.List<RW_ModularizationWeapon.FieldReaderInstance<T>>.AsReadOnly()
  nameWithType.vb: List(Of FieldReaderInstance(Of T)).AsReadOnly()
  fullName.vb: System.Collections.Generic.List(Of RW_ModularizationWeapon.FieldReaderInstance(Of T)).AsReadOnly()
  spec.csharp:
  - uid: System.Collections.Generic.List`1.AsReadOnly
    name: AsReadOnly
    nameWithType: List<FieldReaderInstance<T>>.AsReadOnly
    fullName: System.Collections.Generic.List<RW_ModularizationWeapon.FieldReaderInstance<T>>.AsReadOnly
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.AsReadOnly
    name: AsReadOnly
    nameWithType: List(Of FieldReaderInstance(Of T)).AsReadOnly
    fullName: System.Collections.Generic.List(Of RW_ModularizationWeapon.FieldReaderInstance(Of T)).AsReadOnly
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{{T}}}.BinarySearch(System.Int32,System.Int32,RW_ModularizationWeapon.FieldReaderInstance{{T}},System.Collections.Generic.IComparer{RW_ModularizationWeapon.FieldReaderInstance{{T}}})
  commentId: M:System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{`0}}.BinarySearch(System.Int32,System.Int32,RW_ModularizationWeapon.FieldReaderInstance{`0},System.Collections.Generic.IComparer{RW_ModularizationWeapon.FieldReaderInstance{`0}})
  parent: System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{{T}}}
  definition: System.Collections.Generic.List`1.BinarySearch(System.Int32,System.Int32,`0,System.Collections.Generic.IComparer{`0})
  name: BinarySearch(Int32, Int32, FieldReaderInstance<T>, IComparer<FieldReaderInstance<T>>)
  nameWithType: List<FieldReaderInstance<T>>.BinarySearch(Int32, Int32, FieldReaderInstance<T>, IComparer<FieldReaderInstance<T>>)
  fullName: System.Collections.Generic.List<RW_ModularizationWeapon.FieldReaderInstance<T>>.BinarySearch(System.Int32, System.Int32, RW_ModularizationWeapon.FieldReaderInstance<T>, System.Collections.Generic.IComparer<RW_ModularizationWeapon.FieldReaderInstance<T>>)
  nameWithType.vb: List(Of FieldReaderInstance(Of T)).BinarySearch(Int32, Int32, FieldReaderInstance(Of T), IComparer(Of FieldReaderInstance(Of T)))
  fullName.vb: System.Collections.Generic.List(Of RW_ModularizationWeapon.FieldReaderInstance(Of T)).BinarySearch(System.Int32, System.Int32, RW_ModularizationWeapon.FieldReaderInstance(Of T), System.Collections.Generic.IComparer(Of RW_ModularizationWeapon.FieldReaderInstance(Of T)))
  name.vb: BinarySearch(Int32, Int32, FieldReaderInstance(Of T), IComparer(Of FieldReaderInstance(Of T)))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.BinarySearch(System.Int32,System.Int32,`0,System.Collections.Generic.IComparer{`0})
    name: BinarySearch
    nameWithType: List<FieldReaderInstance<T>>.BinarySearch
    fullName: System.Collections.Generic.List<RW_ModularizationWeapon.FieldReaderInstance<T>>.BinarySearch
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: RW_ModularizationWeapon.FieldReaderInstance`1
    name: FieldReaderInstance
    nameWithType: FieldReaderInstance
    fullName: RW_ModularizationWeapon.FieldReaderInstance
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: RW_ModularizationWeapon.FieldReaderInstance`1
    name: FieldReaderInstance
    nameWithType: FieldReaderInstance
    fullName: RW_ModularizationWeapon.FieldReaderInstance
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.BinarySearch(System.Int32,System.Int32,`0,System.Collections.Generic.IComparer{`0})
    name: BinarySearch
    nameWithType: List(Of FieldReaderInstance(Of T)).BinarySearch
    fullName: System.Collections.Generic.List(Of RW_ModularizationWeapon.FieldReaderInstance(Of T)).BinarySearch
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: RW_ModularizationWeapon.FieldReaderInstance`1
    name: FieldReaderInstance
    nameWithType: FieldReaderInstance
    fullName: RW_ModularizationWeapon.FieldReaderInstance
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: RW_ModularizationWeapon.FieldReaderInstance`1
    name: FieldReaderInstance
    nameWithType: FieldReaderInstance
    fullName: RW_ModularizationWeapon.FieldReaderInstance
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{{T}}}.BinarySearch(RW_ModularizationWeapon.FieldReaderInstance{{T}})
  commentId: M:System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{`0}}.BinarySearch(RW_ModularizationWeapon.FieldReaderInstance{`0})
  parent: System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{{T}}}
  definition: System.Collections.Generic.List`1.BinarySearch(`0)
  name: BinarySearch(FieldReaderInstance<T>)
  nameWithType: List<FieldReaderInstance<T>>.BinarySearch(FieldReaderInstance<T>)
  fullName: System.Collections.Generic.List<RW_ModularizationWeapon.FieldReaderInstance<T>>.BinarySearch(RW_ModularizationWeapon.FieldReaderInstance<T>)
  nameWithType.vb: List(Of FieldReaderInstance(Of T)).BinarySearch(FieldReaderInstance(Of T))
  fullName.vb: System.Collections.Generic.List(Of RW_ModularizationWeapon.FieldReaderInstance(Of T)).BinarySearch(RW_ModularizationWeapon.FieldReaderInstance(Of T))
  name.vb: BinarySearch(FieldReaderInstance(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.BinarySearch(`0)
    name: BinarySearch
    nameWithType: List<FieldReaderInstance<T>>.BinarySearch
    fullName: System.Collections.Generic.List<RW_ModularizationWeapon.FieldReaderInstance<T>>.BinarySearch
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: RW_ModularizationWeapon.FieldReaderInstance`1
    name: FieldReaderInstance
    nameWithType: FieldReaderInstance
    fullName: RW_ModularizationWeapon.FieldReaderInstance
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.BinarySearch(`0)
    name: BinarySearch
    nameWithType: List(Of FieldReaderInstance(Of T)).BinarySearch
    fullName: System.Collections.Generic.List(Of RW_ModularizationWeapon.FieldReaderInstance(Of T)).BinarySearch
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: RW_ModularizationWeapon.FieldReaderInstance`1
    name: FieldReaderInstance
    nameWithType: FieldReaderInstance
    fullName: RW_ModularizationWeapon.FieldReaderInstance
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{{T}}}.BinarySearch(RW_ModularizationWeapon.FieldReaderInstance{{T}},System.Collections.Generic.IComparer{RW_ModularizationWeapon.FieldReaderInstance{{T}}})
  commentId: M:System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{`0}}.BinarySearch(RW_ModularizationWeapon.FieldReaderInstance{`0},System.Collections.Generic.IComparer{RW_ModularizationWeapon.FieldReaderInstance{`0}})
  parent: System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{{T}}}
  definition: System.Collections.Generic.List`1.BinarySearch(`0,System.Collections.Generic.IComparer{`0})
  name: BinarySearch(FieldReaderInstance<T>, IComparer<FieldReaderInstance<T>>)
  nameWithType: List<FieldReaderInstance<T>>.BinarySearch(FieldReaderInstance<T>, IComparer<FieldReaderInstance<T>>)
  fullName: System.Collections.Generic.List<RW_ModularizationWeapon.FieldReaderInstance<T>>.BinarySearch(RW_ModularizationWeapon.FieldReaderInstance<T>, System.Collections.Generic.IComparer<RW_ModularizationWeapon.FieldReaderInstance<T>>)
  nameWithType.vb: List(Of FieldReaderInstance(Of T)).BinarySearch(FieldReaderInstance(Of T), IComparer(Of FieldReaderInstance(Of T)))
  fullName.vb: System.Collections.Generic.List(Of RW_ModularizationWeapon.FieldReaderInstance(Of T)).BinarySearch(RW_ModularizationWeapon.FieldReaderInstance(Of T), System.Collections.Generic.IComparer(Of RW_ModularizationWeapon.FieldReaderInstance(Of T)))
  name.vb: BinarySearch(FieldReaderInstance(Of T), IComparer(Of FieldReaderInstance(Of T)))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.BinarySearch(`0,System.Collections.Generic.IComparer{`0})
    name: BinarySearch
    nameWithType: List<FieldReaderInstance<T>>.BinarySearch
    fullName: System.Collections.Generic.List<RW_ModularizationWeapon.FieldReaderInstance<T>>.BinarySearch
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: RW_ModularizationWeapon.FieldReaderInstance`1
    name: FieldReaderInstance
    nameWithType: FieldReaderInstance
    fullName: RW_ModularizationWeapon.FieldReaderInstance
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: RW_ModularizationWeapon.FieldReaderInstance`1
    name: FieldReaderInstance
    nameWithType: FieldReaderInstance
    fullName: RW_ModularizationWeapon.FieldReaderInstance
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.BinarySearch(`0,System.Collections.Generic.IComparer{`0})
    name: BinarySearch
    nameWithType: List(Of FieldReaderInstance(Of T)).BinarySearch
    fullName: System.Collections.Generic.List(Of RW_ModularizationWeapon.FieldReaderInstance(Of T)).BinarySearch
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: RW_ModularizationWeapon.FieldReaderInstance`1
    name: FieldReaderInstance
    nameWithType: FieldReaderInstance
    fullName: RW_ModularizationWeapon.FieldReaderInstance
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: RW_ModularizationWeapon.FieldReaderInstance`1
    name: FieldReaderInstance
    nameWithType: FieldReaderInstance
    fullName: RW_ModularizationWeapon.FieldReaderInstance
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{{T}}}.Clear
  commentId: M:System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{`0}}.Clear
  parent: System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{{T}}}
  definition: System.Collections.Generic.List`1.Clear
  name: Clear()
  nameWithType: List<FieldReaderInstance<T>>.Clear()
  fullName: System.Collections.Generic.List<RW_ModularizationWeapon.FieldReaderInstance<T>>.Clear()
  nameWithType.vb: List(Of FieldReaderInstance(Of T)).Clear()
  fullName.vb: System.Collections.Generic.List(Of RW_ModularizationWeapon.FieldReaderInstance(Of T)).Clear()
  spec.csharp:
  - uid: System.Collections.Generic.List`1.Clear
    name: Clear
    nameWithType: List<FieldReaderInstance<T>>.Clear
    fullName: System.Collections.Generic.List<RW_ModularizationWeapon.FieldReaderInstance<T>>.Clear
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.Clear
    name: Clear
    nameWithType: List(Of FieldReaderInstance(Of T)).Clear
    fullName: System.Collections.Generic.List(Of RW_ModularizationWeapon.FieldReaderInstance(Of T)).Clear
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{{T}}}.Contains(RW_ModularizationWeapon.FieldReaderInstance{{T}})
  commentId: M:System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{`0}}.Contains(RW_ModularizationWeapon.FieldReaderInstance{`0})
  parent: System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{{T}}}
  definition: System.Collections.Generic.List`1.Contains(`0)
  name: Contains(FieldReaderInstance<T>)
  nameWithType: List<FieldReaderInstance<T>>.Contains(FieldReaderInstance<T>)
  fullName: System.Collections.Generic.List<RW_ModularizationWeapon.FieldReaderInstance<T>>.Contains(RW_ModularizationWeapon.FieldReaderInstance<T>)
  nameWithType.vb: List(Of FieldReaderInstance(Of T)).Contains(FieldReaderInstance(Of T))
  fullName.vb: System.Collections.Generic.List(Of RW_ModularizationWeapon.FieldReaderInstance(Of T)).Contains(RW_ModularizationWeapon.FieldReaderInstance(Of T))
  name.vb: Contains(FieldReaderInstance(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.Contains(`0)
    name: Contains
    nameWithType: List<FieldReaderInstance<T>>.Contains
    fullName: System.Collections.Generic.List<RW_ModularizationWeapon.FieldReaderInstance<T>>.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: RW_ModularizationWeapon.FieldReaderInstance`1
    name: FieldReaderInstance
    nameWithType: FieldReaderInstance
    fullName: RW_ModularizationWeapon.FieldReaderInstance
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.Contains(`0)
    name: Contains
    nameWithType: List(Of FieldReaderInstance(Of T)).Contains
    fullName: System.Collections.Generic.List(Of RW_ModularizationWeapon.FieldReaderInstance(Of T)).Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: RW_ModularizationWeapon.FieldReaderInstance`1
    name: FieldReaderInstance
    nameWithType: FieldReaderInstance
    fullName: RW_ModularizationWeapon.FieldReaderInstance
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{{T}}}.System#Collections#IList#Contains(System.Object)
  commentId: M:System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{`0}}.System#Collections#IList#Contains(System.Object)
  parent: System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{{T}}}
  definition: System.Collections.Generic.List`1.System#Collections#IList#Contains(System.Object)
  name: IList.Contains(Object)
  nameWithType: List<FieldReaderInstance<T>>.IList.Contains(Object)
  fullName: System.Collections.Generic.List<RW_ModularizationWeapon.FieldReaderInstance<T>>.System.Collections.IList.Contains(System.Object)
  nameWithType.vb: List(Of FieldReaderInstance(Of T)).System.Collections.IList.Contains(Object)
  fullName.vb: System.Collections.Generic.List(Of RW_ModularizationWeapon.FieldReaderInstance(Of T)).System.Collections.IList.Contains(System.Object)
  name.vb: System.Collections.IList.Contains(Object)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.System#Collections#IList#Contains(System.Object)
    name: IList.Contains
    nameWithType: List<FieldReaderInstance<T>>.IList.Contains
    fullName: System.Collections.Generic.List<RW_ModularizationWeapon.FieldReaderInstance<T>>.System.Collections.IList.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.System#Collections#IList#Contains(System.Object)
    name: System.Collections.IList.Contains
    nameWithType: List(Of FieldReaderInstance(Of T)).System.Collections.IList.Contains
    fullName: System.Collections.Generic.List(Of RW_ModularizationWeapon.FieldReaderInstance(Of T)).System.Collections.IList.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{{T}}}.ConvertAll``1(System.Converter{RW_ModularizationWeapon.FieldReaderInstance{{T}},{TOutput}})
  commentId: M:System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{`0}}.ConvertAll``1(System.Converter{RW_ModularizationWeapon.FieldReaderInstance{`0},``0})
  parent: System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{{T}}}
  definition: System.Collections.Generic.List`1.ConvertAll``1(System.Converter{`0,``0})
  name: ConvertAll<TOutput>(Converter<FieldReaderInstance<T>, TOutput>)
  nameWithType: List<FieldReaderInstance<T>>.ConvertAll<TOutput>(Converter<FieldReaderInstance<T>, TOutput>)
  fullName: System.Collections.Generic.List<RW_ModularizationWeapon.FieldReaderInstance<T>>.ConvertAll<TOutput>(System.Converter<RW_ModularizationWeapon.FieldReaderInstance<T>, TOutput>)
  nameWithType.vb: List(Of FieldReaderInstance(Of T)).ConvertAll(Of TOutput)(Converter(Of FieldReaderInstance(Of T), TOutput))
  fullName.vb: System.Collections.Generic.List(Of RW_ModularizationWeapon.FieldReaderInstance(Of T)).ConvertAll(Of TOutput)(System.Converter(Of RW_ModularizationWeapon.FieldReaderInstance(Of T), TOutput))
  name.vb: ConvertAll(Of TOutput)(Converter(Of FieldReaderInstance(Of T), TOutput))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.ConvertAll``1(System.Converter{`0,``0})
    name: ConvertAll<TOutput>
    nameWithType: List<FieldReaderInstance<T>>.ConvertAll<TOutput>
    fullName: System.Collections.Generic.List<RW_ModularizationWeapon.FieldReaderInstance<T>>.ConvertAll<TOutput>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Converter`2
    name: Converter
    nameWithType: Converter
    fullName: System.Converter
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: RW_ModularizationWeapon.FieldReaderInstance`1
    name: FieldReaderInstance
    nameWithType: FieldReaderInstance
    fullName: RW_ModularizationWeapon.FieldReaderInstance
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TOutput
    nameWithType: TOutput
    fullName: TOutput
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.ConvertAll``1(System.Converter{`0,``0})
    name: ConvertAll(Of TOutput)
    nameWithType: List(Of FieldReaderInstance(Of T)).ConvertAll(Of TOutput)
    fullName: System.Collections.Generic.List(Of RW_ModularizationWeapon.FieldReaderInstance(Of T)).ConvertAll(Of TOutput)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Converter`2
    name: Converter
    nameWithType: Converter
    fullName: System.Converter
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: RW_ModularizationWeapon.FieldReaderInstance`1
    name: FieldReaderInstance
    nameWithType: FieldReaderInstance
    fullName: RW_ModularizationWeapon.FieldReaderInstance
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TOutput
    nameWithType: TOutput
    fullName: TOutput
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{{T}}}.CopyTo(RW_ModularizationWeapon.FieldReaderInstance{{T}}[])
  commentId: M:System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{`0}}.CopyTo(RW_ModularizationWeapon.FieldReaderInstance{`0}[])
  parent: System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{{T}}}
  definition: System.Collections.Generic.List`1.CopyTo(`0[])
  name: CopyTo(FieldReaderInstance<T>[])
  nameWithType: List<FieldReaderInstance<T>>.CopyTo(FieldReaderInstance<T>[])
  fullName: System.Collections.Generic.List<RW_ModularizationWeapon.FieldReaderInstance<T>>.CopyTo(RW_ModularizationWeapon.FieldReaderInstance<T>[])
  nameWithType.vb: List(Of FieldReaderInstance(Of T)).CopyTo(FieldReaderInstance(Of T)())
  fullName.vb: System.Collections.Generic.List(Of RW_ModularizationWeapon.FieldReaderInstance(Of T)).CopyTo(RW_ModularizationWeapon.FieldReaderInstance(Of T)())
  name.vb: CopyTo(FieldReaderInstance(Of T)())
  spec.csharp:
  - uid: System.Collections.Generic.List`1.CopyTo(`0[])
    name: CopyTo
    nameWithType: List<FieldReaderInstance<T>>.CopyTo
    fullName: System.Collections.Generic.List<RW_ModularizationWeapon.FieldReaderInstance<T>>.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: RW_ModularizationWeapon.FieldReaderInstance`1
    name: FieldReaderInstance
    nameWithType: FieldReaderInstance
    fullName: RW_ModularizationWeapon.FieldReaderInstance
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.CopyTo(`0[])
    name: CopyTo
    nameWithType: List(Of FieldReaderInstance(Of T)).CopyTo
    fullName: System.Collections.Generic.List(Of RW_ModularizationWeapon.FieldReaderInstance(Of T)).CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: RW_ModularizationWeapon.FieldReaderInstance`1
    name: FieldReaderInstance
    nameWithType: FieldReaderInstance
    fullName: RW_ModularizationWeapon.FieldReaderInstance
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{{T}}}.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  commentId: M:System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{`0}}.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  parent: System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{{T}}}
  definition: System.Collections.Generic.List`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  name: ICollection.CopyTo(Array, Int32)
  nameWithType: List<FieldReaderInstance<T>>.ICollection.CopyTo(Array, Int32)
  fullName: System.Collections.Generic.List<RW_ModularizationWeapon.FieldReaderInstance<T>>.System.Collections.ICollection.CopyTo(System.Array, System.Int32)
  nameWithType.vb: List(Of FieldReaderInstance(Of T)).System.Collections.ICollection.CopyTo(Array, Int32)
  fullName.vb: System.Collections.Generic.List(Of RW_ModularizationWeapon.FieldReaderInstance(Of T)).System.Collections.ICollection.CopyTo(System.Array, System.Int32)
  name.vb: System.Collections.ICollection.CopyTo(Array, Int32)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
    name: ICollection.CopyTo
    nameWithType: List<FieldReaderInstance<T>>.ICollection.CopyTo
    fullName: System.Collections.Generic.List<RW_ModularizationWeapon.FieldReaderInstance<T>>.System.Collections.ICollection.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Array
    name: Array
    nameWithType: Array
    fullName: System.Array
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
    name: System.Collections.ICollection.CopyTo
    nameWithType: List(Of FieldReaderInstance(Of T)).System.Collections.ICollection.CopyTo
    fullName: System.Collections.Generic.List(Of RW_ModularizationWeapon.FieldReaderInstance(Of T)).System.Collections.ICollection.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Array
    name: Array
    nameWithType: Array
    fullName: System.Array
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{{T}}}.CopyTo(System.Int32,RW_ModularizationWeapon.FieldReaderInstance{{T}}[],System.Int32,System.Int32)
  commentId: M:System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{`0}}.CopyTo(System.Int32,RW_ModularizationWeapon.FieldReaderInstance{`0}[],System.Int32,System.Int32)
  parent: System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{{T}}}
  definition: System.Collections.Generic.List`1.CopyTo(System.Int32,`0[],System.Int32,System.Int32)
  name: CopyTo(Int32, FieldReaderInstance<T>[], Int32, Int32)
  nameWithType: List<FieldReaderInstance<T>>.CopyTo(Int32, FieldReaderInstance<T>[], Int32, Int32)
  fullName: System.Collections.Generic.List<RW_ModularizationWeapon.FieldReaderInstance<T>>.CopyTo(System.Int32, RW_ModularizationWeapon.FieldReaderInstance<T>[], System.Int32, System.Int32)
  nameWithType.vb: List(Of FieldReaderInstance(Of T)).CopyTo(Int32, FieldReaderInstance(Of T)(), Int32, Int32)
  fullName.vb: System.Collections.Generic.List(Of RW_ModularizationWeapon.FieldReaderInstance(Of T)).CopyTo(System.Int32, RW_ModularizationWeapon.FieldReaderInstance(Of T)(), System.Int32, System.Int32)
  name.vb: CopyTo(Int32, FieldReaderInstance(Of T)(), Int32, Int32)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.CopyTo(System.Int32,`0[],System.Int32,System.Int32)
    name: CopyTo
    nameWithType: List<FieldReaderInstance<T>>.CopyTo
    fullName: System.Collections.Generic.List<RW_ModularizationWeapon.FieldReaderInstance<T>>.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: RW_ModularizationWeapon.FieldReaderInstance`1
    name: FieldReaderInstance
    nameWithType: FieldReaderInstance
    fullName: RW_ModularizationWeapon.FieldReaderInstance
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.CopyTo(System.Int32,`0[],System.Int32,System.Int32)
    name: CopyTo
    nameWithType: List(Of FieldReaderInstance(Of T)).CopyTo
    fullName: System.Collections.Generic.List(Of RW_ModularizationWeapon.FieldReaderInstance(Of T)).CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: RW_ModularizationWeapon.FieldReaderInstance`1
    name: FieldReaderInstance
    nameWithType: FieldReaderInstance
    fullName: RW_ModularizationWeapon.FieldReaderInstance
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{{T}}}.CopyTo(RW_ModularizationWeapon.FieldReaderInstance{{T}}[],System.Int32)
  commentId: M:System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{`0}}.CopyTo(RW_ModularizationWeapon.FieldReaderInstance{`0}[],System.Int32)
  parent: System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{{T}}}
  definition: System.Collections.Generic.List`1.CopyTo(`0[],System.Int32)
  name: CopyTo(FieldReaderInstance<T>[], Int32)
  nameWithType: List<FieldReaderInstance<T>>.CopyTo(FieldReaderInstance<T>[], Int32)
  fullName: System.Collections.Generic.List<RW_ModularizationWeapon.FieldReaderInstance<T>>.CopyTo(RW_ModularizationWeapon.FieldReaderInstance<T>[], System.Int32)
  nameWithType.vb: List(Of FieldReaderInstance(Of T)).CopyTo(FieldReaderInstance(Of T)(), Int32)
  fullName.vb: System.Collections.Generic.List(Of RW_ModularizationWeapon.FieldReaderInstance(Of T)).CopyTo(RW_ModularizationWeapon.FieldReaderInstance(Of T)(), System.Int32)
  name.vb: CopyTo(FieldReaderInstance(Of T)(), Int32)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    nameWithType: List<FieldReaderInstance<T>>.CopyTo
    fullName: System.Collections.Generic.List<RW_ModularizationWeapon.FieldReaderInstance<T>>.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: RW_ModularizationWeapon.FieldReaderInstance`1
    name: FieldReaderInstance
    nameWithType: FieldReaderInstance
    fullName: RW_ModularizationWeapon.FieldReaderInstance
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    nameWithType: List(Of FieldReaderInstance(Of T)).CopyTo
    fullName: System.Collections.Generic.List(Of RW_ModularizationWeapon.FieldReaderInstance(Of T)).CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: RW_ModularizationWeapon.FieldReaderInstance`1
    name: FieldReaderInstance
    nameWithType: FieldReaderInstance
    fullName: RW_ModularizationWeapon.FieldReaderInstance
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{{T}}}.Exists(System.Predicate{RW_ModularizationWeapon.FieldReaderInstance{{T}}})
  commentId: M:System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{`0}}.Exists(System.Predicate{RW_ModularizationWeapon.FieldReaderInstance{`0}})
  parent: System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{{T}}}
  definition: System.Collections.Generic.List`1.Exists(System.Predicate{`0})
  name: Exists(Predicate<FieldReaderInstance<T>>)
  nameWithType: List<FieldReaderInstance<T>>.Exists(Predicate<FieldReaderInstance<T>>)
  fullName: System.Collections.Generic.List<RW_ModularizationWeapon.FieldReaderInstance<T>>.Exists(System.Predicate<RW_ModularizationWeapon.FieldReaderInstance<T>>)
  nameWithType.vb: List(Of FieldReaderInstance(Of T)).Exists(Predicate(Of FieldReaderInstance(Of T)))
  fullName.vb: System.Collections.Generic.List(Of RW_ModularizationWeapon.FieldReaderInstance(Of T)).Exists(System.Predicate(Of RW_ModularizationWeapon.FieldReaderInstance(Of T)))
  name.vb: Exists(Predicate(Of FieldReaderInstance(Of T)))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.Exists(System.Predicate{`0})
    name: Exists
    nameWithType: List<FieldReaderInstance<T>>.Exists
    fullName: System.Collections.Generic.List<RW_ModularizationWeapon.FieldReaderInstance<T>>.Exists
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: RW_ModularizationWeapon.FieldReaderInstance`1
    name: FieldReaderInstance
    nameWithType: FieldReaderInstance
    fullName: RW_ModularizationWeapon.FieldReaderInstance
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.Exists(System.Predicate{`0})
    name: Exists
    nameWithType: List(Of FieldReaderInstance(Of T)).Exists
    fullName: System.Collections.Generic.List(Of RW_ModularizationWeapon.FieldReaderInstance(Of T)).Exists
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: RW_ModularizationWeapon.FieldReaderInstance`1
    name: FieldReaderInstance
    nameWithType: FieldReaderInstance
    fullName: RW_ModularizationWeapon.FieldReaderInstance
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{{T}}}.Find(System.Predicate{RW_ModularizationWeapon.FieldReaderInstance{{T}}})
  commentId: M:System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{`0}}.Find(System.Predicate{RW_ModularizationWeapon.FieldReaderInstance{`0}})
  parent: System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{{T}}}
  definition: System.Collections.Generic.List`1.Find(System.Predicate{`0})
  name: Find(Predicate<FieldReaderInstance<T>>)
  nameWithType: List<FieldReaderInstance<T>>.Find(Predicate<FieldReaderInstance<T>>)
  fullName: System.Collections.Generic.List<RW_ModularizationWeapon.FieldReaderInstance<T>>.Find(System.Predicate<RW_ModularizationWeapon.FieldReaderInstance<T>>)
  nameWithType.vb: List(Of FieldReaderInstance(Of T)).Find(Predicate(Of FieldReaderInstance(Of T)))
  fullName.vb: System.Collections.Generic.List(Of RW_ModularizationWeapon.FieldReaderInstance(Of T)).Find(System.Predicate(Of RW_ModularizationWeapon.FieldReaderInstance(Of T)))
  name.vb: Find(Predicate(Of FieldReaderInstance(Of T)))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.Find(System.Predicate{`0})
    name: Find
    nameWithType: List<FieldReaderInstance<T>>.Find
    fullName: System.Collections.Generic.List<RW_ModularizationWeapon.FieldReaderInstance<T>>.Find
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: RW_ModularizationWeapon.FieldReaderInstance`1
    name: FieldReaderInstance
    nameWithType: FieldReaderInstance
    fullName: RW_ModularizationWeapon.FieldReaderInstance
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.Find(System.Predicate{`0})
    name: Find
    nameWithType: List(Of FieldReaderInstance(Of T)).Find
    fullName: System.Collections.Generic.List(Of RW_ModularizationWeapon.FieldReaderInstance(Of T)).Find
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: RW_ModularizationWeapon.FieldReaderInstance`1
    name: FieldReaderInstance
    nameWithType: FieldReaderInstance
    fullName: RW_ModularizationWeapon.FieldReaderInstance
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{{T}}}.FindAll(System.Predicate{RW_ModularizationWeapon.FieldReaderInstance{{T}}})
  commentId: M:System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{`0}}.FindAll(System.Predicate{RW_ModularizationWeapon.FieldReaderInstance{`0}})
  parent: System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{{T}}}
  definition: System.Collections.Generic.List`1.FindAll(System.Predicate{`0})
  name: FindAll(Predicate<FieldReaderInstance<T>>)
  nameWithType: List<FieldReaderInstance<T>>.FindAll(Predicate<FieldReaderInstance<T>>)
  fullName: System.Collections.Generic.List<RW_ModularizationWeapon.FieldReaderInstance<T>>.FindAll(System.Predicate<RW_ModularizationWeapon.FieldReaderInstance<T>>)
  nameWithType.vb: List(Of FieldReaderInstance(Of T)).FindAll(Predicate(Of FieldReaderInstance(Of T)))
  fullName.vb: System.Collections.Generic.List(Of RW_ModularizationWeapon.FieldReaderInstance(Of T)).FindAll(System.Predicate(Of RW_ModularizationWeapon.FieldReaderInstance(Of T)))
  name.vb: FindAll(Predicate(Of FieldReaderInstance(Of T)))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.FindAll(System.Predicate{`0})
    name: FindAll
    nameWithType: List<FieldReaderInstance<T>>.FindAll
    fullName: System.Collections.Generic.List<RW_ModularizationWeapon.FieldReaderInstance<T>>.FindAll
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: RW_ModularizationWeapon.FieldReaderInstance`1
    name: FieldReaderInstance
    nameWithType: FieldReaderInstance
    fullName: RW_ModularizationWeapon.FieldReaderInstance
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.FindAll(System.Predicate{`0})
    name: FindAll
    nameWithType: List(Of FieldReaderInstance(Of T)).FindAll
    fullName: System.Collections.Generic.List(Of RW_ModularizationWeapon.FieldReaderInstance(Of T)).FindAll
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: RW_ModularizationWeapon.FieldReaderInstance`1
    name: FieldReaderInstance
    nameWithType: FieldReaderInstance
    fullName: RW_ModularizationWeapon.FieldReaderInstance
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{{T}}}.FindIndex(System.Predicate{RW_ModularizationWeapon.FieldReaderInstance{{T}}})
  commentId: M:System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{`0}}.FindIndex(System.Predicate{RW_ModularizationWeapon.FieldReaderInstance{`0}})
  parent: System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{{T}}}
  definition: System.Collections.Generic.List`1.FindIndex(System.Predicate{`0})
  name: FindIndex(Predicate<FieldReaderInstance<T>>)
  nameWithType: List<FieldReaderInstance<T>>.FindIndex(Predicate<FieldReaderInstance<T>>)
  fullName: System.Collections.Generic.List<RW_ModularizationWeapon.FieldReaderInstance<T>>.FindIndex(System.Predicate<RW_ModularizationWeapon.FieldReaderInstance<T>>)
  nameWithType.vb: List(Of FieldReaderInstance(Of T)).FindIndex(Predicate(Of FieldReaderInstance(Of T)))
  fullName.vb: System.Collections.Generic.List(Of RW_ModularizationWeapon.FieldReaderInstance(Of T)).FindIndex(System.Predicate(Of RW_ModularizationWeapon.FieldReaderInstance(Of T)))
  name.vb: FindIndex(Predicate(Of FieldReaderInstance(Of T)))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.FindIndex(System.Predicate{`0})
    name: FindIndex
    nameWithType: List<FieldReaderInstance<T>>.FindIndex
    fullName: System.Collections.Generic.List<RW_ModularizationWeapon.FieldReaderInstance<T>>.FindIndex
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: RW_ModularizationWeapon.FieldReaderInstance`1
    name: FieldReaderInstance
    nameWithType: FieldReaderInstance
    fullName: RW_ModularizationWeapon.FieldReaderInstance
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.FindIndex(System.Predicate{`0})
    name: FindIndex
    nameWithType: List(Of FieldReaderInstance(Of T)).FindIndex
    fullName: System.Collections.Generic.List(Of RW_ModularizationWeapon.FieldReaderInstance(Of T)).FindIndex
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: RW_ModularizationWeapon.FieldReaderInstance`1
    name: FieldReaderInstance
    nameWithType: FieldReaderInstance
    fullName: RW_ModularizationWeapon.FieldReaderInstance
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{{T}}}.FindIndex(System.Int32,System.Predicate{RW_ModularizationWeapon.FieldReaderInstance{{T}}})
  commentId: M:System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{`0}}.FindIndex(System.Int32,System.Predicate{RW_ModularizationWeapon.FieldReaderInstance{`0}})
  parent: System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{{T}}}
  definition: System.Collections.Generic.List`1.FindIndex(System.Int32,System.Predicate{`0})
  name: FindIndex(Int32, Predicate<FieldReaderInstance<T>>)
  nameWithType: List<FieldReaderInstance<T>>.FindIndex(Int32, Predicate<FieldReaderInstance<T>>)
  fullName: System.Collections.Generic.List<RW_ModularizationWeapon.FieldReaderInstance<T>>.FindIndex(System.Int32, System.Predicate<RW_ModularizationWeapon.FieldReaderInstance<T>>)
  nameWithType.vb: List(Of FieldReaderInstance(Of T)).FindIndex(Int32, Predicate(Of FieldReaderInstance(Of T)))
  fullName.vb: System.Collections.Generic.List(Of RW_ModularizationWeapon.FieldReaderInstance(Of T)).FindIndex(System.Int32, System.Predicate(Of RW_ModularizationWeapon.FieldReaderInstance(Of T)))
  name.vb: FindIndex(Int32, Predicate(Of FieldReaderInstance(Of T)))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.FindIndex(System.Int32,System.Predicate{`0})
    name: FindIndex
    nameWithType: List<FieldReaderInstance<T>>.FindIndex
    fullName: System.Collections.Generic.List<RW_ModularizationWeapon.FieldReaderInstance<T>>.FindIndex
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: RW_ModularizationWeapon.FieldReaderInstance`1
    name: FieldReaderInstance
    nameWithType: FieldReaderInstance
    fullName: RW_ModularizationWeapon.FieldReaderInstance
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.FindIndex(System.Int32,System.Predicate{`0})
    name: FindIndex
    nameWithType: List(Of FieldReaderInstance(Of T)).FindIndex
    fullName: System.Collections.Generic.List(Of RW_ModularizationWeapon.FieldReaderInstance(Of T)).FindIndex
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: RW_ModularizationWeapon.FieldReaderInstance`1
    name: FieldReaderInstance
    nameWithType: FieldReaderInstance
    fullName: RW_ModularizationWeapon.FieldReaderInstance
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{{T}}}.FindIndex(System.Int32,System.Int32,System.Predicate{RW_ModularizationWeapon.FieldReaderInstance{{T}}})
  commentId: M:System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{`0}}.FindIndex(System.Int32,System.Int32,System.Predicate{RW_ModularizationWeapon.FieldReaderInstance{`0}})
  parent: System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{{T}}}
  definition: System.Collections.Generic.List`1.FindIndex(System.Int32,System.Int32,System.Predicate{`0})
  name: FindIndex(Int32, Int32, Predicate<FieldReaderInstance<T>>)
  nameWithType: List<FieldReaderInstance<T>>.FindIndex(Int32, Int32, Predicate<FieldReaderInstance<T>>)
  fullName: System.Collections.Generic.List<RW_ModularizationWeapon.FieldReaderInstance<T>>.FindIndex(System.Int32, System.Int32, System.Predicate<RW_ModularizationWeapon.FieldReaderInstance<T>>)
  nameWithType.vb: List(Of FieldReaderInstance(Of T)).FindIndex(Int32, Int32, Predicate(Of FieldReaderInstance(Of T)))
  fullName.vb: System.Collections.Generic.List(Of RW_ModularizationWeapon.FieldReaderInstance(Of T)).FindIndex(System.Int32, System.Int32, System.Predicate(Of RW_ModularizationWeapon.FieldReaderInstance(Of T)))
  name.vb: FindIndex(Int32, Int32, Predicate(Of FieldReaderInstance(Of T)))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.FindIndex(System.Int32,System.Int32,System.Predicate{`0})
    name: FindIndex
    nameWithType: List<FieldReaderInstance<T>>.FindIndex
    fullName: System.Collections.Generic.List<RW_ModularizationWeapon.FieldReaderInstance<T>>.FindIndex
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: RW_ModularizationWeapon.FieldReaderInstance`1
    name: FieldReaderInstance
    nameWithType: FieldReaderInstance
    fullName: RW_ModularizationWeapon.FieldReaderInstance
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.FindIndex(System.Int32,System.Int32,System.Predicate{`0})
    name: FindIndex
    nameWithType: List(Of FieldReaderInstance(Of T)).FindIndex
    fullName: System.Collections.Generic.List(Of RW_ModularizationWeapon.FieldReaderInstance(Of T)).FindIndex
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: RW_ModularizationWeapon.FieldReaderInstance`1
    name: FieldReaderInstance
    nameWithType: FieldReaderInstance
    fullName: RW_ModularizationWeapon.FieldReaderInstance
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{{T}}}.FindLast(System.Predicate{RW_ModularizationWeapon.FieldReaderInstance{{T}}})
  commentId: M:System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{`0}}.FindLast(System.Predicate{RW_ModularizationWeapon.FieldReaderInstance{`0}})
  parent: System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{{T}}}
  definition: System.Collections.Generic.List`1.FindLast(System.Predicate{`0})
  name: FindLast(Predicate<FieldReaderInstance<T>>)
  nameWithType: List<FieldReaderInstance<T>>.FindLast(Predicate<FieldReaderInstance<T>>)
  fullName: System.Collections.Generic.List<RW_ModularizationWeapon.FieldReaderInstance<T>>.FindLast(System.Predicate<RW_ModularizationWeapon.FieldReaderInstance<T>>)
  nameWithType.vb: List(Of FieldReaderInstance(Of T)).FindLast(Predicate(Of FieldReaderInstance(Of T)))
  fullName.vb: System.Collections.Generic.List(Of RW_ModularizationWeapon.FieldReaderInstance(Of T)).FindLast(System.Predicate(Of RW_ModularizationWeapon.FieldReaderInstance(Of T)))
  name.vb: FindLast(Predicate(Of FieldReaderInstance(Of T)))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.FindLast(System.Predicate{`0})
    name: FindLast
    nameWithType: List<FieldReaderInstance<T>>.FindLast
    fullName: System.Collections.Generic.List<RW_ModularizationWeapon.FieldReaderInstance<T>>.FindLast
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: RW_ModularizationWeapon.FieldReaderInstance`1
    name: FieldReaderInstance
    nameWithType: FieldReaderInstance
    fullName: RW_ModularizationWeapon.FieldReaderInstance
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.FindLast(System.Predicate{`0})
    name: FindLast
    nameWithType: List(Of FieldReaderInstance(Of T)).FindLast
    fullName: System.Collections.Generic.List(Of RW_ModularizationWeapon.FieldReaderInstance(Of T)).FindLast
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: RW_ModularizationWeapon.FieldReaderInstance`1
    name: FieldReaderInstance
    nameWithType: FieldReaderInstance
    fullName: RW_ModularizationWeapon.FieldReaderInstance
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{{T}}}.FindLastIndex(System.Predicate{RW_ModularizationWeapon.FieldReaderInstance{{T}}})
  commentId: M:System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{`0}}.FindLastIndex(System.Predicate{RW_ModularizationWeapon.FieldReaderInstance{`0}})
  parent: System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{{T}}}
  definition: System.Collections.Generic.List`1.FindLastIndex(System.Predicate{`0})
  name: FindLastIndex(Predicate<FieldReaderInstance<T>>)
  nameWithType: List<FieldReaderInstance<T>>.FindLastIndex(Predicate<FieldReaderInstance<T>>)
  fullName: System.Collections.Generic.List<RW_ModularizationWeapon.FieldReaderInstance<T>>.FindLastIndex(System.Predicate<RW_ModularizationWeapon.FieldReaderInstance<T>>)
  nameWithType.vb: List(Of FieldReaderInstance(Of T)).FindLastIndex(Predicate(Of FieldReaderInstance(Of T)))
  fullName.vb: System.Collections.Generic.List(Of RW_ModularizationWeapon.FieldReaderInstance(Of T)).FindLastIndex(System.Predicate(Of RW_ModularizationWeapon.FieldReaderInstance(Of T)))
  name.vb: FindLastIndex(Predicate(Of FieldReaderInstance(Of T)))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.FindLastIndex(System.Predicate{`0})
    name: FindLastIndex
    nameWithType: List<FieldReaderInstance<T>>.FindLastIndex
    fullName: System.Collections.Generic.List<RW_ModularizationWeapon.FieldReaderInstance<T>>.FindLastIndex
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: RW_ModularizationWeapon.FieldReaderInstance`1
    name: FieldReaderInstance
    nameWithType: FieldReaderInstance
    fullName: RW_ModularizationWeapon.FieldReaderInstance
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.FindLastIndex(System.Predicate{`0})
    name: FindLastIndex
    nameWithType: List(Of FieldReaderInstance(Of T)).FindLastIndex
    fullName: System.Collections.Generic.List(Of RW_ModularizationWeapon.FieldReaderInstance(Of T)).FindLastIndex
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: RW_ModularizationWeapon.FieldReaderInstance`1
    name: FieldReaderInstance
    nameWithType: FieldReaderInstance
    fullName: RW_ModularizationWeapon.FieldReaderInstance
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{{T}}}.FindLastIndex(System.Int32,System.Predicate{RW_ModularizationWeapon.FieldReaderInstance{{T}}})
  commentId: M:System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{`0}}.FindLastIndex(System.Int32,System.Predicate{RW_ModularizationWeapon.FieldReaderInstance{`0}})
  parent: System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{{T}}}
  definition: System.Collections.Generic.List`1.FindLastIndex(System.Int32,System.Predicate{`0})
  name: FindLastIndex(Int32, Predicate<FieldReaderInstance<T>>)
  nameWithType: List<FieldReaderInstance<T>>.FindLastIndex(Int32, Predicate<FieldReaderInstance<T>>)
  fullName: System.Collections.Generic.List<RW_ModularizationWeapon.FieldReaderInstance<T>>.FindLastIndex(System.Int32, System.Predicate<RW_ModularizationWeapon.FieldReaderInstance<T>>)
  nameWithType.vb: List(Of FieldReaderInstance(Of T)).FindLastIndex(Int32, Predicate(Of FieldReaderInstance(Of T)))
  fullName.vb: System.Collections.Generic.List(Of RW_ModularizationWeapon.FieldReaderInstance(Of T)).FindLastIndex(System.Int32, System.Predicate(Of RW_ModularizationWeapon.FieldReaderInstance(Of T)))
  name.vb: FindLastIndex(Int32, Predicate(Of FieldReaderInstance(Of T)))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.FindLastIndex(System.Int32,System.Predicate{`0})
    name: FindLastIndex
    nameWithType: List<FieldReaderInstance<T>>.FindLastIndex
    fullName: System.Collections.Generic.List<RW_ModularizationWeapon.FieldReaderInstance<T>>.FindLastIndex
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: RW_ModularizationWeapon.FieldReaderInstance`1
    name: FieldReaderInstance
    nameWithType: FieldReaderInstance
    fullName: RW_ModularizationWeapon.FieldReaderInstance
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.FindLastIndex(System.Int32,System.Predicate{`0})
    name: FindLastIndex
    nameWithType: List(Of FieldReaderInstance(Of T)).FindLastIndex
    fullName: System.Collections.Generic.List(Of RW_ModularizationWeapon.FieldReaderInstance(Of T)).FindLastIndex
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: RW_ModularizationWeapon.FieldReaderInstance`1
    name: FieldReaderInstance
    nameWithType: FieldReaderInstance
    fullName: RW_ModularizationWeapon.FieldReaderInstance
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{{T}}}.FindLastIndex(System.Int32,System.Int32,System.Predicate{RW_ModularizationWeapon.FieldReaderInstance{{T}}})
  commentId: M:System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{`0}}.FindLastIndex(System.Int32,System.Int32,System.Predicate{RW_ModularizationWeapon.FieldReaderInstance{`0}})
  parent: System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{{T}}}
  definition: System.Collections.Generic.List`1.FindLastIndex(System.Int32,System.Int32,System.Predicate{`0})
  name: FindLastIndex(Int32, Int32, Predicate<FieldReaderInstance<T>>)
  nameWithType: List<FieldReaderInstance<T>>.FindLastIndex(Int32, Int32, Predicate<FieldReaderInstance<T>>)
  fullName: System.Collections.Generic.List<RW_ModularizationWeapon.FieldReaderInstance<T>>.FindLastIndex(System.Int32, System.Int32, System.Predicate<RW_ModularizationWeapon.FieldReaderInstance<T>>)
  nameWithType.vb: List(Of FieldReaderInstance(Of T)).FindLastIndex(Int32, Int32, Predicate(Of FieldReaderInstance(Of T)))
  fullName.vb: System.Collections.Generic.List(Of RW_ModularizationWeapon.FieldReaderInstance(Of T)).FindLastIndex(System.Int32, System.Int32, System.Predicate(Of RW_ModularizationWeapon.FieldReaderInstance(Of T)))
  name.vb: FindLastIndex(Int32, Int32, Predicate(Of FieldReaderInstance(Of T)))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.FindLastIndex(System.Int32,System.Int32,System.Predicate{`0})
    name: FindLastIndex
    nameWithType: List<FieldReaderInstance<T>>.FindLastIndex
    fullName: System.Collections.Generic.List<RW_ModularizationWeapon.FieldReaderInstance<T>>.FindLastIndex
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: RW_ModularizationWeapon.FieldReaderInstance`1
    name: FieldReaderInstance
    nameWithType: FieldReaderInstance
    fullName: RW_ModularizationWeapon.FieldReaderInstance
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.FindLastIndex(System.Int32,System.Int32,System.Predicate{`0})
    name: FindLastIndex
    nameWithType: List(Of FieldReaderInstance(Of T)).FindLastIndex
    fullName: System.Collections.Generic.List(Of RW_ModularizationWeapon.FieldReaderInstance(Of T)).FindLastIndex
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: RW_ModularizationWeapon.FieldReaderInstance`1
    name: FieldReaderInstance
    nameWithType: FieldReaderInstance
    fullName: RW_ModularizationWeapon.FieldReaderInstance
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{{T}}}.ForEach(System.Action{RW_ModularizationWeapon.FieldReaderInstance{{T}}})
  commentId: M:System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{`0}}.ForEach(System.Action{RW_ModularizationWeapon.FieldReaderInstance{`0}})
  parent: System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{{T}}}
  definition: System.Collections.Generic.List`1.ForEach(System.Action{`0})
  name: ForEach(Action<FieldReaderInstance<T>>)
  nameWithType: List<FieldReaderInstance<T>>.ForEach(Action<FieldReaderInstance<T>>)
  fullName: System.Collections.Generic.List<RW_ModularizationWeapon.FieldReaderInstance<T>>.ForEach(System.Action<RW_ModularizationWeapon.FieldReaderInstance<T>>)
  nameWithType.vb: List(Of FieldReaderInstance(Of T)).ForEach(Action(Of FieldReaderInstance(Of T)))
  fullName.vb: System.Collections.Generic.List(Of RW_ModularizationWeapon.FieldReaderInstance(Of T)).ForEach(System.Action(Of RW_ModularizationWeapon.FieldReaderInstance(Of T)))
  name.vb: ForEach(Action(Of FieldReaderInstance(Of T)))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.ForEach(System.Action{`0})
    name: ForEach
    nameWithType: List<FieldReaderInstance<T>>.ForEach
    fullName: System.Collections.Generic.List<RW_ModularizationWeapon.FieldReaderInstance<T>>.ForEach
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: RW_ModularizationWeapon.FieldReaderInstance`1
    name: FieldReaderInstance
    nameWithType: FieldReaderInstance
    fullName: RW_ModularizationWeapon.FieldReaderInstance
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.ForEach(System.Action{`0})
    name: ForEach
    nameWithType: List(Of FieldReaderInstance(Of T)).ForEach
    fullName: System.Collections.Generic.List(Of RW_ModularizationWeapon.FieldReaderInstance(Of T)).ForEach
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: RW_ModularizationWeapon.FieldReaderInstance`1
    name: FieldReaderInstance
    nameWithType: FieldReaderInstance
    fullName: RW_ModularizationWeapon.FieldReaderInstance
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{{T}}}.GetEnumerator
  commentId: M:System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{`0}}.GetEnumerator
  parent: System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{{T}}}
  definition: System.Collections.Generic.List`1.GetEnumerator
  name: GetEnumerator()
  nameWithType: List<FieldReaderInstance<T>>.GetEnumerator()
  fullName: System.Collections.Generic.List<RW_ModularizationWeapon.FieldReaderInstance<T>>.GetEnumerator()
  nameWithType.vb: List(Of FieldReaderInstance(Of T)).GetEnumerator()
  fullName.vb: System.Collections.Generic.List(Of RW_ModularizationWeapon.FieldReaderInstance(Of T)).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.List`1.GetEnumerator
    name: GetEnumerator
    nameWithType: List<FieldReaderInstance<T>>.GetEnumerator
    fullName: System.Collections.Generic.List<RW_ModularizationWeapon.FieldReaderInstance<T>>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.GetEnumerator
    name: GetEnumerator
    nameWithType: List(Of FieldReaderInstance(Of T)).GetEnumerator
    fullName: System.Collections.Generic.List(Of RW_ModularizationWeapon.FieldReaderInstance(Of T)).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{{T}}}.System#Collections#Generic#IEnumerable{T}#GetEnumerator
  commentId: M:System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{`0}}.System#Collections#Generic#IEnumerable{T}#GetEnumerator
  parent: System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{{T}}}
  definition: System.Collections.Generic.List`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator
  name: IEnumerable<FieldReaderInstance<T>>.GetEnumerator()
  nameWithType: List<FieldReaderInstance<T>>.IEnumerable<FieldReaderInstance<T>>.GetEnumerator()
  fullName: System.Collections.Generic.List<RW_ModularizationWeapon.FieldReaderInstance<T>>.System.Collections.Generic.IEnumerable<RW_ModularizationWeapon.FieldReaderInstance<T>>.GetEnumerator()
  nameWithType.vb: List(Of FieldReaderInstance(Of T)).System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  fullName.vb: System.Collections.Generic.List(Of RW_ModularizationWeapon.FieldReaderInstance(Of T)).System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  name.vb: System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.List`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator
    name: IEnumerable<FieldReaderInstance<T>>.GetEnumerator
    nameWithType: List<FieldReaderInstance<T>>.IEnumerable<FieldReaderInstance<T>>.GetEnumerator
    fullName: System.Collections.Generic.List<RW_ModularizationWeapon.FieldReaderInstance<T>>.System.Collections.Generic.IEnumerable<RW_ModularizationWeapon.FieldReaderInstance<T>>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator
    name: System.Collections.Generic.IEnumerable<T>.GetEnumerator
    nameWithType: List(Of FieldReaderInstance(Of T)).System.Collections.Generic.IEnumerable<T>.GetEnumerator
    fullName: System.Collections.Generic.List(Of RW_ModularizationWeapon.FieldReaderInstance(Of T)).System.Collections.Generic.IEnumerable<T>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{{T}}}.System#Collections#IEnumerable#GetEnumerator
  commentId: M:System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{`0}}.System#Collections#IEnumerable#GetEnumerator
  parent: System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{{T}}}
  definition: System.Collections.Generic.List`1.System#Collections#IEnumerable#GetEnumerator
  name: IEnumerable.GetEnumerator()
  nameWithType: List<FieldReaderInstance<T>>.IEnumerable.GetEnumerator()
  fullName: System.Collections.Generic.List<RW_ModularizationWeapon.FieldReaderInstance<T>>.System.Collections.IEnumerable.GetEnumerator()
  nameWithType.vb: List(Of FieldReaderInstance(Of T)).System.Collections.IEnumerable.GetEnumerator()
  fullName.vb: System.Collections.Generic.List(Of RW_ModularizationWeapon.FieldReaderInstance(Of T)).System.Collections.IEnumerable.GetEnumerator()
  name.vb: System.Collections.IEnumerable.GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.List`1.System#Collections#IEnumerable#GetEnumerator
    name: IEnumerable.GetEnumerator
    nameWithType: List<FieldReaderInstance<T>>.IEnumerable.GetEnumerator
    fullName: System.Collections.Generic.List<RW_ModularizationWeapon.FieldReaderInstance<T>>.System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.System#Collections#IEnumerable#GetEnumerator
    name: System.Collections.IEnumerable.GetEnumerator
    nameWithType: List(Of FieldReaderInstance(Of T)).System.Collections.IEnumerable.GetEnumerator
    fullName: System.Collections.Generic.List(Of RW_ModularizationWeapon.FieldReaderInstance(Of T)).System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{{T}}}.GetRange(System.Int32,System.Int32)
  commentId: M:System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{`0}}.GetRange(System.Int32,System.Int32)
  parent: System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{{T}}}
  definition: System.Collections.Generic.List`1.GetRange(System.Int32,System.Int32)
  name: GetRange(Int32, Int32)
  nameWithType: List<FieldReaderInstance<T>>.GetRange(Int32, Int32)
  fullName: System.Collections.Generic.List<RW_ModularizationWeapon.FieldReaderInstance<T>>.GetRange(System.Int32, System.Int32)
  nameWithType.vb: List(Of FieldReaderInstance(Of T)).GetRange(Int32, Int32)
  fullName.vb: System.Collections.Generic.List(Of RW_ModularizationWeapon.FieldReaderInstance(Of T)).GetRange(System.Int32, System.Int32)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.GetRange(System.Int32,System.Int32)
    name: GetRange
    nameWithType: List<FieldReaderInstance<T>>.GetRange
    fullName: System.Collections.Generic.List<RW_ModularizationWeapon.FieldReaderInstance<T>>.GetRange
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.GetRange(System.Int32,System.Int32)
    name: GetRange
    nameWithType: List(Of FieldReaderInstance(Of T)).GetRange
    fullName: System.Collections.Generic.List(Of RW_ModularizationWeapon.FieldReaderInstance(Of T)).GetRange
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{{T}}}.IndexOf(RW_ModularizationWeapon.FieldReaderInstance{{T}})
  commentId: M:System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{`0}}.IndexOf(RW_ModularizationWeapon.FieldReaderInstance{`0})
  parent: System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{{T}}}
  definition: System.Collections.Generic.List`1.IndexOf(`0)
  name: IndexOf(FieldReaderInstance<T>)
  nameWithType: List<FieldReaderInstance<T>>.IndexOf(FieldReaderInstance<T>)
  fullName: System.Collections.Generic.List<RW_ModularizationWeapon.FieldReaderInstance<T>>.IndexOf(RW_ModularizationWeapon.FieldReaderInstance<T>)
  nameWithType.vb: List(Of FieldReaderInstance(Of T)).IndexOf(FieldReaderInstance(Of T))
  fullName.vb: System.Collections.Generic.List(Of RW_ModularizationWeapon.FieldReaderInstance(Of T)).IndexOf(RW_ModularizationWeapon.FieldReaderInstance(Of T))
  name.vb: IndexOf(FieldReaderInstance(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.IndexOf(`0)
    name: IndexOf
    nameWithType: List<FieldReaderInstance<T>>.IndexOf
    fullName: System.Collections.Generic.List<RW_ModularizationWeapon.FieldReaderInstance<T>>.IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: RW_ModularizationWeapon.FieldReaderInstance`1
    name: FieldReaderInstance
    nameWithType: FieldReaderInstance
    fullName: RW_ModularizationWeapon.FieldReaderInstance
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.IndexOf(`0)
    name: IndexOf
    nameWithType: List(Of FieldReaderInstance(Of T)).IndexOf
    fullName: System.Collections.Generic.List(Of RW_ModularizationWeapon.FieldReaderInstance(Of T)).IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: RW_ModularizationWeapon.FieldReaderInstance`1
    name: FieldReaderInstance
    nameWithType: FieldReaderInstance
    fullName: RW_ModularizationWeapon.FieldReaderInstance
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{{T}}}.System#Collections#IList#IndexOf(System.Object)
  commentId: M:System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{`0}}.System#Collections#IList#IndexOf(System.Object)
  parent: System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{{T}}}
  definition: System.Collections.Generic.List`1.System#Collections#IList#IndexOf(System.Object)
  name: IList.IndexOf(Object)
  nameWithType: List<FieldReaderInstance<T>>.IList.IndexOf(Object)
  fullName: System.Collections.Generic.List<RW_ModularizationWeapon.FieldReaderInstance<T>>.System.Collections.IList.IndexOf(System.Object)
  nameWithType.vb: List(Of FieldReaderInstance(Of T)).System.Collections.IList.IndexOf(Object)
  fullName.vb: System.Collections.Generic.List(Of RW_ModularizationWeapon.FieldReaderInstance(Of T)).System.Collections.IList.IndexOf(System.Object)
  name.vb: System.Collections.IList.IndexOf(Object)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.System#Collections#IList#IndexOf(System.Object)
    name: IList.IndexOf
    nameWithType: List<FieldReaderInstance<T>>.IList.IndexOf
    fullName: System.Collections.Generic.List<RW_ModularizationWeapon.FieldReaderInstance<T>>.System.Collections.IList.IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.System#Collections#IList#IndexOf(System.Object)
    name: System.Collections.IList.IndexOf
    nameWithType: List(Of FieldReaderInstance(Of T)).System.Collections.IList.IndexOf
    fullName: System.Collections.Generic.List(Of RW_ModularizationWeapon.FieldReaderInstance(Of T)).System.Collections.IList.IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{{T}}}.IndexOf(RW_ModularizationWeapon.FieldReaderInstance{{T}},System.Int32)
  commentId: M:System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{`0}}.IndexOf(RW_ModularizationWeapon.FieldReaderInstance{`0},System.Int32)
  parent: System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{{T}}}
  definition: System.Collections.Generic.List`1.IndexOf(`0,System.Int32)
  name: IndexOf(FieldReaderInstance<T>, Int32)
  nameWithType: List<FieldReaderInstance<T>>.IndexOf(FieldReaderInstance<T>, Int32)
  fullName: System.Collections.Generic.List<RW_ModularizationWeapon.FieldReaderInstance<T>>.IndexOf(RW_ModularizationWeapon.FieldReaderInstance<T>, System.Int32)
  nameWithType.vb: List(Of FieldReaderInstance(Of T)).IndexOf(FieldReaderInstance(Of T), Int32)
  fullName.vb: System.Collections.Generic.List(Of RW_ModularizationWeapon.FieldReaderInstance(Of T)).IndexOf(RW_ModularizationWeapon.FieldReaderInstance(Of T), System.Int32)
  name.vb: IndexOf(FieldReaderInstance(Of T), Int32)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.IndexOf(`0,System.Int32)
    name: IndexOf
    nameWithType: List<FieldReaderInstance<T>>.IndexOf
    fullName: System.Collections.Generic.List<RW_ModularizationWeapon.FieldReaderInstance<T>>.IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: RW_ModularizationWeapon.FieldReaderInstance`1
    name: FieldReaderInstance
    nameWithType: FieldReaderInstance
    fullName: RW_ModularizationWeapon.FieldReaderInstance
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.IndexOf(`0,System.Int32)
    name: IndexOf
    nameWithType: List(Of FieldReaderInstance(Of T)).IndexOf
    fullName: System.Collections.Generic.List(Of RW_ModularizationWeapon.FieldReaderInstance(Of T)).IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: RW_ModularizationWeapon.FieldReaderInstance`1
    name: FieldReaderInstance
    nameWithType: FieldReaderInstance
    fullName: RW_ModularizationWeapon.FieldReaderInstance
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{{T}}}.IndexOf(RW_ModularizationWeapon.FieldReaderInstance{{T}},System.Int32,System.Int32)
  commentId: M:System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{`0}}.IndexOf(RW_ModularizationWeapon.FieldReaderInstance{`0},System.Int32,System.Int32)
  parent: System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{{T}}}
  definition: System.Collections.Generic.List`1.IndexOf(`0,System.Int32,System.Int32)
  name: IndexOf(FieldReaderInstance<T>, Int32, Int32)
  nameWithType: List<FieldReaderInstance<T>>.IndexOf(FieldReaderInstance<T>, Int32, Int32)
  fullName: System.Collections.Generic.List<RW_ModularizationWeapon.FieldReaderInstance<T>>.IndexOf(RW_ModularizationWeapon.FieldReaderInstance<T>, System.Int32, System.Int32)
  nameWithType.vb: List(Of FieldReaderInstance(Of T)).IndexOf(FieldReaderInstance(Of T), Int32, Int32)
  fullName.vb: System.Collections.Generic.List(Of RW_ModularizationWeapon.FieldReaderInstance(Of T)).IndexOf(RW_ModularizationWeapon.FieldReaderInstance(Of T), System.Int32, System.Int32)
  name.vb: IndexOf(FieldReaderInstance(Of T), Int32, Int32)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.IndexOf(`0,System.Int32,System.Int32)
    name: IndexOf
    nameWithType: List<FieldReaderInstance<T>>.IndexOf
    fullName: System.Collections.Generic.List<RW_ModularizationWeapon.FieldReaderInstance<T>>.IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: RW_ModularizationWeapon.FieldReaderInstance`1
    name: FieldReaderInstance
    nameWithType: FieldReaderInstance
    fullName: RW_ModularizationWeapon.FieldReaderInstance
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.IndexOf(`0,System.Int32,System.Int32)
    name: IndexOf
    nameWithType: List(Of FieldReaderInstance(Of T)).IndexOf
    fullName: System.Collections.Generic.List(Of RW_ModularizationWeapon.FieldReaderInstance(Of T)).IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: RW_ModularizationWeapon.FieldReaderInstance`1
    name: FieldReaderInstance
    nameWithType: FieldReaderInstance
    fullName: RW_ModularizationWeapon.FieldReaderInstance
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{{T}}}.Insert(System.Int32,RW_ModularizationWeapon.FieldReaderInstance{{T}})
  commentId: M:System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{`0}}.Insert(System.Int32,RW_ModularizationWeapon.FieldReaderInstance{`0})
  parent: System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{{T}}}
  definition: System.Collections.Generic.List`1.Insert(System.Int32,`0)
  name: Insert(Int32, FieldReaderInstance<T>)
  nameWithType: List<FieldReaderInstance<T>>.Insert(Int32, FieldReaderInstance<T>)
  fullName: System.Collections.Generic.List<RW_ModularizationWeapon.FieldReaderInstance<T>>.Insert(System.Int32, RW_ModularizationWeapon.FieldReaderInstance<T>)
  nameWithType.vb: List(Of FieldReaderInstance(Of T)).Insert(Int32, FieldReaderInstance(Of T))
  fullName.vb: System.Collections.Generic.List(Of RW_ModularizationWeapon.FieldReaderInstance(Of T)).Insert(System.Int32, RW_ModularizationWeapon.FieldReaderInstance(Of T))
  name.vb: Insert(Int32, FieldReaderInstance(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.Insert(System.Int32,`0)
    name: Insert
    nameWithType: List<FieldReaderInstance<T>>.Insert
    fullName: System.Collections.Generic.List<RW_ModularizationWeapon.FieldReaderInstance<T>>.Insert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: RW_ModularizationWeapon.FieldReaderInstance`1
    name: FieldReaderInstance
    nameWithType: FieldReaderInstance
    fullName: RW_ModularizationWeapon.FieldReaderInstance
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.Insert(System.Int32,`0)
    name: Insert
    nameWithType: List(Of FieldReaderInstance(Of T)).Insert
    fullName: System.Collections.Generic.List(Of RW_ModularizationWeapon.FieldReaderInstance(Of T)).Insert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: RW_ModularizationWeapon.FieldReaderInstance`1
    name: FieldReaderInstance
    nameWithType: FieldReaderInstance
    fullName: RW_ModularizationWeapon.FieldReaderInstance
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{{T}}}.System#Collections#IList#Insert(System.Int32,System.Object)
  commentId: M:System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{`0}}.System#Collections#IList#Insert(System.Int32,System.Object)
  parent: System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{{T}}}
  definition: System.Collections.Generic.List`1.System#Collections#IList#Insert(System.Int32,System.Object)
  name: IList.Insert(Int32, Object)
  nameWithType: List<FieldReaderInstance<T>>.IList.Insert(Int32, Object)
  fullName: System.Collections.Generic.List<RW_ModularizationWeapon.FieldReaderInstance<T>>.System.Collections.IList.Insert(System.Int32, System.Object)
  nameWithType.vb: List(Of FieldReaderInstance(Of T)).System.Collections.IList.Insert(Int32, Object)
  fullName.vb: System.Collections.Generic.List(Of RW_ModularizationWeapon.FieldReaderInstance(Of T)).System.Collections.IList.Insert(System.Int32, System.Object)
  name.vb: System.Collections.IList.Insert(Int32, Object)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.System#Collections#IList#Insert(System.Int32,System.Object)
    name: IList.Insert
    nameWithType: List<FieldReaderInstance<T>>.IList.Insert
    fullName: System.Collections.Generic.List<RW_ModularizationWeapon.FieldReaderInstance<T>>.System.Collections.IList.Insert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.System#Collections#IList#Insert(System.Int32,System.Object)
    name: System.Collections.IList.Insert
    nameWithType: List(Of FieldReaderInstance(Of T)).System.Collections.IList.Insert
    fullName: System.Collections.Generic.List(Of RW_ModularizationWeapon.FieldReaderInstance(Of T)).System.Collections.IList.Insert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{{T}}}.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{RW_ModularizationWeapon.FieldReaderInstance{{T}}})
  commentId: M:System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{`0}}.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{RW_ModularizationWeapon.FieldReaderInstance{`0}})
  parent: System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{{T}}}
  definition: System.Collections.Generic.List`1.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{`0})
  name: InsertRange(Int32, IEnumerable<FieldReaderInstance<T>>)
  nameWithType: List<FieldReaderInstance<T>>.InsertRange(Int32, IEnumerable<FieldReaderInstance<T>>)
  fullName: System.Collections.Generic.List<RW_ModularizationWeapon.FieldReaderInstance<T>>.InsertRange(System.Int32, System.Collections.Generic.IEnumerable<RW_ModularizationWeapon.FieldReaderInstance<T>>)
  nameWithType.vb: List(Of FieldReaderInstance(Of T)).InsertRange(Int32, IEnumerable(Of FieldReaderInstance(Of T)))
  fullName.vb: System.Collections.Generic.List(Of RW_ModularizationWeapon.FieldReaderInstance(Of T)).InsertRange(System.Int32, System.Collections.Generic.IEnumerable(Of RW_ModularizationWeapon.FieldReaderInstance(Of T)))
  name.vb: InsertRange(Int32, IEnumerable(Of FieldReaderInstance(Of T)))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{`0})
    name: InsertRange
    nameWithType: List<FieldReaderInstance<T>>.InsertRange
    fullName: System.Collections.Generic.List<RW_ModularizationWeapon.FieldReaderInstance<T>>.InsertRange
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: RW_ModularizationWeapon.FieldReaderInstance`1
    name: FieldReaderInstance
    nameWithType: FieldReaderInstance
    fullName: RW_ModularizationWeapon.FieldReaderInstance
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{`0})
    name: InsertRange
    nameWithType: List(Of FieldReaderInstance(Of T)).InsertRange
    fullName: System.Collections.Generic.List(Of RW_ModularizationWeapon.FieldReaderInstance(Of T)).InsertRange
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: RW_ModularizationWeapon.FieldReaderInstance`1
    name: FieldReaderInstance
    nameWithType: FieldReaderInstance
    fullName: RW_ModularizationWeapon.FieldReaderInstance
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{{T}}}.LastIndexOf(RW_ModularizationWeapon.FieldReaderInstance{{T}})
  commentId: M:System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{`0}}.LastIndexOf(RW_ModularizationWeapon.FieldReaderInstance{`0})
  parent: System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{{T}}}
  definition: System.Collections.Generic.List`1.LastIndexOf(`0)
  name: LastIndexOf(FieldReaderInstance<T>)
  nameWithType: List<FieldReaderInstance<T>>.LastIndexOf(FieldReaderInstance<T>)
  fullName: System.Collections.Generic.List<RW_ModularizationWeapon.FieldReaderInstance<T>>.LastIndexOf(RW_ModularizationWeapon.FieldReaderInstance<T>)
  nameWithType.vb: List(Of FieldReaderInstance(Of T)).LastIndexOf(FieldReaderInstance(Of T))
  fullName.vb: System.Collections.Generic.List(Of RW_ModularizationWeapon.FieldReaderInstance(Of T)).LastIndexOf(RW_ModularizationWeapon.FieldReaderInstance(Of T))
  name.vb: LastIndexOf(FieldReaderInstance(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.LastIndexOf(`0)
    name: LastIndexOf
    nameWithType: List<FieldReaderInstance<T>>.LastIndexOf
    fullName: System.Collections.Generic.List<RW_ModularizationWeapon.FieldReaderInstance<T>>.LastIndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: RW_ModularizationWeapon.FieldReaderInstance`1
    name: FieldReaderInstance
    nameWithType: FieldReaderInstance
    fullName: RW_ModularizationWeapon.FieldReaderInstance
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.LastIndexOf(`0)
    name: LastIndexOf
    nameWithType: List(Of FieldReaderInstance(Of T)).LastIndexOf
    fullName: System.Collections.Generic.List(Of RW_ModularizationWeapon.FieldReaderInstance(Of T)).LastIndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: RW_ModularizationWeapon.FieldReaderInstance`1
    name: FieldReaderInstance
    nameWithType: FieldReaderInstance
    fullName: RW_ModularizationWeapon.FieldReaderInstance
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{{T}}}.LastIndexOf(RW_ModularizationWeapon.FieldReaderInstance{{T}},System.Int32)
  commentId: M:System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{`0}}.LastIndexOf(RW_ModularizationWeapon.FieldReaderInstance{`0},System.Int32)
  parent: System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{{T}}}
  definition: System.Collections.Generic.List`1.LastIndexOf(`0,System.Int32)
  name: LastIndexOf(FieldReaderInstance<T>, Int32)
  nameWithType: List<FieldReaderInstance<T>>.LastIndexOf(FieldReaderInstance<T>, Int32)
  fullName: System.Collections.Generic.List<RW_ModularizationWeapon.FieldReaderInstance<T>>.LastIndexOf(RW_ModularizationWeapon.FieldReaderInstance<T>, System.Int32)
  nameWithType.vb: List(Of FieldReaderInstance(Of T)).LastIndexOf(FieldReaderInstance(Of T), Int32)
  fullName.vb: System.Collections.Generic.List(Of RW_ModularizationWeapon.FieldReaderInstance(Of T)).LastIndexOf(RW_ModularizationWeapon.FieldReaderInstance(Of T), System.Int32)
  name.vb: LastIndexOf(FieldReaderInstance(Of T), Int32)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.LastIndexOf(`0,System.Int32)
    name: LastIndexOf
    nameWithType: List<FieldReaderInstance<T>>.LastIndexOf
    fullName: System.Collections.Generic.List<RW_ModularizationWeapon.FieldReaderInstance<T>>.LastIndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: RW_ModularizationWeapon.FieldReaderInstance`1
    name: FieldReaderInstance
    nameWithType: FieldReaderInstance
    fullName: RW_ModularizationWeapon.FieldReaderInstance
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.LastIndexOf(`0,System.Int32)
    name: LastIndexOf
    nameWithType: List(Of FieldReaderInstance(Of T)).LastIndexOf
    fullName: System.Collections.Generic.List(Of RW_ModularizationWeapon.FieldReaderInstance(Of T)).LastIndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: RW_ModularizationWeapon.FieldReaderInstance`1
    name: FieldReaderInstance
    nameWithType: FieldReaderInstance
    fullName: RW_ModularizationWeapon.FieldReaderInstance
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{{T}}}.LastIndexOf(RW_ModularizationWeapon.FieldReaderInstance{{T}},System.Int32,System.Int32)
  commentId: M:System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{`0}}.LastIndexOf(RW_ModularizationWeapon.FieldReaderInstance{`0},System.Int32,System.Int32)
  parent: System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{{T}}}
  definition: System.Collections.Generic.List`1.LastIndexOf(`0,System.Int32,System.Int32)
  name: LastIndexOf(FieldReaderInstance<T>, Int32, Int32)
  nameWithType: List<FieldReaderInstance<T>>.LastIndexOf(FieldReaderInstance<T>, Int32, Int32)
  fullName: System.Collections.Generic.List<RW_ModularizationWeapon.FieldReaderInstance<T>>.LastIndexOf(RW_ModularizationWeapon.FieldReaderInstance<T>, System.Int32, System.Int32)
  nameWithType.vb: List(Of FieldReaderInstance(Of T)).LastIndexOf(FieldReaderInstance(Of T), Int32, Int32)
  fullName.vb: System.Collections.Generic.List(Of RW_ModularizationWeapon.FieldReaderInstance(Of T)).LastIndexOf(RW_ModularizationWeapon.FieldReaderInstance(Of T), System.Int32, System.Int32)
  name.vb: LastIndexOf(FieldReaderInstance(Of T), Int32, Int32)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.LastIndexOf(`0,System.Int32,System.Int32)
    name: LastIndexOf
    nameWithType: List<FieldReaderInstance<T>>.LastIndexOf
    fullName: System.Collections.Generic.List<RW_ModularizationWeapon.FieldReaderInstance<T>>.LastIndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: RW_ModularizationWeapon.FieldReaderInstance`1
    name: FieldReaderInstance
    nameWithType: FieldReaderInstance
    fullName: RW_ModularizationWeapon.FieldReaderInstance
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.LastIndexOf(`0,System.Int32,System.Int32)
    name: LastIndexOf
    nameWithType: List(Of FieldReaderInstance(Of T)).LastIndexOf
    fullName: System.Collections.Generic.List(Of RW_ModularizationWeapon.FieldReaderInstance(Of T)).LastIndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: RW_ModularizationWeapon.FieldReaderInstance`1
    name: FieldReaderInstance
    nameWithType: FieldReaderInstance
    fullName: RW_ModularizationWeapon.FieldReaderInstance
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{{T}}}.Remove(RW_ModularizationWeapon.FieldReaderInstance{{T}})
  commentId: M:System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{`0}}.Remove(RW_ModularizationWeapon.FieldReaderInstance{`0})
  parent: System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{{T}}}
  definition: System.Collections.Generic.List`1.Remove(`0)
  name: Remove(FieldReaderInstance<T>)
  nameWithType: List<FieldReaderInstance<T>>.Remove(FieldReaderInstance<T>)
  fullName: System.Collections.Generic.List<RW_ModularizationWeapon.FieldReaderInstance<T>>.Remove(RW_ModularizationWeapon.FieldReaderInstance<T>)
  nameWithType.vb: List(Of FieldReaderInstance(Of T)).Remove(FieldReaderInstance(Of T))
  fullName.vb: System.Collections.Generic.List(Of RW_ModularizationWeapon.FieldReaderInstance(Of T)).Remove(RW_ModularizationWeapon.FieldReaderInstance(Of T))
  name.vb: Remove(FieldReaderInstance(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.Remove(`0)
    name: Remove
    nameWithType: List<FieldReaderInstance<T>>.Remove
    fullName: System.Collections.Generic.List<RW_ModularizationWeapon.FieldReaderInstance<T>>.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: RW_ModularizationWeapon.FieldReaderInstance`1
    name: FieldReaderInstance
    nameWithType: FieldReaderInstance
    fullName: RW_ModularizationWeapon.FieldReaderInstance
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.Remove(`0)
    name: Remove
    nameWithType: List(Of FieldReaderInstance(Of T)).Remove
    fullName: System.Collections.Generic.List(Of RW_ModularizationWeapon.FieldReaderInstance(Of T)).Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: RW_ModularizationWeapon.FieldReaderInstance`1
    name: FieldReaderInstance
    nameWithType: FieldReaderInstance
    fullName: RW_ModularizationWeapon.FieldReaderInstance
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{{T}}}.System#Collections#IList#Remove(System.Object)
  commentId: M:System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{`0}}.System#Collections#IList#Remove(System.Object)
  parent: System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{{T}}}
  definition: System.Collections.Generic.List`1.System#Collections#IList#Remove(System.Object)
  name: IList.Remove(Object)
  nameWithType: List<FieldReaderInstance<T>>.IList.Remove(Object)
  fullName: System.Collections.Generic.List<RW_ModularizationWeapon.FieldReaderInstance<T>>.System.Collections.IList.Remove(System.Object)
  nameWithType.vb: List(Of FieldReaderInstance(Of T)).System.Collections.IList.Remove(Object)
  fullName.vb: System.Collections.Generic.List(Of RW_ModularizationWeapon.FieldReaderInstance(Of T)).System.Collections.IList.Remove(System.Object)
  name.vb: System.Collections.IList.Remove(Object)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.System#Collections#IList#Remove(System.Object)
    name: IList.Remove
    nameWithType: List<FieldReaderInstance<T>>.IList.Remove
    fullName: System.Collections.Generic.List<RW_ModularizationWeapon.FieldReaderInstance<T>>.System.Collections.IList.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.System#Collections#IList#Remove(System.Object)
    name: System.Collections.IList.Remove
    nameWithType: List(Of FieldReaderInstance(Of T)).System.Collections.IList.Remove
    fullName: System.Collections.Generic.List(Of RW_ModularizationWeapon.FieldReaderInstance(Of T)).System.Collections.IList.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{{T}}}.RemoveAll(System.Predicate{RW_ModularizationWeapon.FieldReaderInstance{{T}}})
  commentId: M:System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{`0}}.RemoveAll(System.Predicate{RW_ModularizationWeapon.FieldReaderInstance{`0}})
  parent: System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{{T}}}
  definition: System.Collections.Generic.List`1.RemoveAll(System.Predicate{`0})
  name: RemoveAll(Predicate<FieldReaderInstance<T>>)
  nameWithType: List<FieldReaderInstance<T>>.RemoveAll(Predicate<FieldReaderInstance<T>>)
  fullName: System.Collections.Generic.List<RW_ModularizationWeapon.FieldReaderInstance<T>>.RemoveAll(System.Predicate<RW_ModularizationWeapon.FieldReaderInstance<T>>)
  nameWithType.vb: List(Of FieldReaderInstance(Of T)).RemoveAll(Predicate(Of FieldReaderInstance(Of T)))
  fullName.vb: System.Collections.Generic.List(Of RW_ModularizationWeapon.FieldReaderInstance(Of T)).RemoveAll(System.Predicate(Of RW_ModularizationWeapon.FieldReaderInstance(Of T)))
  name.vb: RemoveAll(Predicate(Of FieldReaderInstance(Of T)))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.RemoveAll(System.Predicate{`0})
    name: RemoveAll
    nameWithType: List<FieldReaderInstance<T>>.RemoveAll
    fullName: System.Collections.Generic.List<RW_ModularizationWeapon.FieldReaderInstance<T>>.RemoveAll
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: RW_ModularizationWeapon.FieldReaderInstance`1
    name: FieldReaderInstance
    nameWithType: FieldReaderInstance
    fullName: RW_ModularizationWeapon.FieldReaderInstance
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.RemoveAll(System.Predicate{`0})
    name: RemoveAll
    nameWithType: List(Of FieldReaderInstance(Of T)).RemoveAll
    fullName: System.Collections.Generic.List(Of RW_ModularizationWeapon.FieldReaderInstance(Of T)).RemoveAll
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: RW_ModularizationWeapon.FieldReaderInstance`1
    name: FieldReaderInstance
    nameWithType: FieldReaderInstance
    fullName: RW_ModularizationWeapon.FieldReaderInstance
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{{T}}}.RemoveAt(System.Int32)
  commentId: M:System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{`0}}.RemoveAt(System.Int32)
  parent: System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{{T}}}
  definition: System.Collections.Generic.List`1.RemoveAt(System.Int32)
  name: RemoveAt(Int32)
  nameWithType: List<FieldReaderInstance<T>>.RemoveAt(Int32)
  fullName: System.Collections.Generic.List<RW_ModularizationWeapon.FieldReaderInstance<T>>.RemoveAt(System.Int32)
  nameWithType.vb: List(Of FieldReaderInstance(Of T)).RemoveAt(Int32)
  fullName.vb: System.Collections.Generic.List(Of RW_ModularizationWeapon.FieldReaderInstance(Of T)).RemoveAt(System.Int32)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.RemoveAt(System.Int32)
    name: RemoveAt
    nameWithType: List<FieldReaderInstance<T>>.RemoveAt
    fullName: System.Collections.Generic.List<RW_ModularizationWeapon.FieldReaderInstance<T>>.RemoveAt
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.RemoveAt(System.Int32)
    name: RemoveAt
    nameWithType: List(Of FieldReaderInstance(Of T)).RemoveAt
    fullName: System.Collections.Generic.List(Of RW_ModularizationWeapon.FieldReaderInstance(Of T)).RemoveAt
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{{T}}}.RemoveRange(System.Int32,System.Int32)
  commentId: M:System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{`0}}.RemoveRange(System.Int32,System.Int32)
  parent: System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{{T}}}
  definition: System.Collections.Generic.List`1.RemoveRange(System.Int32,System.Int32)
  name: RemoveRange(Int32, Int32)
  nameWithType: List<FieldReaderInstance<T>>.RemoveRange(Int32, Int32)
  fullName: System.Collections.Generic.List<RW_ModularizationWeapon.FieldReaderInstance<T>>.RemoveRange(System.Int32, System.Int32)
  nameWithType.vb: List(Of FieldReaderInstance(Of T)).RemoveRange(Int32, Int32)
  fullName.vb: System.Collections.Generic.List(Of RW_ModularizationWeapon.FieldReaderInstance(Of T)).RemoveRange(System.Int32, System.Int32)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.RemoveRange(System.Int32,System.Int32)
    name: RemoveRange
    nameWithType: List<FieldReaderInstance<T>>.RemoveRange
    fullName: System.Collections.Generic.List<RW_ModularizationWeapon.FieldReaderInstance<T>>.RemoveRange
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.RemoveRange(System.Int32,System.Int32)
    name: RemoveRange
    nameWithType: List(Of FieldReaderInstance(Of T)).RemoveRange
    fullName: System.Collections.Generic.List(Of RW_ModularizationWeapon.FieldReaderInstance(Of T)).RemoveRange
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{{T}}}.Reverse
  commentId: M:System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{`0}}.Reverse
  parent: System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{{T}}}
  definition: System.Collections.Generic.List`1.Reverse
  name: Reverse()
  nameWithType: List<FieldReaderInstance<T>>.Reverse()
  fullName: System.Collections.Generic.List<RW_ModularizationWeapon.FieldReaderInstance<T>>.Reverse()
  nameWithType.vb: List(Of FieldReaderInstance(Of T)).Reverse()
  fullName.vb: System.Collections.Generic.List(Of RW_ModularizationWeapon.FieldReaderInstance(Of T)).Reverse()
  spec.csharp:
  - uid: System.Collections.Generic.List`1.Reverse
    name: Reverse
    nameWithType: List<FieldReaderInstance<T>>.Reverse
    fullName: System.Collections.Generic.List<RW_ModularizationWeapon.FieldReaderInstance<T>>.Reverse
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.Reverse
    name: Reverse
    nameWithType: List(Of FieldReaderInstance(Of T)).Reverse
    fullName: System.Collections.Generic.List(Of RW_ModularizationWeapon.FieldReaderInstance(Of T)).Reverse
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{{T}}}.Reverse(System.Int32,System.Int32)
  commentId: M:System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{`0}}.Reverse(System.Int32,System.Int32)
  parent: System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{{T}}}
  definition: System.Collections.Generic.List`1.Reverse(System.Int32,System.Int32)
  name: Reverse(Int32, Int32)
  nameWithType: List<FieldReaderInstance<T>>.Reverse(Int32, Int32)
  fullName: System.Collections.Generic.List<RW_ModularizationWeapon.FieldReaderInstance<T>>.Reverse(System.Int32, System.Int32)
  nameWithType.vb: List(Of FieldReaderInstance(Of T)).Reverse(Int32, Int32)
  fullName.vb: System.Collections.Generic.List(Of RW_ModularizationWeapon.FieldReaderInstance(Of T)).Reverse(System.Int32, System.Int32)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.Reverse(System.Int32,System.Int32)
    name: Reverse
    nameWithType: List<FieldReaderInstance<T>>.Reverse
    fullName: System.Collections.Generic.List<RW_ModularizationWeapon.FieldReaderInstance<T>>.Reverse
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.Reverse(System.Int32,System.Int32)
    name: Reverse
    nameWithType: List(Of FieldReaderInstance(Of T)).Reverse
    fullName: System.Collections.Generic.List(Of RW_ModularizationWeapon.FieldReaderInstance(Of T)).Reverse
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{{T}}}.Sort
  commentId: M:System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{`0}}.Sort
  parent: System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{{T}}}
  definition: System.Collections.Generic.List`1.Sort
  name: Sort()
  nameWithType: List<FieldReaderInstance<T>>.Sort()
  fullName: System.Collections.Generic.List<RW_ModularizationWeapon.FieldReaderInstance<T>>.Sort()
  nameWithType.vb: List(Of FieldReaderInstance(Of T)).Sort()
  fullName.vb: System.Collections.Generic.List(Of RW_ModularizationWeapon.FieldReaderInstance(Of T)).Sort()
  spec.csharp:
  - uid: System.Collections.Generic.List`1.Sort
    name: Sort
    nameWithType: List<FieldReaderInstance<T>>.Sort
    fullName: System.Collections.Generic.List<RW_ModularizationWeapon.FieldReaderInstance<T>>.Sort
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.Sort
    name: Sort
    nameWithType: List(Of FieldReaderInstance(Of T)).Sort
    fullName: System.Collections.Generic.List(Of RW_ModularizationWeapon.FieldReaderInstance(Of T)).Sort
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{{T}}}.Sort(System.Collections.Generic.IComparer{RW_ModularizationWeapon.FieldReaderInstance{{T}}})
  commentId: M:System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{`0}}.Sort(System.Collections.Generic.IComparer{RW_ModularizationWeapon.FieldReaderInstance{`0}})
  parent: System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{{T}}}
  definition: System.Collections.Generic.List`1.Sort(System.Collections.Generic.IComparer{`0})
  name: Sort(IComparer<FieldReaderInstance<T>>)
  nameWithType: List<FieldReaderInstance<T>>.Sort(IComparer<FieldReaderInstance<T>>)
  fullName: System.Collections.Generic.List<RW_ModularizationWeapon.FieldReaderInstance<T>>.Sort(System.Collections.Generic.IComparer<RW_ModularizationWeapon.FieldReaderInstance<T>>)
  nameWithType.vb: List(Of FieldReaderInstance(Of T)).Sort(IComparer(Of FieldReaderInstance(Of T)))
  fullName.vb: System.Collections.Generic.List(Of RW_ModularizationWeapon.FieldReaderInstance(Of T)).Sort(System.Collections.Generic.IComparer(Of RW_ModularizationWeapon.FieldReaderInstance(Of T)))
  name.vb: Sort(IComparer(Of FieldReaderInstance(Of T)))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.Sort(System.Collections.Generic.IComparer{`0})
    name: Sort
    nameWithType: List<FieldReaderInstance<T>>.Sort
    fullName: System.Collections.Generic.List<RW_ModularizationWeapon.FieldReaderInstance<T>>.Sort
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: RW_ModularizationWeapon.FieldReaderInstance`1
    name: FieldReaderInstance
    nameWithType: FieldReaderInstance
    fullName: RW_ModularizationWeapon.FieldReaderInstance
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.Sort(System.Collections.Generic.IComparer{`0})
    name: Sort
    nameWithType: List(Of FieldReaderInstance(Of T)).Sort
    fullName: System.Collections.Generic.List(Of RW_ModularizationWeapon.FieldReaderInstance(Of T)).Sort
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: RW_ModularizationWeapon.FieldReaderInstance`1
    name: FieldReaderInstance
    nameWithType: FieldReaderInstance
    fullName: RW_ModularizationWeapon.FieldReaderInstance
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{{T}}}.Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer{RW_ModularizationWeapon.FieldReaderInstance{{T}}})
  commentId: M:System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{`0}}.Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer{RW_ModularizationWeapon.FieldReaderInstance{`0}})
  parent: System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{{T}}}
  definition: System.Collections.Generic.List`1.Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer{`0})
  name: Sort(Int32, Int32, IComparer<FieldReaderInstance<T>>)
  nameWithType: List<FieldReaderInstance<T>>.Sort(Int32, Int32, IComparer<FieldReaderInstance<T>>)
  fullName: System.Collections.Generic.List<RW_ModularizationWeapon.FieldReaderInstance<T>>.Sort(System.Int32, System.Int32, System.Collections.Generic.IComparer<RW_ModularizationWeapon.FieldReaderInstance<T>>)
  nameWithType.vb: List(Of FieldReaderInstance(Of T)).Sort(Int32, Int32, IComparer(Of FieldReaderInstance(Of T)))
  fullName.vb: System.Collections.Generic.List(Of RW_ModularizationWeapon.FieldReaderInstance(Of T)).Sort(System.Int32, System.Int32, System.Collections.Generic.IComparer(Of RW_ModularizationWeapon.FieldReaderInstance(Of T)))
  name.vb: Sort(Int32, Int32, IComparer(Of FieldReaderInstance(Of T)))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer{`0})
    name: Sort
    nameWithType: List<FieldReaderInstance<T>>.Sort
    fullName: System.Collections.Generic.List<RW_ModularizationWeapon.FieldReaderInstance<T>>.Sort
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: RW_ModularizationWeapon.FieldReaderInstance`1
    name: FieldReaderInstance
    nameWithType: FieldReaderInstance
    fullName: RW_ModularizationWeapon.FieldReaderInstance
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer{`0})
    name: Sort
    nameWithType: List(Of FieldReaderInstance(Of T)).Sort
    fullName: System.Collections.Generic.List(Of RW_ModularizationWeapon.FieldReaderInstance(Of T)).Sort
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: RW_ModularizationWeapon.FieldReaderInstance`1
    name: FieldReaderInstance
    nameWithType: FieldReaderInstance
    fullName: RW_ModularizationWeapon.FieldReaderInstance
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{{T}}}.Sort(System.Comparison{RW_ModularizationWeapon.FieldReaderInstance{{T}}})
  commentId: M:System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{`0}}.Sort(System.Comparison{RW_ModularizationWeapon.FieldReaderInstance{`0}})
  parent: System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{{T}}}
  definition: System.Collections.Generic.List`1.Sort(System.Comparison{`0})
  name: Sort(Comparison<FieldReaderInstance<T>>)
  nameWithType: List<FieldReaderInstance<T>>.Sort(Comparison<FieldReaderInstance<T>>)
  fullName: System.Collections.Generic.List<RW_ModularizationWeapon.FieldReaderInstance<T>>.Sort(System.Comparison<RW_ModularizationWeapon.FieldReaderInstance<T>>)
  nameWithType.vb: List(Of FieldReaderInstance(Of T)).Sort(Comparison(Of FieldReaderInstance(Of T)))
  fullName.vb: System.Collections.Generic.List(Of RW_ModularizationWeapon.FieldReaderInstance(Of T)).Sort(System.Comparison(Of RW_ModularizationWeapon.FieldReaderInstance(Of T)))
  name.vb: Sort(Comparison(Of FieldReaderInstance(Of T)))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.Sort(System.Comparison{`0})
    name: Sort
    nameWithType: List<FieldReaderInstance<T>>.Sort
    fullName: System.Collections.Generic.List<RW_ModularizationWeapon.FieldReaderInstance<T>>.Sort
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Comparison`1
    name: Comparison
    nameWithType: Comparison
    fullName: System.Comparison
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: RW_ModularizationWeapon.FieldReaderInstance`1
    name: FieldReaderInstance
    nameWithType: FieldReaderInstance
    fullName: RW_ModularizationWeapon.FieldReaderInstance
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.Sort(System.Comparison{`0})
    name: Sort
    nameWithType: List(Of FieldReaderInstance(Of T)).Sort
    fullName: System.Collections.Generic.List(Of RW_ModularizationWeapon.FieldReaderInstance(Of T)).Sort
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Comparison`1
    name: Comparison
    nameWithType: Comparison
    fullName: System.Comparison
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: RW_ModularizationWeapon.FieldReaderInstance`1
    name: FieldReaderInstance
    nameWithType: FieldReaderInstance
    fullName: RW_ModularizationWeapon.FieldReaderInstance
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{{T}}}.ToArray
  commentId: M:System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{`0}}.ToArray
  parent: System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{{T}}}
  definition: System.Collections.Generic.List`1.ToArray
  name: ToArray()
  nameWithType: List<FieldReaderInstance<T>>.ToArray()
  fullName: System.Collections.Generic.List<RW_ModularizationWeapon.FieldReaderInstance<T>>.ToArray()
  nameWithType.vb: List(Of FieldReaderInstance(Of T)).ToArray()
  fullName.vb: System.Collections.Generic.List(Of RW_ModularizationWeapon.FieldReaderInstance(Of T)).ToArray()
  spec.csharp:
  - uid: System.Collections.Generic.List`1.ToArray
    name: ToArray
    nameWithType: List<FieldReaderInstance<T>>.ToArray
    fullName: System.Collections.Generic.List<RW_ModularizationWeapon.FieldReaderInstance<T>>.ToArray
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.ToArray
    name: ToArray
    nameWithType: List(Of FieldReaderInstance(Of T)).ToArray
    fullName: System.Collections.Generic.List(Of RW_ModularizationWeapon.FieldReaderInstance(Of T)).ToArray
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{{T}}}.TrimExcess
  commentId: M:System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{`0}}.TrimExcess
  parent: System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{{T}}}
  definition: System.Collections.Generic.List`1.TrimExcess
  name: TrimExcess()
  nameWithType: List<FieldReaderInstance<T>>.TrimExcess()
  fullName: System.Collections.Generic.List<RW_ModularizationWeapon.FieldReaderInstance<T>>.TrimExcess()
  nameWithType.vb: List(Of FieldReaderInstance(Of T)).TrimExcess()
  fullName.vb: System.Collections.Generic.List(Of RW_ModularizationWeapon.FieldReaderInstance(Of T)).TrimExcess()
  spec.csharp:
  - uid: System.Collections.Generic.List`1.TrimExcess
    name: TrimExcess
    nameWithType: List<FieldReaderInstance<T>>.TrimExcess
    fullName: System.Collections.Generic.List<RW_ModularizationWeapon.FieldReaderInstance<T>>.TrimExcess
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.TrimExcess
    name: TrimExcess
    nameWithType: List(Of FieldReaderInstance(Of T)).TrimExcess
    fullName: System.Collections.Generic.List(Of RW_ModularizationWeapon.FieldReaderInstance(Of T)).TrimExcess
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{{T}}}.TrueForAll(System.Predicate{RW_ModularizationWeapon.FieldReaderInstance{{T}}})
  commentId: M:System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{`0}}.TrueForAll(System.Predicate{RW_ModularizationWeapon.FieldReaderInstance{`0}})
  parent: System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{{T}}}
  definition: System.Collections.Generic.List`1.TrueForAll(System.Predicate{`0})
  name: TrueForAll(Predicate<FieldReaderInstance<T>>)
  nameWithType: List<FieldReaderInstance<T>>.TrueForAll(Predicate<FieldReaderInstance<T>>)
  fullName: System.Collections.Generic.List<RW_ModularizationWeapon.FieldReaderInstance<T>>.TrueForAll(System.Predicate<RW_ModularizationWeapon.FieldReaderInstance<T>>)
  nameWithType.vb: List(Of FieldReaderInstance(Of T)).TrueForAll(Predicate(Of FieldReaderInstance(Of T)))
  fullName.vb: System.Collections.Generic.List(Of RW_ModularizationWeapon.FieldReaderInstance(Of T)).TrueForAll(System.Predicate(Of RW_ModularizationWeapon.FieldReaderInstance(Of T)))
  name.vb: TrueForAll(Predicate(Of FieldReaderInstance(Of T)))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.TrueForAll(System.Predicate{`0})
    name: TrueForAll
    nameWithType: List<FieldReaderInstance<T>>.TrueForAll
    fullName: System.Collections.Generic.List<RW_ModularizationWeapon.FieldReaderInstance<T>>.TrueForAll
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: RW_ModularizationWeapon.FieldReaderInstance`1
    name: FieldReaderInstance
    nameWithType: FieldReaderInstance
    fullName: RW_ModularizationWeapon.FieldReaderInstance
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.TrueForAll(System.Predicate{`0})
    name: TrueForAll
    nameWithType: List(Of FieldReaderInstance(Of T)).TrueForAll
    fullName: System.Collections.Generic.List(Of RW_ModularizationWeapon.FieldReaderInstance(Of T)).TrueForAll
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: RW_ModularizationWeapon.FieldReaderInstance`1
    name: FieldReaderInstance
    nameWithType: FieldReaderInstance
    fullName: RW_ModularizationWeapon.FieldReaderInstance
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{{T}}}.Capacity
  commentId: P:System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{`0}}.Capacity
  parent: System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{{T}}}
  definition: System.Collections.Generic.List`1.Capacity
  name: Capacity
  nameWithType: List<FieldReaderInstance<T>>.Capacity
  fullName: System.Collections.Generic.List<RW_ModularizationWeapon.FieldReaderInstance<T>>.Capacity
  nameWithType.vb: List(Of FieldReaderInstance(Of T)).Capacity
  fullName.vb: System.Collections.Generic.List(Of RW_ModularizationWeapon.FieldReaderInstance(Of T)).Capacity
- uid: System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{{T}}}.Count
  commentId: P:System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{`0}}.Count
  parent: System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{{T}}}
  definition: System.Collections.Generic.List`1.Count
  name: Count
  nameWithType: List<FieldReaderInstance<T>>.Count
  fullName: System.Collections.Generic.List<RW_ModularizationWeapon.FieldReaderInstance<T>>.Count
  nameWithType.vb: List(Of FieldReaderInstance(Of T)).Count
  fullName.vb: System.Collections.Generic.List(Of RW_ModularizationWeapon.FieldReaderInstance(Of T)).Count
- uid: System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{{T}}}.System#Collections#IList#IsFixedSize
  commentId: P:System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{`0}}.System#Collections#IList#IsFixedSize
  parent: System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{{T}}}
  definition: System.Collections.Generic.List`1.System#Collections#IList#IsFixedSize
  name: IList.IsFixedSize
  nameWithType: List<FieldReaderInstance<T>>.IList.IsFixedSize
  fullName: System.Collections.Generic.List<RW_ModularizationWeapon.FieldReaderInstance<T>>.System.Collections.IList.IsFixedSize
  nameWithType.vb: List(Of FieldReaderInstance(Of T)).System.Collections.IList.IsFixedSize
  fullName.vb: System.Collections.Generic.List(Of RW_ModularizationWeapon.FieldReaderInstance(Of T)).System.Collections.IList.IsFixedSize
  name.vb: System.Collections.IList.IsFixedSize
- uid: System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{{T}}}.System#Collections#Generic#ICollection{T}#IsReadOnly
  commentId: P:System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{`0}}.System#Collections#Generic#ICollection{T}#IsReadOnly
  parent: System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{{T}}}
  definition: System.Collections.Generic.List`1.System#Collections#Generic#ICollection{T}#IsReadOnly
  name: ICollection<FieldReaderInstance<T>>.IsReadOnly
  nameWithType: List<FieldReaderInstance<T>>.ICollection<FieldReaderInstance<T>>.IsReadOnly
  fullName: System.Collections.Generic.List<RW_ModularizationWeapon.FieldReaderInstance<T>>.System.Collections.Generic.ICollection<RW_ModularizationWeapon.FieldReaderInstance<T>>.IsReadOnly
  nameWithType.vb: List(Of FieldReaderInstance(Of T)).System.Collections.Generic.ICollection<T>.IsReadOnly
  fullName.vb: System.Collections.Generic.List(Of RW_ModularizationWeapon.FieldReaderInstance(Of T)).System.Collections.Generic.ICollection<T>.IsReadOnly
  name.vb: System.Collections.Generic.ICollection<T>.IsReadOnly
- uid: System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{{T}}}.System#Collections#IList#IsReadOnly
  commentId: P:System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{`0}}.System#Collections#IList#IsReadOnly
  parent: System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{{T}}}
  definition: System.Collections.Generic.List`1.System#Collections#IList#IsReadOnly
  name: IList.IsReadOnly
  nameWithType: List<FieldReaderInstance<T>>.IList.IsReadOnly
  fullName: System.Collections.Generic.List<RW_ModularizationWeapon.FieldReaderInstance<T>>.System.Collections.IList.IsReadOnly
  nameWithType.vb: List(Of FieldReaderInstance(Of T)).System.Collections.IList.IsReadOnly
  fullName.vb: System.Collections.Generic.List(Of RW_ModularizationWeapon.FieldReaderInstance(Of T)).System.Collections.IList.IsReadOnly
  name.vb: System.Collections.IList.IsReadOnly
- uid: System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{{T}}}.System#Collections#ICollection#IsSynchronized
  commentId: P:System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{`0}}.System#Collections#ICollection#IsSynchronized
  parent: System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{{T}}}
  definition: System.Collections.Generic.List`1.System#Collections#ICollection#IsSynchronized
  name: ICollection.IsSynchronized
  nameWithType: List<FieldReaderInstance<T>>.ICollection.IsSynchronized
  fullName: System.Collections.Generic.List<RW_ModularizationWeapon.FieldReaderInstance<T>>.System.Collections.ICollection.IsSynchronized
  nameWithType.vb: List(Of FieldReaderInstance(Of T)).System.Collections.ICollection.IsSynchronized
  fullName.vb: System.Collections.Generic.List(Of RW_ModularizationWeapon.FieldReaderInstance(Of T)).System.Collections.ICollection.IsSynchronized
  name.vb: System.Collections.ICollection.IsSynchronized
- uid: System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{{T}}}.System#Collections#ICollection#SyncRoot
  commentId: P:System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{`0}}.System#Collections#ICollection#SyncRoot
  parent: System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{{T}}}
  definition: System.Collections.Generic.List`1.System#Collections#ICollection#SyncRoot
  name: ICollection.SyncRoot
  nameWithType: List<FieldReaderInstance<T>>.ICollection.SyncRoot
  fullName: System.Collections.Generic.List<RW_ModularizationWeapon.FieldReaderInstance<T>>.System.Collections.ICollection.SyncRoot
  nameWithType.vb: List(Of FieldReaderInstance(Of T)).System.Collections.ICollection.SyncRoot
  fullName.vb: System.Collections.Generic.List(Of RW_ModularizationWeapon.FieldReaderInstance(Of T)).System.Collections.ICollection.SyncRoot
  name.vb: System.Collections.ICollection.SyncRoot
- uid: System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{{T}}}.Item(System.Int32)
  commentId: P:System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{`0}}.Item(System.Int32)
  parent: System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{{T}}}
  definition: System.Collections.Generic.List`1.Item(System.Int32)
  name: Item[Int32]
  nameWithType: List<FieldReaderInstance<T>>.Item[Int32]
  fullName: System.Collections.Generic.List<RW_ModularizationWeapon.FieldReaderInstance<T>>.Item[System.Int32]
  nameWithType.vb: List(Of FieldReaderInstance(Of T)).Item(Int32)
  fullName.vb: System.Collections.Generic.List(Of RW_ModularizationWeapon.FieldReaderInstance(Of T)).Item(System.Int32)
  name.vb: Item(Int32)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.Item(System.Int32)
    name: Item
    nameWithType: List<FieldReaderInstance<T>>.Item
    fullName: System.Collections.Generic.List<RW_ModularizationWeapon.FieldReaderInstance<T>>.Item
    isExternal: true
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: System.Collections.Generic.List`1.Item(System.Int32)
    name: Item
    nameWithType: List(Of FieldReaderInstance(Of T)).Item
    fullName: System.Collections.Generic.List(Of RW_ModularizationWeapon.FieldReaderInstance(Of T)).Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{{T}}}.System#Collections#IList#Item(System.Int32)
  commentId: P:System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{`0}}.System#Collections#IList#Item(System.Int32)
  parent: System.Collections.Generic.List{RW_ModularizationWeapon.FieldReaderInstance{{T}}}
  definition: System.Collections.Generic.List`1.System#Collections#IList#Item(System.Int32)
  name: IList.Item[Int32]
  nameWithType: List<FieldReaderInstance<T>>.IList.Item[Int32]
  fullName: System.Collections.Generic.List<RW_ModularizationWeapon.FieldReaderInstance<T>>.System.Collections.IList.Item[System.Int32]
  nameWithType.vb: List(Of FieldReaderInstance(Of T)).System.Collections.IList.Item(Int32)
  fullName.vb: System.Collections.Generic.List(Of RW_ModularizationWeapon.FieldReaderInstance(Of T)).System.Collections.IList.Item(System.Int32)
  name.vb: System.Collections.IList.Item(Int32)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.System#Collections#IList#Item(System.Int32)
    name: IList.Item
    nameWithType: List<FieldReaderInstance<T>>.IList.Item
    fullName: System.Collections.Generic.List<RW_ModularizationWeapon.FieldReaderInstance<T>>.System.Collections.IList.Item
    isExternal: true
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: System.Collections.Generic.List`1.System#Collections#IList#Item(System.Int32)
    name: System.Collections.IList.Item
    nameWithType: List(Of FieldReaderInstance(Of T)).System.Collections.IList.Item
    fullName: System.Collections.Generic.List(Of RW_ModularizationWeapon.FieldReaderInstance(Of T)).System.Collections.IList.Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.RW_ModularizationWeapon.Tools.ToolsFunction.LogAllField
  commentId: M:RW_ModularizationWeapon.Tools.ToolsFunction.LogAllField(System.Object)
  parent: RW_ModularizationWeapon.Tools.ToolsFunction
  definition: RW_ModularizationWeapon.Tools.ToolsFunction.LogAllField(System.Object)
  name: LogAllField()
  nameWithType: ToolsFunction.LogAllField()
  fullName: RW_ModularizationWeapon.Tools.ToolsFunction.LogAllField()
  spec.csharp:
  - uid: RW_ModularizationWeapon.Tools.ToolsFunction.LogAllField
    name: LogAllField
    nameWithType: ToolsFunction.LogAllField
    fullName: RW_ModularizationWeapon.Tools.ToolsFunction.LogAllField
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: RW_ModularizationWeapon.Tools.ToolsFunction.LogAllField
    name: LogAllField
    nameWithType: ToolsFunction.LogAllField
    fullName: RW_ModularizationWeapon.Tools.ToolsFunction.LogAllField
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1
  commentId: T:System.Collections.Generic.ICollection`1
  isExternal: true
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullName.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: true
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
- uid: System.Collections.Generic.IReadOnlyList`1
  commentId: T:System.Collections.Generic.IReadOnlyList`1
  isExternal: true
  name: IReadOnlyList<T>
  nameWithType: IReadOnlyList<T>
  fullName: System.Collections.Generic.IReadOnlyList<T>
  nameWithType.vb: IReadOnlyList(Of T)
  fullName.vb: System.Collections.Generic.IReadOnlyList(Of T)
  name.vb: IReadOnlyList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IReadOnlyCollection`1
  commentId: T:System.Collections.Generic.IReadOnlyCollection`1
  isExternal: true
  name: IReadOnlyCollection<T>
  nameWithType: IReadOnlyCollection<T>
  fullName: System.Collections.Generic.IReadOnlyCollection<T>
  nameWithType.vb: IReadOnlyCollection(Of T)
  fullName.vb: System.Collections.Generic.IReadOnlyCollection(Of T)
  name.vb: IReadOnlyCollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.System#Collections#IList#get_Item(System.Int32)
  commentId: M:System.Collections.Generic.List`1.System#Collections#IList#get_Item(System.Int32)
  isExternal: true
  name: IList.get_Item(Int32)
  nameWithType: List<T>.IList.get_Item(Int32)
  fullName: System.Collections.Generic.List<T>.System.Collections.IList.get_Item(System.Int32)
  nameWithType.vb: List(Of T).System.Collections.IList.get_Item(Int32)
  fullName.vb: System.Collections.Generic.List(Of T).System.Collections.IList.get_Item(System.Int32)
  name.vb: System.Collections.IList.get_Item(Int32)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.System#Collections#IList#get_Item(System.Int32)
    name: IList.get_Item
    nameWithType: List<T>.IList.get_Item
    fullName: System.Collections.Generic.List<T>.System.Collections.IList.get_Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.System#Collections#IList#get_Item(System.Int32)
    name: System.Collections.IList.get_Item
    nameWithType: List(Of T).System.Collections.IList.get_Item
    fullName: System.Collections.Generic.List(Of T).System.Collections.IList.get_Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.System#Collections#IList#set_Item(System.Int32,System.Object)
  commentId: M:System.Collections.Generic.List`1.System#Collections#IList#set_Item(System.Int32,System.Object)
  isExternal: true
  name: IList.set_Item(Int32, Object)
  nameWithType: List<T>.IList.set_Item(Int32, Object)
  fullName: System.Collections.Generic.List<T>.System.Collections.IList.set_Item(System.Int32, System.Object)
  nameWithType.vb: List(Of T).System.Collections.IList.set_Item(Int32, Object)
  fullName.vb: System.Collections.Generic.List(Of T).System.Collections.IList.set_Item(System.Int32, System.Object)
  name.vb: System.Collections.IList.set_Item(Int32, Object)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.System#Collections#IList#set_Item(System.Int32,System.Object)
    name: IList.set_Item
    nameWithType: List<T>.IList.set_Item
    fullName: System.Collections.Generic.List<T>.System.Collections.IList.set_Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.System#Collections#IList#set_Item(System.Int32,System.Object)
    name: System.Collections.IList.set_Item
    nameWithType: List(Of T).System.Collections.IList.set_Item
    fullName: System.Collections.Generic.List(Of T).System.Collections.IList.set_Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.Add(`0)
  commentId: M:System.Collections.Generic.List`1.Add(`0)
  isExternal: true
  name: Add(T)
  nameWithType: List<T>.Add(T)
  fullName: System.Collections.Generic.List<T>.Add(T)
  nameWithType.vb: List(Of T).Add(T)
  fullName.vb: System.Collections.Generic.List(Of T).Add(T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.Add(`0)
    name: Add
    nameWithType: List<T>.Add
    fullName: System.Collections.Generic.List<T>.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.Add(`0)
    name: Add
    nameWithType: List(Of T).Add
    fullName: System.Collections.Generic.List(Of T).Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.System#Collections#IList#Add(System.Object)
  commentId: M:System.Collections.Generic.List`1.System#Collections#IList#Add(System.Object)
  isExternal: true
  name: IList.Add(Object)
  nameWithType: List<T>.IList.Add(Object)
  fullName: System.Collections.Generic.List<T>.System.Collections.IList.Add(System.Object)
  nameWithType.vb: List(Of T).System.Collections.IList.Add(Object)
  fullName.vb: System.Collections.Generic.List(Of T).System.Collections.IList.Add(System.Object)
  name.vb: System.Collections.IList.Add(Object)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.System#Collections#IList#Add(System.Object)
    name: IList.Add
    nameWithType: List<T>.IList.Add
    fullName: System.Collections.Generic.List<T>.System.Collections.IList.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.System#Collections#IList#Add(System.Object)
    name: System.Collections.IList.Add
    nameWithType: List(Of T).System.Collections.IList.Add
    fullName: System.Collections.Generic.List(Of T).System.Collections.IList.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.AddRange(System.Collections.Generic.IEnumerable{`0})
  commentId: M:System.Collections.Generic.List`1.AddRange(System.Collections.Generic.IEnumerable{`0})
  isExternal: true
  name: AddRange(IEnumerable<T>)
  nameWithType: List<T>.AddRange(IEnumerable<T>)
  fullName: System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)
  nameWithType.vb: List(Of T).AddRange(IEnumerable(Of T))
  fullName.vb: System.Collections.Generic.List(Of T).AddRange(System.Collections.Generic.IEnumerable(Of T))
  name.vb: AddRange(IEnumerable(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.AddRange(System.Collections.Generic.IEnumerable{`0})
    name: AddRange
    nameWithType: List<T>.AddRange
    fullName: System.Collections.Generic.List<T>.AddRange
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.AddRange(System.Collections.Generic.IEnumerable{`0})
    name: AddRange
    nameWithType: List(Of T).AddRange
    fullName: System.Collections.Generic.List(Of T).AddRange
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.AsReadOnly
  commentId: M:System.Collections.Generic.List`1.AsReadOnly
  isExternal: true
  name: AsReadOnly()
  nameWithType: List<T>.AsReadOnly()
  fullName: System.Collections.Generic.List<T>.AsReadOnly()
  nameWithType.vb: List(Of T).AsReadOnly()
  fullName.vb: System.Collections.Generic.List(Of T).AsReadOnly()
  spec.csharp:
  - uid: System.Collections.Generic.List`1.AsReadOnly
    name: AsReadOnly
    nameWithType: List<T>.AsReadOnly
    fullName: System.Collections.Generic.List<T>.AsReadOnly
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.AsReadOnly
    name: AsReadOnly
    nameWithType: List(Of T).AsReadOnly
    fullName: System.Collections.Generic.List(Of T).AsReadOnly
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.BinarySearch(System.Int32,System.Int32,`0,System.Collections.Generic.IComparer{`0})
  commentId: M:System.Collections.Generic.List`1.BinarySearch(System.Int32,System.Int32,`0,System.Collections.Generic.IComparer{`0})
  isExternal: true
  name: BinarySearch(Int32, Int32, T, IComparer<T>)
  nameWithType: List<T>.BinarySearch(Int32, Int32, T, IComparer<T>)
  fullName: System.Collections.Generic.List<T>.BinarySearch(System.Int32, System.Int32, T, System.Collections.Generic.IComparer<T>)
  nameWithType.vb: List(Of T).BinarySearch(Int32, Int32, T, IComparer(Of T))
  fullName.vb: System.Collections.Generic.List(Of T).BinarySearch(System.Int32, System.Int32, T, System.Collections.Generic.IComparer(Of T))
  name.vb: BinarySearch(Int32, Int32, T, IComparer(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.BinarySearch(System.Int32,System.Int32,`0,System.Collections.Generic.IComparer{`0})
    name: BinarySearch
    nameWithType: List<T>.BinarySearch
    fullName: System.Collections.Generic.List<T>.BinarySearch
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.BinarySearch(System.Int32,System.Int32,`0,System.Collections.Generic.IComparer{`0})
    name: BinarySearch
    nameWithType: List(Of T).BinarySearch
    fullName: System.Collections.Generic.List(Of T).BinarySearch
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.BinarySearch(`0)
  commentId: M:System.Collections.Generic.List`1.BinarySearch(`0)
  isExternal: true
  name: BinarySearch(T)
  nameWithType: List<T>.BinarySearch(T)
  fullName: System.Collections.Generic.List<T>.BinarySearch(T)
  nameWithType.vb: List(Of T).BinarySearch(T)
  fullName.vb: System.Collections.Generic.List(Of T).BinarySearch(T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.BinarySearch(`0)
    name: BinarySearch
    nameWithType: List<T>.BinarySearch
    fullName: System.Collections.Generic.List<T>.BinarySearch
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.BinarySearch(`0)
    name: BinarySearch
    nameWithType: List(Of T).BinarySearch
    fullName: System.Collections.Generic.List(Of T).BinarySearch
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.BinarySearch(`0,System.Collections.Generic.IComparer{`0})
  commentId: M:System.Collections.Generic.List`1.BinarySearch(`0,System.Collections.Generic.IComparer{`0})
  isExternal: true
  name: BinarySearch(T, IComparer<T>)
  nameWithType: List<T>.BinarySearch(T, IComparer<T>)
  fullName: System.Collections.Generic.List<T>.BinarySearch(T, System.Collections.Generic.IComparer<T>)
  nameWithType.vb: List(Of T).BinarySearch(T, IComparer(Of T))
  fullName.vb: System.Collections.Generic.List(Of T).BinarySearch(T, System.Collections.Generic.IComparer(Of T))
  name.vb: BinarySearch(T, IComparer(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.BinarySearch(`0,System.Collections.Generic.IComparer{`0})
    name: BinarySearch
    nameWithType: List<T>.BinarySearch
    fullName: System.Collections.Generic.List<T>.BinarySearch
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.BinarySearch(`0,System.Collections.Generic.IComparer{`0})
    name: BinarySearch
    nameWithType: List(Of T).BinarySearch
    fullName: System.Collections.Generic.List(Of T).BinarySearch
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.Clear
  commentId: M:System.Collections.Generic.List`1.Clear
  isExternal: true
  name: Clear()
  nameWithType: List<T>.Clear()
  fullName: System.Collections.Generic.List<T>.Clear()
  nameWithType.vb: List(Of T).Clear()
  fullName.vb: System.Collections.Generic.List(Of T).Clear()
  spec.csharp:
  - uid: System.Collections.Generic.List`1.Clear
    name: Clear
    nameWithType: List<T>.Clear
    fullName: System.Collections.Generic.List<T>.Clear
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.Clear
    name: Clear
    nameWithType: List(Of T).Clear
    fullName: System.Collections.Generic.List(Of T).Clear
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.Contains(`0)
  commentId: M:System.Collections.Generic.List`1.Contains(`0)
  isExternal: true
  name: Contains(T)
  nameWithType: List<T>.Contains(T)
  fullName: System.Collections.Generic.List<T>.Contains(T)
  nameWithType.vb: List(Of T).Contains(T)
  fullName.vb: System.Collections.Generic.List(Of T).Contains(T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.Contains(`0)
    name: Contains
    nameWithType: List<T>.Contains
    fullName: System.Collections.Generic.List<T>.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.Contains(`0)
    name: Contains
    nameWithType: List(Of T).Contains
    fullName: System.Collections.Generic.List(Of T).Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.System#Collections#IList#Contains(System.Object)
  commentId: M:System.Collections.Generic.List`1.System#Collections#IList#Contains(System.Object)
  isExternal: true
  name: IList.Contains(Object)
  nameWithType: List<T>.IList.Contains(Object)
  fullName: System.Collections.Generic.List<T>.System.Collections.IList.Contains(System.Object)
  nameWithType.vb: List(Of T).System.Collections.IList.Contains(Object)
  fullName.vb: System.Collections.Generic.List(Of T).System.Collections.IList.Contains(System.Object)
  name.vb: System.Collections.IList.Contains(Object)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.System#Collections#IList#Contains(System.Object)
    name: IList.Contains
    nameWithType: List<T>.IList.Contains
    fullName: System.Collections.Generic.List<T>.System.Collections.IList.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.System#Collections#IList#Contains(System.Object)
    name: System.Collections.IList.Contains
    nameWithType: List(Of T).System.Collections.IList.Contains
    fullName: System.Collections.Generic.List(Of T).System.Collections.IList.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.ConvertAll``1(System.Converter{`0,``0})
  commentId: M:System.Collections.Generic.List`1.ConvertAll``1(System.Converter{`0,``0})
  isExternal: true
  name: ConvertAll<TOutput>(Converter<T, TOutput>)
  nameWithType: List<T>.ConvertAll<TOutput>(Converter<T, TOutput>)
  fullName: System.Collections.Generic.List<T>.ConvertAll<TOutput>(System.Converter<T, TOutput>)
  nameWithType.vb: List(Of T).ConvertAll(Of TOutput)(Converter(Of T, TOutput))
  fullName.vb: System.Collections.Generic.List(Of T).ConvertAll(Of TOutput)(System.Converter(Of T, TOutput))
  name.vb: ConvertAll(Of TOutput)(Converter(Of T, TOutput))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.ConvertAll``1(System.Converter{`0,``0})
    name: ConvertAll<TOutput>
    nameWithType: List<T>.ConvertAll<TOutput>
    fullName: System.Collections.Generic.List<T>.ConvertAll<TOutput>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Converter`2
    name: Converter
    nameWithType: Converter
    fullName: System.Converter
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TOutput
    nameWithType: TOutput
    fullName: TOutput
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.ConvertAll``1(System.Converter{`0,``0})
    name: ConvertAll(Of TOutput)
    nameWithType: List(Of T).ConvertAll(Of TOutput)
    fullName: System.Collections.Generic.List(Of T).ConvertAll(Of TOutput)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Converter`2
    name: Converter
    nameWithType: Converter
    fullName: System.Converter
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TOutput
    nameWithType: TOutput
    fullName: TOutput
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.CopyTo(`0[])
  commentId: M:System.Collections.Generic.List`1.CopyTo(`0[])
  isExternal: true
  name: CopyTo(T[])
  nameWithType: List<T>.CopyTo(T[])
  fullName: System.Collections.Generic.List<T>.CopyTo(T[])
  nameWithType.vb: List(Of T).CopyTo(T())
  fullName.vb: System.Collections.Generic.List(Of T).CopyTo(T())
  name.vb: CopyTo(T())
  spec.csharp:
  - uid: System.Collections.Generic.List`1.CopyTo(`0[])
    name: CopyTo
    nameWithType: List<T>.CopyTo
    fullName: System.Collections.Generic.List<T>.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.CopyTo(`0[])
    name: CopyTo
    nameWithType: List(Of T).CopyTo
    fullName: System.Collections.Generic.List(Of T).CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  commentId: M:System.Collections.Generic.List`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  isExternal: true
  name: ICollection.CopyTo(Array, Int32)
  nameWithType: List<T>.ICollection.CopyTo(Array, Int32)
  fullName: System.Collections.Generic.List<T>.System.Collections.ICollection.CopyTo(System.Array, System.Int32)
  nameWithType.vb: List(Of T).System.Collections.ICollection.CopyTo(Array, Int32)
  fullName.vb: System.Collections.Generic.List(Of T).System.Collections.ICollection.CopyTo(System.Array, System.Int32)
  name.vb: System.Collections.ICollection.CopyTo(Array, Int32)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
    name: ICollection.CopyTo
    nameWithType: List<T>.ICollection.CopyTo
    fullName: System.Collections.Generic.List<T>.System.Collections.ICollection.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Array
    name: Array
    nameWithType: Array
    fullName: System.Array
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
    name: System.Collections.ICollection.CopyTo
    nameWithType: List(Of T).System.Collections.ICollection.CopyTo
    fullName: System.Collections.Generic.List(Of T).System.Collections.ICollection.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Array
    name: Array
    nameWithType: Array
    fullName: System.Array
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.CopyTo(System.Int32,`0[],System.Int32,System.Int32)
  commentId: M:System.Collections.Generic.List`1.CopyTo(System.Int32,`0[],System.Int32,System.Int32)
  isExternal: true
  name: CopyTo(Int32, T[], Int32, Int32)
  nameWithType: List<T>.CopyTo(Int32, T[], Int32, Int32)
  fullName: System.Collections.Generic.List<T>.CopyTo(System.Int32, T[], System.Int32, System.Int32)
  nameWithType.vb: List(Of T).CopyTo(Int32, T(), Int32, Int32)
  fullName.vb: System.Collections.Generic.List(Of T).CopyTo(System.Int32, T(), System.Int32, System.Int32)
  name.vb: CopyTo(Int32, T(), Int32, Int32)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.CopyTo(System.Int32,`0[],System.Int32,System.Int32)
    name: CopyTo
    nameWithType: List<T>.CopyTo
    fullName: System.Collections.Generic.List<T>.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.CopyTo(System.Int32,`0[],System.Int32,System.Int32)
    name: CopyTo
    nameWithType: List(Of T).CopyTo
    fullName: System.Collections.Generic.List(Of T).CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.CopyTo(`0[],System.Int32)
  commentId: M:System.Collections.Generic.List`1.CopyTo(`0[],System.Int32)
  isExternal: true
  name: CopyTo(T[], Int32)
  nameWithType: List<T>.CopyTo(T[], Int32)
  fullName: System.Collections.Generic.List<T>.CopyTo(T[], System.Int32)
  nameWithType.vb: List(Of T).CopyTo(T(), Int32)
  fullName.vb: System.Collections.Generic.List(Of T).CopyTo(T(), System.Int32)
  name.vb: CopyTo(T(), Int32)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    nameWithType: List<T>.CopyTo
    fullName: System.Collections.Generic.List<T>.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    nameWithType: List(Of T).CopyTo
    fullName: System.Collections.Generic.List(Of T).CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.Exists(System.Predicate{`0})
  commentId: M:System.Collections.Generic.List`1.Exists(System.Predicate{`0})
  isExternal: true
  name: Exists(Predicate<T>)
  nameWithType: List<T>.Exists(Predicate<T>)
  fullName: System.Collections.Generic.List<T>.Exists(System.Predicate<T>)
  nameWithType.vb: List(Of T).Exists(Predicate(Of T))
  fullName.vb: System.Collections.Generic.List(Of T).Exists(System.Predicate(Of T))
  name.vb: Exists(Predicate(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.Exists(System.Predicate{`0})
    name: Exists
    nameWithType: List<T>.Exists
    fullName: System.Collections.Generic.List<T>.Exists
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.Exists(System.Predicate{`0})
    name: Exists
    nameWithType: List(Of T).Exists
    fullName: System.Collections.Generic.List(Of T).Exists
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.Find(System.Predicate{`0})
  commentId: M:System.Collections.Generic.List`1.Find(System.Predicate{`0})
  isExternal: true
  name: Find(Predicate<T>)
  nameWithType: List<T>.Find(Predicate<T>)
  fullName: System.Collections.Generic.List<T>.Find(System.Predicate<T>)
  nameWithType.vb: List(Of T).Find(Predicate(Of T))
  fullName.vb: System.Collections.Generic.List(Of T).Find(System.Predicate(Of T))
  name.vb: Find(Predicate(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.Find(System.Predicate{`0})
    name: Find
    nameWithType: List<T>.Find
    fullName: System.Collections.Generic.List<T>.Find
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.Find(System.Predicate{`0})
    name: Find
    nameWithType: List(Of T).Find
    fullName: System.Collections.Generic.List(Of T).Find
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.FindAll(System.Predicate{`0})
  commentId: M:System.Collections.Generic.List`1.FindAll(System.Predicate{`0})
  isExternal: true
  name: FindAll(Predicate<T>)
  nameWithType: List<T>.FindAll(Predicate<T>)
  fullName: System.Collections.Generic.List<T>.FindAll(System.Predicate<T>)
  nameWithType.vb: List(Of T).FindAll(Predicate(Of T))
  fullName.vb: System.Collections.Generic.List(Of T).FindAll(System.Predicate(Of T))
  name.vb: FindAll(Predicate(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.FindAll(System.Predicate{`0})
    name: FindAll
    nameWithType: List<T>.FindAll
    fullName: System.Collections.Generic.List<T>.FindAll
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.FindAll(System.Predicate{`0})
    name: FindAll
    nameWithType: List(Of T).FindAll
    fullName: System.Collections.Generic.List(Of T).FindAll
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.FindIndex(System.Predicate{`0})
  commentId: M:System.Collections.Generic.List`1.FindIndex(System.Predicate{`0})
  isExternal: true
  name: FindIndex(Predicate<T>)
  nameWithType: List<T>.FindIndex(Predicate<T>)
  fullName: System.Collections.Generic.List<T>.FindIndex(System.Predicate<T>)
  nameWithType.vb: List(Of T).FindIndex(Predicate(Of T))
  fullName.vb: System.Collections.Generic.List(Of T).FindIndex(System.Predicate(Of T))
  name.vb: FindIndex(Predicate(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.FindIndex(System.Predicate{`0})
    name: FindIndex
    nameWithType: List<T>.FindIndex
    fullName: System.Collections.Generic.List<T>.FindIndex
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.FindIndex(System.Predicate{`0})
    name: FindIndex
    nameWithType: List(Of T).FindIndex
    fullName: System.Collections.Generic.List(Of T).FindIndex
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.FindIndex(System.Int32,System.Predicate{`0})
  commentId: M:System.Collections.Generic.List`1.FindIndex(System.Int32,System.Predicate{`0})
  isExternal: true
  name: FindIndex(Int32, Predicate<T>)
  nameWithType: List<T>.FindIndex(Int32, Predicate<T>)
  fullName: System.Collections.Generic.List<T>.FindIndex(System.Int32, System.Predicate<T>)
  nameWithType.vb: List(Of T).FindIndex(Int32, Predicate(Of T))
  fullName.vb: System.Collections.Generic.List(Of T).FindIndex(System.Int32, System.Predicate(Of T))
  name.vb: FindIndex(Int32, Predicate(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.FindIndex(System.Int32,System.Predicate{`0})
    name: FindIndex
    nameWithType: List<T>.FindIndex
    fullName: System.Collections.Generic.List<T>.FindIndex
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.FindIndex(System.Int32,System.Predicate{`0})
    name: FindIndex
    nameWithType: List(Of T).FindIndex
    fullName: System.Collections.Generic.List(Of T).FindIndex
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.FindIndex(System.Int32,System.Int32,System.Predicate{`0})
  commentId: M:System.Collections.Generic.List`1.FindIndex(System.Int32,System.Int32,System.Predicate{`0})
  isExternal: true
  name: FindIndex(Int32, Int32, Predicate<T>)
  nameWithType: List<T>.FindIndex(Int32, Int32, Predicate<T>)
  fullName: System.Collections.Generic.List<T>.FindIndex(System.Int32, System.Int32, System.Predicate<T>)
  nameWithType.vb: List(Of T).FindIndex(Int32, Int32, Predicate(Of T))
  fullName.vb: System.Collections.Generic.List(Of T).FindIndex(System.Int32, System.Int32, System.Predicate(Of T))
  name.vb: FindIndex(Int32, Int32, Predicate(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.FindIndex(System.Int32,System.Int32,System.Predicate{`0})
    name: FindIndex
    nameWithType: List<T>.FindIndex
    fullName: System.Collections.Generic.List<T>.FindIndex
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.FindIndex(System.Int32,System.Int32,System.Predicate{`0})
    name: FindIndex
    nameWithType: List(Of T).FindIndex
    fullName: System.Collections.Generic.List(Of T).FindIndex
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.FindLast(System.Predicate{`0})
  commentId: M:System.Collections.Generic.List`1.FindLast(System.Predicate{`0})
  isExternal: true
  name: FindLast(Predicate<T>)
  nameWithType: List<T>.FindLast(Predicate<T>)
  fullName: System.Collections.Generic.List<T>.FindLast(System.Predicate<T>)
  nameWithType.vb: List(Of T).FindLast(Predicate(Of T))
  fullName.vb: System.Collections.Generic.List(Of T).FindLast(System.Predicate(Of T))
  name.vb: FindLast(Predicate(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.FindLast(System.Predicate{`0})
    name: FindLast
    nameWithType: List<T>.FindLast
    fullName: System.Collections.Generic.List<T>.FindLast
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.FindLast(System.Predicate{`0})
    name: FindLast
    nameWithType: List(Of T).FindLast
    fullName: System.Collections.Generic.List(Of T).FindLast
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.FindLastIndex(System.Predicate{`0})
  commentId: M:System.Collections.Generic.List`1.FindLastIndex(System.Predicate{`0})
  isExternal: true
  name: FindLastIndex(Predicate<T>)
  nameWithType: List<T>.FindLastIndex(Predicate<T>)
  fullName: System.Collections.Generic.List<T>.FindLastIndex(System.Predicate<T>)
  nameWithType.vb: List(Of T).FindLastIndex(Predicate(Of T))
  fullName.vb: System.Collections.Generic.List(Of T).FindLastIndex(System.Predicate(Of T))
  name.vb: FindLastIndex(Predicate(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.FindLastIndex(System.Predicate{`0})
    name: FindLastIndex
    nameWithType: List<T>.FindLastIndex
    fullName: System.Collections.Generic.List<T>.FindLastIndex
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.FindLastIndex(System.Predicate{`0})
    name: FindLastIndex
    nameWithType: List(Of T).FindLastIndex
    fullName: System.Collections.Generic.List(Of T).FindLastIndex
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.FindLastIndex(System.Int32,System.Predicate{`0})
  commentId: M:System.Collections.Generic.List`1.FindLastIndex(System.Int32,System.Predicate{`0})
  isExternal: true
  name: FindLastIndex(Int32, Predicate<T>)
  nameWithType: List<T>.FindLastIndex(Int32, Predicate<T>)
  fullName: System.Collections.Generic.List<T>.FindLastIndex(System.Int32, System.Predicate<T>)
  nameWithType.vb: List(Of T).FindLastIndex(Int32, Predicate(Of T))
  fullName.vb: System.Collections.Generic.List(Of T).FindLastIndex(System.Int32, System.Predicate(Of T))
  name.vb: FindLastIndex(Int32, Predicate(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.FindLastIndex(System.Int32,System.Predicate{`0})
    name: FindLastIndex
    nameWithType: List<T>.FindLastIndex
    fullName: System.Collections.Generic.List<T>.FindLastIndex
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.FindLastIndex(System.Int32,System.Predicate{`0})
    name: FindLastIndex
    nameWithType: List(Of T).FindLastIndex
    fullName: System.Collections.Generic.List(Of T).FindLastIndex
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.FindLastIndex(System.Int32,System.Int32,System.Predicate{`0})
  commentId: M:System.Collections.Generic.List`1.FindLastIndex(System.Int32,System.Int32,System.Predicate{`0})
  isExternal: true
  name: FindLastIndex(Int32, Int32, Predicate<T>)
  nameWithType: List<T>.FindLastIndex(Int32, Int32, Predicate<T>)
  fullName: System.Collections.Generic.List<T>.FindLastIndex(System.Int32, System.Int32, System.Predicate<T>)
  nameWithType.vb: List(Of T).FindLastIndex(Int32, Int32, Predicate(Of T))
  fullName.vb: System.Collections.Generic.List(Of T).FindLastIndex(System.Int32, System.Int32, System.Predicate(Of T))
  name.vb: FindLastIndex(Int32, Int32, Predicate(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.FindLastIndex(System.Int32,System.Int32,System.Predicate{`0})
    name: FindLastIndex
    nameWithType: List<T>.FindLastIndex
    fullName: System.Collections.Generic.List<T>.FindLastIndex
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.FindLastIndex(System.Int32,System.Int32,System.Predicate{`0})
    name: FindLastIndex
    nameWithType: List(Of T).FindLastIndex
    fullName: System.Collections.Generic.List(Of T).FindLastIndex
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.ForEach(System.Action{`0})
  commentId: M:System.Collections.Generic.List`1.ForEach(System.Action{`0})
  isExternal: true
  name: ForEach(Action<T>)
  nameWithType: List<T>.ForEach(Action<T>)
  fullName: System.Collections.Generic.List<T>.ForEach(System.Action<T>)
  nameWithType.vb: List(Of T).ForEach(Action(Of T))
  fullName.vb: System.Collections.Generic.List(Of T).ForEach(System.Action(Of T))
  name.vb: ForEach(Action(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.ForEach(System.Action{`0})
    name: ForEach
    nameWithType: List<T>.ForEach
    fullName: System.Collections.Generic.List<T>.ForEach
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.ForEach(System.Action{`0})
    name: ForEach
    nameWithType: List(Of T).ForEach
    fullName: System.Collections.Generic.List(Of T).ForEach
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.GetEnumerator
  commentId: M:System.Collections.Generic.List`1.GetEnumerator
  isExternal: true
  name: GetEnumerator()
  nameWithType: List<T>.GetEnumerator()
  fullName: System.Collections.Generic.List<T>.GetEnumerator()
  nameWithType.vb: List(Of T).GetEnumerator()
  fullName.vb: System.Collections.Generic.List(Of T).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.List`1.GetEnumerator
    name: GetEnumerator
    nameWithType: List<T>.GetEnumerator
    fullName: System.Collections.Generic.List<T>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.GetEnumerator
    name: GetEnumerator
    nameWithType: List(Of T).GetEnumerator
    fullName: System.Collections.Generic.List(Of T).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator
  commentId: M:System.Collections.Generic.List`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator
  isExternal: true
  name: IEnumerable<T>.GetEnumerator()
  nameWithType: List<T>.IEnumerable<T>.GetEnumerator()
  fullName: System.Collections.Generic.List<T>.System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  nameWithType.vb: List(Of T).System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  fullName.vb: System.Collections.Generic.List(Of T).System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  name.vb: System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.List`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator
    name: IEnumerable<T>.GetEnumerator
    nameWithType: List<T>.IEnumerable<T>.GetEnumerator
    fullName: System.Collections.Generic.List<T>.System.Collections.Generic.IEnumerable<T>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator
    name: System.Collections.Generic.IEnumerable<T>.GetEnumerator
    nameWithType: List(Of T).System.Collections.Generic.IEnumerable<T>.GetEnumerator
    fullName: System.Collections.Generic.List(Of T).System.Collections.Generic.IEnumerable<T>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.System#Collections#IEnumerable#GetEnumerator
  commentId: M:System.Collections.Generic.List`1.System#Collections#IEnumerable#GetEnumerator
  isExternal: true
  name: IEnumerable.GetEnumerator()
  nameWithType: List<T>.IEnumerable.GetEnumerator()
  fullName: System.Collections.Generic.List<T>.System.Collections.IEnumerable.GetEnumerator()
  nameWithType.vb: List(Of T).System.Collections.IEnumerable.GetEnumerator()
  fullName.vb: System.Collections.Generic.List(Of T).System.Collections.IEnumerable.GetEnumerator()
  name.vb: System.Collections.IEnumerable.GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.List`1.System#Collections#IEnumerable#GetEnumerator
    name: IEnumerable.GetEnumerator
    nameWithType: List<T>.IEnumerable.GetEnumerator
    fullName: System.Collections.Generic.List<T>.System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.System#Collections#IEnumerable#GetEnumerator
    name: System.Collections.IEnumerable.GetEnumerator
    nameWithType: List(Of T).System.Collections.IEnumerable.GetEnumerator
    fullName: System.Collections.Generic.List(Of T).System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.GetRange(System.Int32,System.Int32)
  commentId: M:System.Collections.Generic.List`1.GetRange(System.Int32,System.Int32)
  isExternal: true
  name: GetRange(Int32, Int32)
  nameWithType: List<T>.GetRange(Int32, Int32)
  fullName: System.Collections.Generic.List<T>.GetRange(System.Int32, System.Int32)
  nameWithType.vb: List(Of T).GetRange(Int32, Int32)
  fullName.vb: System.Collections.Generic.List(Of T).GetRange(System.Int32, System.Int32)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.GetRange(System.Int32,System.Int32)
    name: GetRange
    nameWithType: List<T>.GetRange
    fullName: System.Collections.Generic.List<T>.GetRange
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.GetRange(System.Int32,System.Int32)
    name: GetRange
    nameWithType: List(Of T).GetRange
    fullName: System.Collections.Generic.List(Of T).GetRange
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.IndexOf(`0)
  commentId: M:System.Collections.Generic.List`1.IndexOf(`0)
  isExternal: true
  name: IndexOf(T)
  nameWithType: List<T>.IndexOf(T)
  fullName: System.Collections.Generic.List<T>.IndexOf(T)
  nameWithType.vb: List(Of T).IndexOf(T)
  fullName.vb: System.Collections.Generic.List(Of T).IndexOf(T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.IndexOf(`0)
    name: IndexOf
    nameWithType: List<T>.IndexOf
    fullName: System.Collections.Generic.List<T>.IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.IndexOf(`0)
    name: IndexOf
    nameWithType: List(Of T).IndexOf
    fullName: System.Collections.Generic.List(Of T).IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.System#Collections#IList#IndexOf(System.Object)
  commentId: M:System.Collections.Generic.List`1.System#Collections#IList#IndexOf(System.Object)
  isExternal: true
  name: IList.IndexOf(Object)
  nameWithType: List<T>.IList.IndexOf(Object)
  fullName: System.Collections.Generic.List<T>.System.Collections.IList.IndexOf(System.Object)
  nameWithType.vb: List(Of T).System.Collections.IList.IndexOf(Object)
  fullName.vb: System.Collections.Generic.List(Of T).System.Collections.IList.IndexOf(System.Object)
  name.vb: System.Collections.IList.IndexOf(Object)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.System#Collections#IList#IndexOf(System.Object)
    name: IList.IndexOf
    nameWithType: List<T>.IList.IndexOf
    fullName: System.Collections.Generic.List<T>.System.Collections.IList.IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.System#Collections#IList#IndexOf(System.Object)
    name: System.Collections.IList.IndexOf
    nameWithType: List(Of T).System.Collections.IList.IndexOf
    fullName: System.Collections.Generic.List(Of T).System.Collections.IList.IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.IndexOf(`0,System.Int32)
  commentId: M:System.Collections.Generic.List`1.IndexOf(`0,System.Int32)
  isExternal: true
  name: IndexOf(T, Int32)
  nameWithType: List<T>.IndexOf(T, Int32)
  fullName: System.Collections.Generic.List<T>.IndexOf(T, System.Int32)
  nameWithType.vb: List(Of T).IndexOf(T, Int32)
  fullName.vb: System.Collections.Generic.List(Of T).IndexOf(T, System.Int32)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.IndexOf(`0,System.Int32)
    name: IndexOf
    nameWithType: List<T>.IndexOf
    fullName: System.Collections.Generic.List<T>.IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.IndexOf(`0,System.Int32)
    name: IndexOf
    nameWithType: List(Of T).IndexOf
    fullName: System.Collections.Generic.List(Of T).IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.IndexOf(`0,System.Int32,System.Int32)
  commentId: M:System.Collections.Generic.List`1.IndexOf(`0,System.Int32,System.Int32)
  isExternal: true
  name: IndexOf(T, Int32, Int32)
  nameWithType: List<T>.IndexOf(T, Int32, Int32)
  fullName: System.Collections.Generic.List<T>.IndexOf(T, System.Int32, System.Int32)
  nameWithType.vb: List(Of T).IndexOf(T, Int32, Int32)
  fullName.vb: System.Collections.Generic.List(Of T).IndexOf(T, System.Int32, System.Int32)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.IndexOf(`0,System.Int32,System.Int32)
    name: IndexOf
    nameWithType: List<T>.IndexOf
    fullName: System.Collections.Generic.List<T>.IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.IndexOf(`0,System.Int32,System.Int32)
    name: IndexOf
    nameWithType: List(Of T).IndexOf
    fullName: System.Collections.Generic.List(Of T).IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.Insert(System.Int32,`0)
  commentId: M:System.Collections.Generic.List`1.Insert(System.Int32,`0)
  isExternal: true
  name: Insert(Int32, T)
  nameWithType: List<T>.Insert(Int32, T)
  fullName: System.Collections.Generic.List<T>.Insert(System.Int32, T)
  nameWithType.vb: List(Of T).Insert(Int32, T)
  fullName.vb: System.Collections.Generic.List(Of T).Insert(System.Int32, T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.Insert(System.Int32,`0)
    name: Insert
    nameWithType: List<T>.Insert
    fullName: System.Collections.Generic.List<T>.Insert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.Insert(System.Int32,`0)
    name: Insert
    nameWithType: List(Of T).Insert
    fullName: System.Collections.Generic.List(Of T).Insert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.System#Collections#IList#Insert(System.Int32,System.Object)
  commentId: M:System.Collections.Generic.List`1.System#Collections#IList#Insert(System.Int32,System.Object)
  isExternal: true
  name: IList.Insert(Int32, Object)
  nameWithType: List<T>.IList.Insert(Int32, Object)
  fullName: System.Collections.Generic.List<T>.System.Collections.IList.Insert(System.Int32, System.Object)
  nameWithType.vb: List(Of T).System.Collections.IList.Insert(Int32, Object)
  fullName.vb: System.Collections.Generic.List(Of T).System.Collections.IList.Insert(System.Int32, System.Object)
  name.vb: System.Collections.IList.Insert(Int32, Object)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.System#Collections#IList#Insert(System.Int32,System.Object)
    name: IList.Insert
    nameWithType: List<T>.IList.Insert
    fullName: System.Collections.Generic.List<T>.System.Collections.IList.Insert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.System#Collections#IList#Insert(System.Int32,System.Object)
    name: System.Collections.IList.Insert
    nameWithType: List(Of T).System.Collections.IList.Insert
    fullName: System.Collections.Generic.List(Of T).System.Collections.IList.Insert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{`0})
  commentId: M:System.Collections.Generic.List`1.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{`0})
  isExternal: true
  name: InsertRange(Int32, IEnumerable<T>)
  nameWithType: List<T>.InsertRange(Int32, IEnumerable<T>)
  fullName: System.Collections.Generic.List<T>.InsertRange(System.Int32, System.Collections.Generic.IEnumerable<T>)
  nameWithType.vb: List(Of T).InsertRange(Int32, IEnumerable(Of T))
  fullName.vb: System.Collections.Generic.List(Of T).InsertRange(System.Int32, System.Collections.Generic.IEnumerable(Of T))
  name.vb: InsertRange(Int32, IEnumerable(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{`0})
    name: InsertRange
    nameWithType: List<T>.InsertRange
    fullName: System.Collections.Generic.List<T>.InsertRange
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{`0})
    name: InsertRange
    nameWithType: List(Of T).InsertRange
    fullName: System.Collections.Generic.List(Of T).InsertRange
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.LastIndexOf(`0)
  commentId: M:System.Collections.Generic.List`1.LastIndexOf(`0)
  isExternal: true
  name: LastIndexOf(T)
  nameWithType: List<T>.LastIndexOf(T)
  fullName: System.Collections.Generic.List<T>.LastIndexOf(T)
  nameWithType.vb: List(Of T).LastIndexOf(T)
  fullName.vb: System.Collections.Generic.List(Of T).LastIndexOf(T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.LastIndexOf(`0)
    name: LastIndexOf
    nameWithType: List<T>.LastIndexOf
    fullName: System.Collections.Generic.List<T>.LastIndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.LastIndexOf(`0)
    name: LastIndexOf
    nameWithType: List(Of T).LastIndexOf
    fullName: System.Collections.Generic.List(Of T).LastIndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.LastIndexOf(`0,System.Int32)
  commentId: M:System.Collections.Generic.List`1.LastIndexOf(`0,System.Int32)
  isExternal: true
  name: LastIndexOf(T, Int32)
  nameWithType: List<T>.LastIndexOf(T, Int32)
  fullName: System.Collections.Generic.List<T>.LastIndexOf(T, System.Int32)
  nameWithType.vb: List(Of T).LastIndexOf(T, Int32)
  fullName.vb: System.Collections.Generic.List(Of T).LastIndexOf(T, System.Int32)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.LastIndexOf(`0,System.Int32)
    name: LastIndexOf
    nameWithType: List<T>.LastIndexOf
    fullName: System.Collections.Generic.List<T>.LastIndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.LastIndexOf(`0,System.Int32)
    name: LastIndexOf
    nameWithType: List(Of T).LastIndexOf
    fullName: System.Collections.Generic.List(Of T).LastIndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.LastIndexOf(`0,System.Int32,System.Int32)
  commentId: M:System.Collections.Generic.List`1.LastIndexOf(`0,System.Int32,System.Int32)
  isExternal: true
  name: LastIndexOf(T, Int32, Int32)
  nameWithType: List<T>.LastIndexOf(T, Int32, Int32)
  fullName: System.Collections.Generic.List<T>.LastIndexOf(T, System.Int32, System.Int32)
  nameWithType.vb: List(Of T).LastIndexOf(T, Int32, Int32)
  fullName.vb: System.Collections.Generic.List(Of T).LastIndexOf(T, System.Int32, System.Int32)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.LastIndexOf(`0,System.Int32,System.Int32)
    name: LastIndexOf
    nameWithType: List<T>.LastIndexOf
    fullName: System.Collections.Generic.List<T>.LastIndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.LastIndexOf(`0,System.Int32,System.Int32)
    name: LastIndexOf
    nameWithType: List(Of T).LastIndexOf
    fullName: System.Collections.Generic.List(Of T).LastIndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.Remove(`0)
  commentId: M:System.Collections.Generic.List`1.Remove(`0)
  isExternal: true
  name: Remove(T)
  nameWithType: List<T>.Remove(T)
  fullName: System.Collections.Generic.List<T>.Remove(T)
  nameWithType.vb: List(Of T).Remove(T)
  fullName.vb: System.Collections.Generic.List(Of T).Remove(T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.Remove(`0)
    name: Remove
    nameWithType: List<T>.Remove
    fullName: System.Collections.Generic.List<T>.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.Remove(`0)
    name: Remove
    nameWithType: List(Of T).Remove
    fullName: System.Collections.Generic.List(Of T).Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.System#Collections#IList#Remove(System.Object)
  commentId: M:System.Collections.Generic.List`1.System#Collections#IList#Remove(System.Object)
  isExternal: true
  name: IList.Remove(Object)
  nameWithType: List<T>.IList.Remove(Object)
  fullName: System.Collections.Generic.List<T>.System.Collections.IList.Remove(System.Object)
  nameWithType.vb: List(Of T).System.Collections.IList.Remove(Object)
  fullName.vb: System.Collections.Generic.List(Of T).System.Collections.IList.Remove(System.Object)
  name.vb: System.Collections.IList.Remove(Object)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.System#Collections#IList#Remove(System.Object)
    name: IList.Remove
    nameWithType: List<T>.IList.Remove
    fullName: System.Collections.Generic.List<T>.System.Collections.IList.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.System#Collections#IList#Remove(System.Object)
    name: System.Collections.IList.Remove
    nameWithType: List(Of T).System.Collections.IList.Remove
    fullName: System.Collections.Generic.List(Of T).System.Collections.IList.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.RemoveAll(System.Predicate{`0})
  commentId: M:System.Collections.Generic.List`1.RemoveAll(System.Predicate{`0})
  isExternal: true
  name: RemoveAll(Predicate<T>)
  nameWithType: List<T>.RemoveAll(Predicate<T>)
  fullName: System.Collections.Generic.List<T>.RemoveAll(System.Predicate<T>)
  nameWithType.vb: List(Of T).RemoveAll(Predicate(Of T))
  fullName.vb: System.Collections.Generic.List(Of T).RemoveAll(System.Predicate(Of T))
  name.vb: RemoveAll(Predicate(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.RemoveAll(System.Predicate{`0})
    name: RemoveAll
    nameWithType: List<T>.RemoveAll
    fullName: System.Collections.Generic.List<T>.RemoveAll
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.RemoveAll(System.Predicate{`0})
    name: RemoveAll
    nameWithType: List(Of T).RemoveAll
    fullName: System.Collections.Generic.List(Of T).RemoveAll
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.RemoveAt(System.Int32)
  commentId: M:System.Collections.Generic.List`1.RemoveAt(System.Int32)
  isExternal: true
  name: RemoveAt(Int32)
  nameWithType: List<T>.RemoveAt(Int32)
  fullName: System.Collections.Generic.List<T>.RemoveAt(System.Int32)
  nameWithType.vb: List(Of T).RemoveAt(Int32)
  fullName.vb: System.Collections.Generic.List(Of T).RemoveAt(System.Int32)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.RemoveAt(System.Int32)
    name: RemoveAt
    nameWithType: List<T>.RemoveAt
    fullName: System.Collections.Generic.List<T>.RemoveAt
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.RemoveAt(System.Int32)
    name: RemoveAt
    nameWithType: List(Of T).RemoveAt
    fullName: System.Collections.Generic.List(Of T).RemoveAt
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.RemoveRange(System.Int32,System.Int32)
  commentId: M:System.Collections.Generic.List`1.RemoveRange(System.Int32,System.Int32)
  isExternal: true
  name: RemoveRange(Int32, Int32)
  nameWithType: List<T>.RemoveRange(Int32, Int32)
  fullName: System.Collections.Generic.List<T>.RemoveRange(System.Int32, System.Int32)
  nameWithType.vb: List(Of T).RemoveRange(Int32, Int32)
  fullName.vb: System.Collections.Generic.List(Of T).RemoveRange(System.Int32, System.Int32)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.RemoveRange(System.Int32,System.Int32)
    name: RemoveRange
    nameWithType: List<T>.RemoveRange
    fullName: System.Collections.Generic.List<T>.RemoveRange
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.RemoveRange(System.Int32,System.Int32)
    name: RemoveRange
    nameWithType: List(Of T).RemoveRange
    fullName: System.Collections.Generic.List(Of T).RemoveRange
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.Reverse
  commentId: M:System.Collections.Generic.List`1.Reverse
  isExternal: true
  name: Reverse()
  nameWithType: List<T>.Reverse()
  fullName: System.Collections.Generic.List<T>.Reverse()
  nameWithType.vb: List(Of T).Reverse()
  fullName.vb: System.Collections.Generic.List(Of T).Reverse()
  spec.csharp:
  - uid: System.Collections.Generic.List`1.Reverse
    name: Reverse
    nameWithType: List<T>.Reverse
    fullName: System.Collections.Generic.List<T>.Reverse
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.Reverse
    name: Reverse
    nameWithType: List(Of T).Reverse
    fullName: System.Collections.Generic.List(Of T).Reverse
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.Reverse(System.Int32,System.Int32)
  commentId: M:System.Collections.Generic.List`1.Reverse(System.Int32,System.Int32)
  isExternal: true
  name: Reverse(Int32, Int32)
  nameWithType: List<T>.Reverse(Int32, Int32)
  fullName: System.Collections.Generic.List<T>.Reverse(System.Int32, System.Int32)
  nameWithType.vb: List(Of T).Reverse(Int32, Int32)
  fullName.vb: System.Collections.Generic.List(Of T).Reverse(System.Int32, System.Int32)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.Reverse(System.Int32,System.Int32)
    name: Reverse
    nameWithType: List<T>.Reverse
    fullName: System.Collections.Generic.List<T>.Reverse
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.Reverse(System.Int32,System.Int32)
    name: Reverse
    nameWithType: List(Of T).Reverse
    fullName: System.Collections.Generic.List(Of T).Reverse
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.Sort
  commentId: M:System.Collections.Generic.List`1.Sort
  isExternal: true
  name: Sort()
  nameWithType: List<T>.Sort()
  fullName: System.Collections.Generic.List<T>.Sort()
  nameWithType.vb: List(Of T).Sort()
  fullName.vb: System.Collections.Generic.List(Of T).Sort()
  spec.csharp:
  - uid: System.Collections.Generic.List`1.Sort
    name: Sort
    nameWithType: List<T>.Sort
    fullName: System.Collections.Generic.List<T>.Sort
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.Sort
    name: Sort
    nameWithType: List(Of T).Sort
    fullName: System.Collections.Generic.List(Of T).Sort
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.Sort(System.Collections.Generic.IComparer{`0})
  commentId: M:System.Collections.Generic.List`1.Sort(System.Collections.Generic.IComparer{`0})
  isExternal: true
  name: Sort(IComparer<T>)
  nameWithType: List<T>.Sort(IComparer<T>)
  fullName: System.Collections.Generic.List<T>.Sort(System.Collections.Generic.IComparer<T>)
  nameWithType.vb: List(Of T).Sort(IComparer(Of T))
  fullName.vb: System.Collections.Generic.List(Of T).Sort(System.Collections.Generic.IComparer(Of T))
  name.vb: Sort(IComparer(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.Sort(System.Collections.Generic.IComparer{`0})
    name: Sort
    nameWithType: List<T>.Sort
    fullName: System.Collections.Generic.List<T>.Sort
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.Sort(System.Collections.Generic.IComparer{`0})
    name: Sort
    nameWithType: List(Of T).Sort
    fullName: System.Collections.Generic.List(Of T).Sort
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer{`0})
  commentId: M:System.Collections.Generic.List`1.Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer{`0})
  isExternal: true
  name: Sort(Int32, Int32, IComparer<T>)
  nameWithType: List<T>.Sort(Int32, Int32, IComparer<T>)
  fullName: System.Collections.Generic.List<T>.Sort(System.Int32, System.Int32, System.Collections.Generic.IComparer<T>)
  nameWithType.vb: List(Of T).Sort(Int32, Int32, IComparer(Of T))
  fullName.vb: System.Collections.Generic.List(Of T).Sort(System.Int32, System.Int32, System.Collections.Generic.IComparer(Of T))
  name.vb: Sort(Int32, Int32, IComparer(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer{`0})
    name: Sort
    nameWithType: List<T>.Sort
    fullName: System.Collections.Generic.List<T>.Sort
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer{`0})
    name: Sort
    nameWithType: List(Of T).Sort
    fullName: System.Collections.Generic.List(Of T).Sort
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.Sort(System.Comparison{`0})
  commentId: M:System.Collections.Generic.List`1.Sort(System.Comparison{`0})
  isExternal: true
  name: Sort(Comparison<T>)
  nameWithType: List<T>.Sort(Comparison<T>)
  fullName: System.Collections.Generic.List<T>.Sort(System.Comparison<T>)
  nameWithType.vb: List(Of T).Sort(Comparison(Of T))
  fullName.vb: System.Collections.Generic.List(Of T).Sort(System.Comparison(Of T))
  name.vb: Sort(Comparison(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.Sort(System.Comparison{`0})
    name: Sort
    nameWithType: List<T>.Sort
    fullName: System.Collections.Generic.List<T>.Sort
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Comparison`1
    name: Comparison
    nameWithType: Comparison
    fullName: System.Comparison
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.Sort(System.Comparison{`0})
    name: Sort
    nameWithType: List(Of T).Sort
    fullName: System.Collections.Generic.List(Of T).Sort
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Comparison`1
    name: Comparison
    nameWithType: Comparison
    fullName: System.Comparison
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.ToArray
  commentId: M:System.Collections.Generic.List`1.ToArray
  isExternal: true
  name: ToArray()
  nameWithType: List<T>.ToArray()
  fullName: System.Collections.Generic.List<T>.ToArray()
  nameWithType.vb: List(Of T).ToArray()
  fullName.vb: System.Collections.Generic.List(Of T).ToArray()
  spec.csharp:
  - uid: System.Collections.Generic.List`1.ToArray
    name: ToArray
    nameWithType: List<T>.ToArray
    fullName: System.Collections.Generic.List<T>.ToArray
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.ToArray
    name: ToArray
    nameWithType: List(Of T).ToArray
    fullName: System.Collections.Generic.List(Of T).ToArray
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.TrimExcess
  commentId: M:System.Collections.Generic.List`1.TrimExcess
  isExternal: true
  name: TrimExcess()
  nameWithType: List<T>.TrimExcess()
  fullName: System.Collections.Generic.List<T>.TrimExcess()
  nameWithType.vb: List(Of T).TrimExcess()
  fullName.vb: System.Collections.Generic.List(Of T).TrimExcess()
  spec.csharp:
  - uid: System.Collections.Generic.List`1.TrimExcess
    name: TrimExcess
    nameWithType: List<T>.TrimExcess
    fullName: System.Collections.Generic.List<T>.TrimExcess
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.TrimExcess
    name: TrimExcess
    nameWithType: List(Of T).TrimExcess
    fullName: System.Collections.Generic.List(Of T).TrimExcess
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.TrueForAll(System.Predicate{`0})
  commentId: M:System.Collections.Generic.List`1.TrueForAll(System.Predicate{`0})
  isExternal: true
  name: TrueForAll(Predicate<T>)
  nameWithType: List<T>.TrueForAll(Predicate<T>)
  fullName: System.Collections.Generic.List<T>.TrueForAll(System.Predicate<T>)
  nameWithType.vb: List(Of T).TrueForAll(Predicate(Of T))
  fullName.vb: System.Collections.Generic.List(Of T).TrueForAll(System.Predicate(Of T))
  name.vb: TrueForAll(Predicate(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.TrueForAll(System.Predicate{`0})
    name: TrueForAll
    nameWithType: List<T>.TrueForAll
    fullName: System.Collections.Generic.List<T>.TrueForAll
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.TrueForAll(System.Predicate{`0})
    name: TrueForAll
    nameWithType: List(Of T).TrueForAll
    fullName: System.Collections.Generic.List(Of T).TrueForAll
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.Capacity
  commentId: P:System.Collections.Generic.List`1.Capacity
  isExternal: true
  name: Capacity
  nameWithType: List<T>.Capacity
  fullName: System.Collections.Generic.List<T>.Capacity
  nameWithType.vb: List(Of T).Capacity
  fullName.vb: System.Collections.Generic.List(Of T).Capacity
- uid: System.Collections.Generic.List`1.Count
  commentId: P:System.Collections.Generic.List`1.Count
  isExternal: true
  name: Count
  nameWithType: List<T>.Count
  fullName: System.Collections.Generic.List<T>.Count
  nameWithType.vb: List(Of T).Count
  fullName.vb: System.Collections.Generic.List(Of T).Count
- uid: System.Collections.Generic.List`1.System#Collections#IList#IsFixedSize
  commentId: P:System.Collections.Generic.List`1.System#Collections#IList#IsFixedSize
  isExternal: true
  name: IList.IsFixedSize
  nameWithType: List<T>.IList.IsFixedSize
  fullName: System.Collections.Generic.List<T>.System.Collections.IList.IsFixedSize
  nameWithType.vb: List(Of T).System.Collections.IList.IsFixedSize
  fullName.vb: System.Collections.Generic.List(Of T).System.Collections.IList.IsFixedSize
  name.vb: System.Collections.IList.IsFixedSize
- uid: System.Collections.Generic.List`1.System#Collections#Generic#ICollection{T}#IsReadOnly
  commentId: P:System.Collections.Generic.List`1.System#Collections#Generic#ICollection{T}#IsReadOnly
  isExternal: true
  name: ICollection<T>.IsReadOnly
  nameWithType: List<T>.ICollection<T>.IsReadOnly
  fullName: System.Collections.Generic.List<T>.System.Collections.Generic.ICollection<T>.IsReadOnly
  nameWithType.vb: List(Of T).System.Collections.Generic.ICollection<T>.IsReadOnly
  fullName.vb: System.Collections.Generic.List(Of T).System.Collections.Generic.ICollection<T>.IsReadOnly
  name.vb: System.Collections.Generic.ICollection<T>.IsReadOnly
- uid: System.Collections.Generic.List`1.System#Collections#IList#IsReadOnly
  commentId: P:System.Collections.Generic.List`1.System#Collections#IList#IsReadOnly
  isExternal: true
  name: IList.IsReadOnly
  nameWithType: List<T>.IList.IsReadOnly
  fullName: System.Collections.Generic.List<T>.System.Collections.IList.IsReadOnly
  nameWithType.vb: List(Of T).System.Collections.IList.IsReadOnly
  fullName.vb: System.Collections.Generic.List(Of T).System.Collections.IList.IsReadOnly
  name.vb: System.Collections.IList.IsReadOnly
- uid: System.Collections.Generic.List`1.System#Collections#ICollection#IsSynchronized
  commentId: P:System.Collections.Generic.List`1.System#Collections#ICollection#IsSynchronized
  isExternal: true
  name: ICollection.IsSynchronized
  nameWithType: List<T>.ICollection.IsSynchronized
  fullName: System.Collections.Generic.List<T>.System.Collections.ICollection.IsSynchronized
  nameWithType.vb: List(Of T).System.Collections.ICollection.IsSynchronized
  fullName.vb: System.Collections.Generic.List(Of T).System.Collections.ICollection.IsSynchronized
  name.vb: System.Collections.ICollection.IsSynchronized
- uid: System.Collections.Generic.List`1.System#Collections#ICollection#SyncRoot
  commentId: P:System.Collections.Generic.List`1.System#Collections#ICollection#SyncRoot
  isExternal: true
  name: ICollection.SyncRoot
  nameWithType: List<T>.ICollection.SyncRoot
  fullName: System.Collections.Generic.List<T>.System.Collections.ICollection.SyncRoot
  nameWithType.vb: List(Of T).System.Collections.ICollection.SyncRoot
  fullName.vb: System.Collections.Generic.List(Of T).System.Collections.ICollection.SyncRoot
  name.vb: System.Collections.ICollection.SyncRoot
- uid: System.Collections.Generic.List`1.Item(System.Int32)
  commentId: P:System.Collections.Generic.List`1.Item(System.Int32)
  isExternal: true
  name: Item[Int32]
  nameWithType: List<T>.Item[Int32]
  fullName: System.Collections.Generic.List<T>.Item[System.Int32]
  nameWithType.vb: List(Of T).Item(Int32)
  fullName.vb: System.Collections.Generic.List(Of T).Item(System.Int32)
  name.vb: Item(Int32)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.Item(System.Int32)
    name: Item
    nameWithType: List<T>.Item
    fullName: System.Collections.Generic.List<T>.Item
    isExternal: true
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: System.Collections.Generic.List`1.Item(System.Int32)
    name: Item
    nameWithType: List(Of T).Item
    fullName: System.Collections.Generic.List(Of T).Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.System#Collections#IList#Item(System.Int32)
  commentId: P:System.Collections.Generic.List`1.System#Collections#IList#Item(System.Int32)
  isExternal: true
  name: IList.Item[Int32]
  nameWithType: List<T>.IList.Item[Int32]
  fullName: System.Collections.Generic.List<T>.System.Collections.IList.Item[System.Int32]
  nameWithType.vb: List(Of T).System.Collections.IList.Item(Int32)
  fullName.vb: System.Collections.Generic.List(Of T).System.Collections.IList.Item(System.Int32)
  name.vb: System.Collections.IList.Item(Int32)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.System#Collections#IList#Item(System.Int32)
    name: IList.Item
    nameWithType: List<T>.IList.Item
    fullName: System.Collections.Generic.List<T>.System.Collections.IList.Item
    isExternal: true
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: System.Collections.Generic.List`1.System#Collections#IList#Item(System.Int32)
    name: System.Collections.IList.Item
    nameWithType: List(Of T).System.Collections.IList.Item
    fullName: System.Collections.Generic.List(Of T).System.Collections.IList.Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: RW_ModularizationWeapon.Tools.ToolsFunction.LogAllField(System.Object)
  commentId: M:RW_ModularizationWeapon.Tools.ToolsFunction.LogAllField(System.Object)
  isExternal: true
  name: LogAllField(Object)
  nameWithType: ToolsFunction.LogAllField(Object)
  fullName: RW_ModularizationWeapon.Tools.ToolsFunction.LogAllField(System.Object)
  spec.csharp:
  - uid: RW_ModularizationWeapon.Tools.ToolsFunction.LogAllField(System.Object)
    name: LogAllField
    nameWithType: ToolsFunction.LogAllField
    fullName: RW_ModularizationWeapon.Tools.ToolsFunction.LogAllField
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: RW_ModularizationWeapon.Tools.ToolsFunction.LogAllField(System.Object)
    name: LogAllField
    nameWithType: ToolsFunction.LogAllField
    fullName: RW_ModularizationWeapon.Tools.ToolsFunction.LogAllField
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: RW_ModularizationWeapon.Tools.ToolsFunction
  commentId: T:RW_ModularizationWeapon.Tools.ToolsFunction
  parent: RW_ModularizationWeapon.Tools
  name: ToolsFunction
  nameWithType: ToolsFunction
  fullName: RW_ModularizationWeapon.Tools.ToolsFunction
- uid: RW_ModularizationWeapon.Tools
  commentId: N:RW_ModularizationWeapon.Tools
  name: RW_ModularizationWeapon.Tools
  nameWithType: RW_ModularizationWeapon.Tools
  fullName: RW_ModularizationWeapon.Tools
- uid: RW_ModularizationWeapon.FieldReaderInstList`1.#ctor*
  commentId: Overload:RW_ModularizationWeapon.FieldReaderInstList`1.#ctor
  name: FieldReaderInstList
  nameWithType: FieldReaderInstList<T>.FieldReaderInstList
  fullName: RW_ModularizationWeapon.FieldReaderInstList<T>.FieldReaderInstList
  nameWithType.vb: FieldReaderInstList(Of T).FieldReaderInstList
  fullName.vb: RW_ModularizationWeapon.FieldReaderInstList(Of T).FieldReaderInstList
- uid: RW_ModularizationWeapon.FieldReaderInstList`1
  commentId: T:RW_ModularizationWeapon.FieldReaderInstList`1
  parent: RW_ModularizationWeapon
  name: FieldReaderInstList<T>
  nameWithType: FieldReaderInstList<T>
  fullName: RW_ModularizationWeapon.FieldReaderInstList<T>
  nameWithType.vb: FieldReaderInstList(Of T)
  fullName.vb: RW_ModularizationWeapon.FieldReaderInstList(Of T)
  name.vb: FieldReaderInstList(Of T)
  spec.csharp:
  - uid: RW_ModularizationWeapon.FieldReaderInstList`1
    name: FieldReaderInstList
    nameWithType: FieldReaderInstList
    fullName: RW_ModularizationWeapon.FieldReaderInstList
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: RW_ModularizationWeapon.FieldReaderInstList`1
    name: FieldReaderInstList
    nameWithType: FieldReaderInstList
    fullName: RW_ModularizationWeapon.FieldReaderInstList
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: RW_ModularizationWeapon.FieldReaderInstList`1.LoadDataFromXmlCustom*
  commentId: Overload:RW_ModularizationWeapon.FieldReaderInstList`1.LoadDataFromXmlCustom
  name: LoadDataFromXmlCustom
  nameWithType: FieldReaderInstList<T>.LoadDataFromXmlCustom
  fullName: RW_ModularizationWeapon.FieldReaderInstList<T>.LoadDataFromXmlCustom
  nameWithType.vb: FieldReaderInstList(Of T).LoadDataFromXmlCustom
  fullName.vb: RW_ModularizationWeapon.FieldReaderInstList(Of T).LoadDataFromXmlCustom
- uid: System.Xml.XmlNode
  commentId: T:System.Xml.XmlNode
  parent: System.Xml
  isExternal: true
  name: XmlNode
  nameWithType: XmlNode
  fullName: System.Xml.XmlNode
- uid: System.Xml
  commentId: N:System.Xml
  isExternal: true
  name: System.Xml
  nameWithType: System.Xml
  fullName: System.Xml
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: RW_ModularizationWeapon.FieldReaderInstList`1.ToString*
  commentId: Overload:RW_ModularizationWeapon.FieldReaderInstList`1.ToString
  name: ToString
  nameWithType: FieldReaderInstList<T>.ToString
  fullName: RW_ModularizationWeapon.FieldReaderInstList<T>.ToString
  nameWithType.vb: FieldReaderInstList(Of T).ToString
  fullName.vb: RW_ModularizationWeapon.FieldReaderInstList(Of T).ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: RW_ModularizationWeapon.FieldReaderInstList`1.op_BitwiseAnd*
  commentId: Overload:RW_ModularizationWeapon.FieldReaderInstList`1.op_BitwiseAnd
  name: BitwiseAnd
  nameWithType: FieldReaderInstList<T>.BitwiseAnd
  fullName: RW_ModularizationWeapon.FieldReaderInstList<T>.BitwiseAnd
  nameWithType.vb: FieldReaderInstList(Of T).BitwiseAnd
  fullName.vb: RW_ModularizationWeapon.FieldReaderInstList(Of T).BitwiseAnd
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: RW_ModularizationWeapon.FieldReaderInstList`1.op_BitwiseOr*
  commentId: Overload:RW_ModularizationWeapon.FieldReaderInstList`1.op_BitwiseOr
  name: BitwiseOr
  nameWithType: FieldReaderInstList<T>.BitwiseOr
  fullName: RW_ModularizationWeapon.FieldReaderInstList<T>.BitwiseOr
  nameWithType.vb: FieldReaderInstList(Of T).BitwiseOr
  fullName.vb: RW_ModularizationWeapon.FieldReaderInstList(Of T).BitwiseOr
