### YamlMime:ManagedReference
items:
- uid: RW_ModularizationWeapon.CompModularizationWeapon
  commentId: T:RW_ModularizationWeapon.CompModularizationWeapon
  id: CompModularizationWeapon
  parent: RW_ModularizationWeapon
  children:
  - RW_ModularizationWeapon.CompModularizationWeapon.AllExtraCompProperties
  - RW_ModularizationWeapon.CompModularizationWeapon.AllowNode(Verse.Thing,System.String)
  - RW_ModularizationWeapon.CompModularizationWeapon.AllowPart(Verse.Thing,System.String,System.Boolean)
  - RW_ModularizationWeapon.CompModularizationWeapon.AllowStackWith(Verse.Thing)
  - RW_ModularizationWeapon.CompModularizationWeapon.AllowSwap
  - RW_ModularizationWeapon.CompModularizationWeapon.ClearTargetPart
  - RW_ModularizationWeapon.CompModularizationWeapon.CompGetGizmosExtra
  - RW_ModularizationWeapon.CompModularizationWeapon.CompPropertiesBoolAndPatch
  - RW_ModularizationWeapon.CompModularizationWeapon.CompPropertiesBoolOrPatch
  - RW_ModularizationWeapon.CompModularizationWeapon.CompPropertiesMultiplier
  - RW_ModularizationWeapon.CompModularizationWeapon.CompPropertiesObjectPatch
  - RW_ModularizationWeapon.CompModularizationWeapon.CompPropertiesOffseter
  - RW_ModularizationWeapon.CompModularizationWeapon.DrawChildTreeView(UnityEngine.Vector2,System.Single,System.Single,System.Single,System.Single,System.Action{System.String,Verse.Thing,RW_ModularizationWeapon.CompModularizationWeapon},System.Action{System.String,Verse.Thing,RW_ModularizationWeapon.CompModularizationWeapon},System.Action{System.String,Verse.Thing,RW_ModularizationWeapon.CompModularizationWeapon},System.Collections.Generic.HashSet{System.ValueTuple{System.String,RW_ModularizationWeapon.CompModularizationWeapon}})
  - RW_ModularizationWeapon.CompModularizationWeapon.FinalStatWorker_FinalizeValue(RimWorld.StatWorker,RimWorld.StatRequest,System.Boolean,System.Single,System.Collections.Generic.Dictionary{System.String,System.Object},System.Exception)
  - RW_ModularizationWeapon.CompModularizationWeapon.FinalStatWorker_GearHasCompsThatAffectStat(Verse.Thing,RimWorld.StatDef,System.Boolean,System.Collections.Generic.Dictionary{System.String,System.Object},System.Exception)
  - RW_ModularizationWeapon.CompModularizationWeapon.FinalStatWorker_GetExplanationUnfinalized(RimWorld.StatWorker,RimWorld.StatRequest,Verse.ToStringNumberSense,System.String,System.Collections.Generic.Dictionary{System.String,System.Object},System.Exception)
  - RW_ModularizationWeapon.CompModularizationWeapon.FinalStatWorker_GetStatDrawEntryLabel(RimWorld.StatWorker,RimWorld.StatDef,System.Single,Verse.ToStringNumberSense,RimWorld.StatRequest,System.Boolean,System.String,System.Collections.Generic.Dictionary{System.String,System.Object},System.Exception)
  - RW_ModularizationWeapon.CompModularizationWeapon.FinalStatWorker_GetValueUnfinalized(RimWorld.StatWorker,RimWorld.StatRequest,System.Boolean,System.Single,System.Collections.Generic.Dictionary{System.String,System.Object},System.Exception)
  - RW_ModularizationWeapon.CompModularizationWeapon.FinalStatWorker_StatOffsetFromGear(Verse.Thing,RimWorld.StatDef,System.Single,System.Collections.Generic.Dictionary{System.String,System.Object},System.Exception)
  - RW_ModularizationWeapon.CompModularizationWeapon.GetChildTreeViewOpend(System.String)
  - RW_ModularizationWeapon.CompModularizationWeapon.GetEnumerator
  - RW_ModularizationWeapon.CompModularizationWeapon.GetStatMultiplier(RimWorld.StatDef,Verse.Thing)
  - RW_ModularizationWeapon.CompModularizationWeapon.GetStatOffset(RimWorld.StatDef,Verse.Thing)
  - RW_ModularizationWeapon.CompModularizationWeapon.GetTargetPart(System.String)
  - RW_ModularizationWeapon.CompModularizationWeapon.HasPostFX(System.Boolean)
  - RW_ModularizationWeapon.CompModularizationWeapon.NotDraw(System.String)
  - RW_ModularizationWeapon.CompModularizationWeapon.NotUseTools(System.String)
  - RW_ModularizationWeapon.CompModularizationWeapon.NotUseVerbProperties(System.String)
  - RW_ModularizationWeapon.CompModularizationWeapon.Occupyed
  - RW_ModularizationWeapon.CompModularizationWeapon.op_Implicit(RW_ModularizationWeapon.CompModularizationWeapon)~Verse.Thing
  - RW_ModularizationWeapon.CompModularizationWeapon.op_Implicit(Verse.Thing)~RW_ModularizationWeapon.CompModularizationWeapon
  - RW_ModularizationWeapon.CompModularizationWeapon.ParentPart
  - RW_ModularizationWeapon.CompModularizationWeapon.PartIDs
  - RW_ModularizationWeapon.CompModularizationWeapon.PostDrawSteep(System.Collections.Generic.List{System.ValueTuple{System.String,Verse.Thing,System.Collections.Generic.List{RenderInfo}}},Verse.Rot4,Verse.Graphic,System.Collections.Generic.Dictionary{System.String,System.Object})
  - RW_ModularizationWeapon.CompModularizationWeapon.PostExposeData
  - RW_ModularizationWeapon.CompModularizationWeapon.PostFX(UnityEngine.RenderTexture)
  - RW_ModularizationWeapon.CompModularizationWeapon.PostGenRecipe_MakeRecipeProducts(Verse.RecipeDef,Verse.Pawn,System.Collections.Generic.List{Verse.Thing},Verse.Thing,RimWorld.IBillGiver,RimWorld.Precept_ThingStyle,RecipeInvokeSource,System.Collections.Generic.IEnumerable{Verse.Thing})
  - RW_ModularizationWeapon.CompModularizationWeapon.PostPostMake
  - RW_ModularizationWeapon.CompModularizationWeapon.PostStatsReportUtility_StatsToDraw(Verse.Thing,System.Collections.Generic.IEnumerable{RimWorld.StatDrawEntry})
  - RW_ModularizationWeapon.CompModularizationWeapon.PostStatWorker_GetInfoCardHyperlinks(RimWorld.StatWorker,RimWorld.StatRequest,System.Collections.Generic.IEnumerable{Verse.Dialog_InfoCard.Hyperlink})
  - RW_ModularizationWeapon.CompModularizationWeapon.PostThingDef_SpecialDisplayStats(Verse.ThingDef,RimWorld.StatRequest,System.Collections.Generic.IEnumerable{RimWorld.StatDrawEntry})
  - RW_ModularizationWeapon.CompModularizationWeapon.PostThingWithComps_PreApplyDamage(Verse.DamageInfo@,System.Boolean)
  - RW_ModularizationWeapon.CompModularizationWeapon.PostUpdateNode(CompChildNodeProccesser,System.Collections.Generic.Dictionary{System.String,System.Object},System.Collections.Generic.Dictionary{System.String,Verse.Thing})
  - RW_ModularizationWeapon.CompModularizationWeapon.PreStatWorker_FinalizeValue(RimWorld.StatWorker,RimWorld.StatRequest,System.Boolean,System.Single@,System.Collections.Generic.Dictionary{System.String,System.Object})
  - RW_ModularizationWeapon.CompModularizationWeapon.PreStatWorker_GetExplanationUnfinalized(RimWorld.StatWorker,RimWorld.StatRequest,Verse.ToStringNumberSense,System.Collections.Generic.Dictionary{System.String,System.Object})
  - RW_ModularizationWeapon.CompModularizationWeapon.PreStatWorker_GetStatDrawEntryLabel(RimWorld.StatWorker,RimWorld.StatDef,System.Single,Verse.ToStringNumberSense,RimWorld.StatRequest,System.Boolean,System.Collections.Generic.Dictionary{System.String,System.Object})
  - RW_ModularizationWeapon.CompModularizationWeapon.PreStatWorker_GetValueUnfinalized(RimWorld.StatWorker,RimWorld.StatRequest,System.Boolean,System.Collections.Generic.Dictionary{System.String,System.Object})
  - RW_ModularizationWeapon.CompModularizationWeapon.PreUpdateNode(CompChildNodeProccesser,System.Collections.Generic.Dictionary{System.String,System.Object},System.Collections.Generic.Dictionary{System.String,Verse.Thing})
  - RW_ModularizationWeapon.CompModularizationWeapon.Props
  - RW_ModularizationWeapon.CompModularizationWeapon.RootPart
  - RW_ModularizationWeapon.CompModularizationWeapon.SetChildPostion
  - RW_ModularizationWeapon.CompModularizationWeapon.SetChildPostionInvalid
  - RW_ModularizationWeapon.CompModularizationWeapon.SetChildTreeViewOpend(System.String,System.Boolean)
  - RW_ModularizationWeapon.CompModularizationWeapon.SetPartToDefault
  - RW_ModularizationWeapon.CompModularizationWeapon.SetPartToRandom
  - RW_ModularizationWeapon.CompModularizationWeapon.SetTargetPart(System.String,Verse.LocalTargetInfo)
  - RW_ModularizationWeapon.CompModularizationWeapon.SwapTargetPart
  - RW_ModularizationWeapon.CompModularizationWeapon.System#Collections#IEnumerable#GetEnumerator
  - RW_ModularizationWeapon.CompModularizationWeapon.ToolsBoolAndPatch(System.String)
  - RW_ModularizationWeapon.CompModularizationWeapon.ToolsBoolOrPatch(System.String)
  - RW_ModularizationWeapon.CompModularizationWeapon.ToolsMultiplier(System.String)
  - RW_ModularizationWeapon.CompModularizationWeapon.ToolsObjectPatch(System.String)
  - RW_ModularizationWeapon.CompModularizationWeapon.ToolsOffseter(System.String)
  - RW_ModularizationWeapon.CompModularizationWeapon.TreeViewDrawSize(UnityEngine.Vector2)
  - RW_ModularizationWeapon.CompModularizationWeapon.Unchangeable(System.String)
  - RW_ModularizationWeapon.CompModularizationWeapon.UniqueVerbOwnerID
  - RW_ModularizationWeapon.CompModularizationWeapon.VerbPropertiesBoolAndPatch(System.String)
  - RW_ModularizationWeapon.CompModularizationWeapon.VerbPropertiesBoolOrPatch(System.String)
  - RW_ModularizationWeapon.CompModularizationWeapon.VerbPropertiesMultiplier(System.String)
  - RW_ModularizationWeapon.CompModularizationWeapon.VerbPropertiesObjectPatch(System.String)
  - RW_ModularizationWeapon.CompModularizationWeapon.VerbPropertiesOffseter(System.String)
  - RW_ModularizationWeapon.CompModularizationWeapon.VerbPropertiesRegiestInfoUpadte(System.Type,System.Collections.Generic.List{VerbPropertiesRegiestInfo})
  - RW_ModularizationWeapon.CompModularizationWeapon.VerbsStillUsableBy(Verse.Pawn)
  - RW_ModularizationWeapon.CompModularizationWeapon.VerbToolRegiestInfoUpdate(System.Type,System.Collections.Generic.List{VerbToolRegiestInfo})
  langs:
  - csharp
  - vb
  name: CompModularizationWeapon
  nameWithType: CompModularizationWeapon
  fullName: RW_ModularizationWeapon.CompModularizationWeapon
  type: Class
  source:
    remote:
      path: src/RW_ModularizationWeapon/Verb/CompModularizationWeapon.cs
      branch: master
      repo: https://github.com/RW-NodeTree/RW_ModularizationWeapon.git
    id: CompModularizationWeapon
    path: Verb/CompModularizationWeapon.cs
    startLine: 9
  assemblies:
  - RW_ModularizationWeapon
  namespace: RW_ModularizationWeapon
  syntax:
    content: >-
      [StaticConstructorOnStartup]

      public class CompModularizationWeapon : CompBasicNodeComp, IEnumerable<(string, Thing, WeaponAttachmentProperties)>, IEnumerable
    content.vb: >-
      <StaticConstructorOnStartup>

      Public Class CompModularizationWeapon
          Inherits CompBasicNodeComp
          Implements IEnumerable(Of(String, Thing, WeaponAttachmentProperties)(Of String , Thing, WeaponAttachmentProperties)), IEnumerable
  inheritance:
  - System.Object
  implements:
  - System.Collections.Generic.IEnumerable{System.ValueTuple{System.String,Verse.Thing,RW_ModularizationWeapon.WeaponAttachmentProperties}}
  - System.Collections.IEnumerable
  extensionMethods:
  - System.Object.RW_ModularizationWeapon.Tools.ToolsFunction.LogAllField
  attributes:
  - type: Verse.StaticConstructorOnStartup
    ctor: Verse.StaticConstructorOnStartup.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: RW_ModularizationWeapon.CompModularizationWeapon.Props
  commentId: P:RW_ModularizationWeapon.CompModularizationWeapon.Props
  id: Props
  parent: RW_ModularizationWeapon.CompModularizationWeapon
  langs:
  - csharp
  - vb
  name: Props
  nameWithType: CompModularizationWeapon.Props
  fullName: RW_ModularizationWeapon.CompModularizationWeapon.Props
  type: Property
  source:
    remote:
      path: src/RW_ModularizationWeapon/CompModularizationWeapon.cs
      branch: master
      repo: https://github.com/RW-NodeTree/RW_ModularizationWeapon.git
    id: Props
    path: CompModularizationWeapon.cs
    startLine: 30
  assemblies:
  - RW_ModularizationWeapon
  namespace: RW_ModularizationWeapon
  syntax:
    content: public CompProperties_ModularizationWeapon Props { get; }
    parameters: []
    return:
      type: RW_ModularizationWeapon.CompProperties_ModularizationWeapon
    content.vb: Public ReadOnly Property Props As CompProperties_ModularizationWeapon
  overload: RW_ModularizationWeapon.CompModularizationWeapon.Props*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: RW_ModularizationWeapon.CompModularizationWeapon.ParentPart
  commentId: P:RW_ModularizationWeapon.CompModularizationWeapon.ParentPart
  id: ParentPart
  parent: RW_ModularizationWeapon.CompModularizationWeapon
  langs:
  - csharp
  - vb
  name: ParentPart
  nameWithType: CompModularizationWeapon.ParentPart
  fullName: RW_ModularizationWeapon.CompModularizationWeapon.ParentPart
  type: Property
  source:
    remote:
      path: src/RW_ModularizationWeapon/CompModularizationWeapon.cs
      branch: master
      repo: https://github.com/RW-NodeTree/RW_ModularizationWeapon.git
    id: ParentPart
    path: CompModularizationWeapon.cs
    startLine: 32
  assemblies:
  - RW_ModularizationWeapon
  namespace: RW_ModularizationWeapon
  syntax:
    content: public CompModularizationWeapon ParentPart { get; }
    parameters: []
    return:
      type: RW_ModularizationWeapon.CompModularizationWeapon
    content.vb: Public ReadOnly Property ParentPart As CompModularizationWeapon
  overload: RW_ModularizationWeapon.CompModularizationWeapon.ParentPart*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: RW_ModularizationWeapon.CompModularizationWeapon.RootPart
  commentId: P:RW_ModularizationWeapon.CompModularizationWeapon.RootPart
  id: RootPart
  parent: RW_ModularizationWeapon.CompModularizationWeapon
  langs:
  - csharp
  - vb
  name: RootPart
  nameWithType: CompModularizationWeapon.RootPart
  fullName: RW_ModularizationWeapon.CompModularizationWeapon.RootPart
  type: Property
  source:
    remote:
      path: src/RW_ModularizationWeapon/CompModularizationWeapon.cs
      branch: master
      repo: https://github.com/RW-NodeTree/RW_ModularizationWeapon.git
    id: RootPart
    path: CompModularizationWeapon.cs
    startLine: 34
  assemblies:
  - RW_ModularizationWeapon
  namespace: RW_ModularizationWeapon
  syntax:
    content: public CompModularizationWeapon RootPart { get; }
    parameters: []
    return:
      type: RW_ModularizationWeapon.CompModularizationWeapon
    content.vb: Public ReadOnly Property RootPart As CompModularizationWeapon
  overload: RW_ModularizationWeapon.CompModularizationWeapon.RootPart*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: RW_ModularizationWeapon.CompModularizationWeapon.PartIDs
  commentId: P:RW_ModularizationWeapon.CompModularizationWeapon.PartIDs
  id: PartIDs
  parent: RW_ModularizationWeapon.CompModularizationWeapon
  langs:
  - csharp
  - vb
  name: PartIDs
  nameWithType: CompModularizationWeapon.PartIDs
  fullName: RW_ModularizationWeapon.CompModularizationWeapon.PartIDs
  type: Property
  source:
    remote:
      path: src/RW_ModularizationWeapon/CompModularizationWeapon.cs
      branch: master
      repo: https://github.com/RW-NodeTree/RW_ModularizationWeapon.git
    id: PartIDs
    path: CompModularizationWeapon.cs
    startLine: 50
  assemblies:
  - RW_ModularizationWeapon
  namespace: RW_ModularizationWeapon
  syntax:
    content: public HashSet<string> PartIDs { get; }
    parameters: []
    return:
      type: System.Collections.Generic.HashSet{System.String}
    content.vb: Public ReadOnly Property PartIDs As HashSet(Of String)
  overload: RW_ModularizationWeapon.CompModularizationWeapon.PartIDs*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: RW_ModularizationWeapon.CompModularizationWeapon.Occupyed
  commentId: P:RW_ModularizationWeapon.CompModularizationWeapon.Occupyed
  id: Occupyed
  parent: RW_ModularizationWeapon.CompModularizationWeapon
  langs:
  - csharp
  - vb
  name: Occupyed
  nameWithType: CompModularizationWeapon.Occupyed
  fullName: RW_ModularizationWeapon.CompModularizationWeapon.Occupyed
  type: Property
  source:
    remote:
      path: src/RW_ModularizationWeapon/CompModularizationWeapon.cs
      branch: master
      repo: https://github.com/RW-NodeTree/RW_ModularizationWeapon.git
    id: Occupyed
    path: CompModularizationWeapon.cs
    startLine: 65
  assemblies:
  - RW_ModularizationWeapon
  namespace: RW_ModularizationWeapon
  syntax:
    content: public bool Occupyed { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property Occupyed As Boolean
  overload: RW_ModularizationWeapon.CompModularizationWeapon.Occupyed*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: RW_ModularizationWeapon.CompModularizationWeapon.PostPostMake
  commentId: M:RW_ModularizationWeapon.CompModularizationWeapon.PostPostMake
  id: PostPostMake
  parent: RW_ModularizationWeapon.CompModularizationWeapon
  langs:
  - csharp
  - vb
  name: PostPostMake()
  nameWithType: CompModularizationWeapon.PostPostMake()
  fullName: RW_ModularizationWeapon.CompModularizationWeapon.PostPostMake()
  type: Method
  source:
    remote:
      path: src/RW_ModularizationWeapon/CompModularizationWeapon.cs
      branch: master
      repo: https://github.com/RW-NodeTree/RW_ModularizationWeapon.git
    id: PostPostMake
    path: CompModularizationWeapon.cs
    startLine: 93
  assemblies:
  - RW_ModularizationWeapon
  namespace: RW_ModularizationWeapon
  syntax:
    content: public override void PostPostMake()
    content.vb: Public Overrides Sub PostPostMake
  overload: RW_ModularizationWeapon.CompModularizationWeapon.PostPostMake*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: RW_ModularizationWeapon.CompModularizationWeapon.PostExposeData
  commentId: M:RW_ModularizationWeapon.CompModularizationWeapon.PostExposeData
  id: PostExposeData
  parent: RW_ModularizationWeapon.CompModularizationWeapon
  langs:
  - csharp
  - vb
  name: PostExposeData()
  nameWithType: CompModularizationWeapon.PostExposeData()
  fullName: RW_ModularizationWeapon.CompModularizationWeapon.PostExposeData()
  type: Method
  source:
    remote:
      path: src/RW_ModularizationWeapon/CompModularizationWeapon.cs
      branch: master
      repo: https://github.com/RW-NodeTree/RW_ModularizationWeapon.git
    id: PostExposeData
    path: CompModularizationWeapon.cs
    startLine: 100
  assemblies:
  - RW_ModularizationWeapon
  namespace: RW_ModularizationWeapon
  syntax:
    content: public override void PostExposeData()
    content.vb: Public Overrides Sub PostExposeData
  overload: RW_ModularizationWeapon.CompModularizationWeapon.PostExposeData*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: RW_ModularizationWeapon.CompModularizationWeapon.AllowStackWith(Verse.Thing)
  commentId: M:RW_ModularizationWeapon.CompModularizationWeapon.AllowStackWith(Verse.Thing)
  id: AllowStackWith(Verse.Thing)
  parent: RW_ModularizationWeapon.CompModularizationWeapon
  langs:
  - csharp
  - vb
  name: AllowStackWith(Thing)
  nameWithType: CompModularizationWeapon.AllowStackWith(Thing)
  fullName: RW_ModularizationWeapon.CompModularizationWeapon.AllowStackWith(Verse.Thing)
  type: Method
  source:
    remote:
      path: src/RW_ModularizationWeapon/CompModularizationWeapon.cs
      branch: master
      repo: https://github.com/RW-NodeTree/RW_ModularizationWeapon.git
    id: AllowStackWith
    path: CompModularizationWeapon.cs
    startLine: 116
  assemblies:
  - RW_ModularizationWeapon
  namespace: RW_ModularizationWeapon
  syntax:
    content: public override bool AllowStackWith(Thing other)
    parameters:
    - id: other
      type: Verse.Thing
    return:
      type: System.Boolean
    content.vb: Public Overrides Function AllowStackWith(other As Thing) As Boolean
  overload: RW_ModularizationWeapon.CompModularizationWeapon.AllowStackWith*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: RW_ModularizationWeapon.CompModularizationWeapon.HasPostFX(System.Boolean)
  commentId: M:RW_ModularizationWeapon.CompModularizationWeapon.HasPostFX(System.Boolean)
  id: HasPostFX(System.Boolean)
  parent: RW_ModularizationWeapon.CompModularizationWeapon
  langs:
  - csharp
  - vb
  name: HasPostFX(Boolean)
  nameWithType: CompModularizationWeapon.HasPostFX(Boolean)
  fullName: RW_ModularizationWeapon.CompModularizationWeapon.HasPostFX(System.Boolean)
  type: Method
  source:
    remote:
      path: src/RW_ModularizationWeapon/CompModularizationWeapon.cs
      branch: master
      repo: https://github.com/RW-NodeTree/RW_ModularizationWeapon.git
    id: HasPostFX
    path: CompModularizationWeapon.cs
    startLine: 121
  assemblies:
  - RW_ModularizationWeapon
  namespace: RW_ModularizationWeapon
  syntax:
    content: public override bool HasPostFX(bool textureMode)
    parameters:
    - id: textureMode
      type: System.Boolean
    return:
      type: System.Boolean
    content.vb: Public Overrides Function HasPostFX(textureMode As Boolean) As Boolean
  overload: RW_ModularizationWeapon.CompModularizationWeapon.HasPostFX*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: RW_ModularizationWeapon.CompModularizationWeapon.CompGetGizmosExtra
  commentId: M:RW_ModularizationWeapon.CompModularizationWeapon.CompGetGizmosExtra
  id: CompGetGizmosExtra
  parent: RW_ModularizationWeapon.CompModularizationWeapon
  langs:
  - csharp
  - vb
  name: CompGetGizmosExtra()
  nameWithType: CompModularizationWeapon.CompGetGizmosExtra()
  fullName: RW_ModularizationWeapon.CompModularizationWeapon.CompGetGizmosExtra()
  type: Method
  source:
    remote:
      path: src/RW_ModularizationWeapon/CompModularizationWeapon.cs
      branch: master
      repo: https://github.com/RW-NodeTree/RW_ModularizationWeapon.git
    id: CompGetGizmosExtra
    path: CompModularizationWeapon.cs
    startLine: 124
  assemblies:
  - RW_ModularizationWeapon
  namespace: RW_ModularizationWeapon
  syntax:
    content: public override IEnumerable<Gizmo> CompGetGizmosExtra()
    return:
      type: System.Collections.Generic.IEnumerable{Verse.Gizmo}
    content.vb: Public Overrides Function CompGetGizmosExtra As IEnumerable(Of Gizmo)
  overload: RW_ModularizationWeapon.CompModularizationWeapon.CompGetGizmosExtra*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: RW_ModularizationWeapon.CompModularizationWeapon.PostDrawSteep(System.Collections.Generic.List{System.ValueTuple{System.String,Verse.Thing,System.Collections.Generic.List{RenderInfo}}},Verse.Rot4,Verse.Graphic,System.Collections.Generic.Dictionary{System.String,System.Object})
  commentId: M:RW_ModularizationWeapon.CompModularizationWeapon.PostDrawSteep(System.Collections.Generic.List{System.ValueTuple{System.String,Verse.Thing,System.Collections.Generic.List{RenderInfo}}},Verse.Rot4,Verse.Graphic,System.Collections.Generic.Dictionary{System.String,System.Object})
  id: PostDrawSteep(System.Collections.Generic.List{System.ValueTuple{System.String,Verse.Thing,System.Collections.Generic.List{RenderInfo}}},Verse.Rot4,Verse.Graphic,System.Collections.Generic.Dictionary{System.String,System.Object})
  parent: RW_ModularizationWeapon.CompModularizationWeapon
  langs:
  - csharp
  - vb
  name: PostDrawSteep(List<(String, Thing, List<RenderInfo>)>, Rot4, Graphic, Dictionary<String, Object>)
  nameWithType: CompModularizationWeapon.PostDrawSteep(List<(String, Thing, List<RenderInfo>)>, Rot4, Graphic, Dictionary<String, Object>)
  fullName: RW_ModularizationWeapon.CompModularizationWeapon.PostDrawSteep(System.Collections.Generic.List<System.ValueTuple<System.String, Verse.Thing, System.Collections.Generic.List<RenderInfo>>>, Verse.Rot4, Verse.Graphic, System.Collections.Generic.Dictionary<System.String, System.Object>)
  type: Method
  source:
    remote:
      path: src/RW_ModularizationWeapon/CompModularizationWeapon.cs
      branch: master
      repo: https://github.com/RW-NodeTree/RW_ModularizationWeapon.git
    id: PostDrawSteep
    path: CompModularizationWeapon.cs
    startLine: 159
  assemblies:
  - RW_ModularizationWeapon
  namespace: RW_ModularizationWeapon
  syntax:
    content: protected override List<(string, Thing, List<RenderInfo>)> PostDrawSteep(List<(string, Thing, List<RenderInfo>)> nodeRenderingInfos, Rot4 rot, Graphic graphic, Dictionary<string, object> cachedDataFromPerDrawSteep)
    parameters:
    - id: nodeRenderingInfos
      type: System.Collections.Generic.List{System.ValueTuple{System.String,Verse.Thing,System.Collections.Generic.List{RenderInfo}}}
    - id: rot
      type: Verse.Rot4
    - id: graphic
      type: Verse.Graphic
    - id: cachedDataFromPerDrawSteep
      type: System.Collections.Generic.Dictionary{System.String,System.Object}
    return:
      type: System.Collections.Generic.List{System.ValueTuple{System.String,Verse.Thing,System.Collections.Generic.List{RenderInfo}}}
    content.vb: Protected Overrides Function PostDrawSteep(nodeRenderingInfos As List(Of(String, Thing, List(Of RenderInfo))(Of String , Thing, List(Of RenderInfo))), rot As Rot4, graphic As Graphic, cachedDataFromPerDrawSteep As Dictionary(Of String, Object)) As List(Of(String, Thing, List(Of RenderInfo))(Of String , Thing, List(Of RenderInfo)))
  overload: RW_ModularizationWeapon.CompModularizationWeapon.PostDrawSteep*
  nameWithType.vb: CompModularizationWeapon.PostDrawSteep(List(Of (String, Thing, List(Of RenderInfo))(Of String, Thing, List(Of RenderInfo))), Rot4, Graphic, Dictionary(Of String, Object))
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
  fullName.vb: RW_ModularizationWeapon.CompModularizationWeapon.PostDrawSteep(System.Collections.Generic.List(Of System.ValueTuple(Of System.String, Verse.Thing, System.Collections.Generic.List(Of RenderInfo))), Verse.Rot4, Verse.Graphic, System.Collections.Generic.Dictionary(Of System.String, System.Object))
  name.vb: PostDrawSteep(List(Of (String, Thing, List(Of RenderInfo))(Of String, Thing, List(Of RenderInfo))), Rot4, Graphic, Dictionary(Of String, Object))
- uid: RW_ModularizationWeapon.CompModularizationWeapon.PostFX(UnityEngine.RenderTexture)
  commentId: M:RW_ModularizationWeapon.CompModularizationWeapon.PostFX(UnityEngine.RenderTexture)
  id: PostFX(UnityEngine.RenderTexture)
  parent: RW_ModularizationWeapon.CompModularizationWeapon
  langs:
  - csharp
  - vb
  name: PostFX(RenderTexture)
  nameWithType: CompModularizationWeapon.PostFX(RenderTexture)
  fullName: RW_ModularizationWeapon.CompModularizationWeapon.PostFX(UnityEngine.RenderTexture)
  type: Method
  source:
    remote:
      path: src/RW_ModularizationWeapon/CompModularizationWeapon.cs
      branch: master
      repo: https://github.com/RW-NodeTree/RW_ModularizationWeapon.git
    id: PostFX
    path: CompModularizationWeapon.cs
    startLine: 295
  assemblies:
  - RW_ModularizationWeapon
  namespace: RW_ModularizationWeapon
  syntax:
    content: public override void PostFX(RenderTexture tar)
    parameters:
    - id: tar
      type: UnityEngine.RenderTexture
    content.vb: Public Overrides Sub PostFX(tar As RenderTexture)
  overload: RW_ModularizationWeapon.CompModularizationWeapon.PostFX*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: RW_ModularizationWeapon.CompModularizationWeapon.AllowPart(Verse.Thing,System.String,System.Boolean)
  commentId: M:RW_ModularizationWeapon.CompModularizationWeapon.AllowPart(Verse.Thing,System.String,System.Boolean)
  id: AllowPart(Verse.Thing,System.String,System.Boolean)
  parent: RW_ModularizationWeapon.CompModularizationWeapon
  langs:
  - csharp
  - vb
  name: AllowPart(Thing, String, Boolean)
  nameWithType: CompModularizationWeapon.AllowPart(Thing, String, Boolean)
  fullName: RW_ModularizationWeapon.CompModularizationWeapon.AllowPart(Verse.Thing, System.String, System.Boolean)
  type: Method
  source:
    remote:
      path: src/RW_ModularizationWeapon/CompModularizationWeapon.cs
      branch: master
      repo: https://github.com/RW-NodeTree/RW_ModularizationWeapon.git
    id: AllowPart
    path: CompModularizationWeapon.cs
    startLine: 332
  assemblies:
  - RW_ModularizationWeapon
  namespace: RW_ModularizationWeapon
  syntax:
    content: public bool AllowPart(Thing part, string id = null, bool checkOccupy = true)
    parameters:
    - id: part
      type: Verse.Thing
    - id: id
      type: System.String
    - id: checkOccupy
      type: System.Boolean
    return:
      type: System.Boolean
    content.vb: Public Function AllowPart(part As Thing, id As String = Nothing, checkOccupy As Boolean = True) As Boolean
  overload: RW_ModularizationWeapon.CompModularizationWeapon.AllowPart*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: RW_ModularizationWeapon.CompModularizationWeapon.AllowNode(Verse.Thing,System.String)
  commentId: M:RW_ModularizationWeapon.CompModularizationWeapon.AllowNode(Verse.Thing,System.String)
  id: AllowNode(Verse.Thing,System.String)
  parent: RW_ModularizationWeapon.CompModularizationWeapon
  langs:
  - csharp
  - vb
  name: AllowNode(Thing, String)
  nameWithType: CompModularizationWeapon.AllowNode(Thing, String)
  fullName: RW_ModularizationWeapon.CompModularizationWeapon.AllowNode(Verse.Thing, System.String)
  type: Method
  source:
    remote:
      path: src/RW_ModularizationWeapon/CompModularizationWeapon.cs
      branch: master
      repo: https://github.com/RW-NodeTree/RW_ModularizationWeapon.git
    id: AllowNode
    path: CompModularizationWeapon.cs
    startLine: 370
  assemblies:
  - RW_ModularizationWeapon
  namespace: RW_ModularizationWeapon
  syntax:
    content: protected override bool AllowNode(Thing node, string id = null)
    parameters:
    - id: node
      type: Verse.Thing
    - id: id
      type: System.String
    return:
      type: System.Boolean
    content.vb: Protected Overrides Function AllowNode(node As Thing, id As String = Nothing) As Boolean
  overload: RW_ModularizationWeapon.CompModularizationWeapon.AllowNode*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: RW_ModularizationWeapon.CompModularizationWeapon.SetPartToDefault
  commentId: M:RW_ModularizationWeapon.CompModularizationWeapon.SetPartToDefault
  id: SetPartToDefault
  parent: RW_ModularizationWeapon.CompModularizationWeapon
  langs:
  - csharp
  - vb
  name: SetPartToDefault()
  nameWithType: CompModularizationWeapon.SetPartToDefault()
  fullName: RW_ModularizationWeapon.CompModularizationWeapon.SetPartToDefault()
  type: Method
  source:
    remote:
      path: src/RW_ModularizationWeapon/CompModularizationWeapon.cs
      branch: master
      repo: https://github.com/RW-NodeTree/RW_ModularizationWeapon.git
    id: SetPartToDefault
    path: CompModularizationWeapon.cs
    startLine: 373
  assemblies:
  - RW_ModularizationWeapon
  namespace: RW_ModularizationWeapon
  syntax:
    content: public void SetPartToDefault()
    content.vb: Public Sub SetPartToDefault
  overload: RW_ModularizationWeapon.CompModularizationWeapon.SetPartToDefault*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: RW_ModularizationWeapon.CompModularizationWeapon.SetPartToRandom
  commentId: M:RW_ModularizationWeapon.CompModularizationWeapon.SetPartToRandom
  id: SetPartToRandom
  parent: RW_ModularizationWeapon.CompModularizationWeapon
  langs:
  - csharp
  - vb
  name: SetPartToRandom()
  nameWithType: CompModularizationWeapon.SetPartToRandom()
  fullName: RW_ModularizationWeapon.CompModularizationWeapon.SetPartToRandom()
  type: Method
  source:
    remote:
      path: src/RW_ModularizationWeapon/CompModularizationWeapon.cs
      branch: master
      repo: https://github.com/RW-NodeTree/RW_ModularizationWeapon.git
    id: SetPartToRandom
    path: CompModularizationWeapon.cs
    startLine: 403
  assemblies:
  - RW_ModularizationWeapon
  namespace: RW_ModularizationWeapon
  syntax:
    content: public void SetPartToRandom()
    content.vb: Public Sub SetPartToRandom
  overload: RW_ModularizationWeapon.CompModularizationWeapon.SetPartToRandom*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: RW_ModularizationWeapon.CompModularizationWeapon.PostGenRecipe_MakeRecipeProducts(Verse.RecipeDef,Verse.Pawn,System.Collections.Generic.List{Verse.Thing},Verse.Thing,RimWorld.IBillGiver,RimWorld.Precept_ThingStyle,RecipeInvokeSource,System.Collections.Generic.IEnumerable{Verse.Thing})
  commentId: M:RW_ModularizationWeapon.CompModularizationWeapon.PostGenRecipe_MakeRecipeProducts(Verse.RecipeDef,Verse.Pawn,System.Collections.Generic.List{Verse.Thing},Verse.Thing,RimWorld.IBillGiver,RimWorld.Precept_ThingStyle,RecipeInvokeSource,System.Collections.Generic.IEnumerable{Verse.Thing})
  id: PostGenRecipe_MakeRecipeProducts(Verse.RecipeDef,Verse.Pawn,System.Collections.Generic.List{Verse.Thing},Verse.Thing,RimWorld.IBillGiver,RimWorld.Precept_ThingStyle,RecipeInvokeSource,System.Collections.Generic.IEnumerable{Verse.Thing})
  parent: RW_ModularizationWeapon.CompModularizationWeapon
  langs:
  - csharp
  - vb
  name: PostGenRecipe_MakeRecipeProducts(RecipeDef, Pawn, List<Thing>, Thing, IBillGiver, Precept_ThingStyle, RecipeInvokeSource, IEnumerable<Thing>)
  nameWithType: CompModularizationWeapon.PostGenRecipe_MakeRecipeProducts(RecipeDef, Pawn, List<Thing>, Thing, IBillGiver, Precept_ThingStyle, RecipeInvokeSource, IEnumerable<Thing>)
  fullName: RW_ModularizationWeapon.CompModularizationWeapon.PostGenRecipe_MakeRecipeProducts(Verse.RecipeDef, Verse.Pawn, System.Collections.Generic.List<Verse.Thing>, Verse.Thing, RimWorld.IBillGiver, RimWorld.Precept_ThingStyle, RecipeInvokeSource, System.Collections.Generic.IEnumerable<Verse.Thing>)
  type: Method
  source:
    remote:
      path: src/RW_ModularizationWeapon/CompModularizationWeapon.cs
      branch: master
      repo: https://github.com/RW-NodeTree/RW_ModularizationWeapon.git
    id: PostGenRecipe_MakeRecipeProducts
    path: CompModularizationWeapon.cs
    startLine: 475
  assemblies:
  - RW_ModularizationWeapon
  namespace: RW_ModularizationWeapon
  syntax:
    content: protected override IEnumerable<Thing> PostGenRecipe_MakeRecipeProducts(RecipeDef recipeDef, Pawn worker, List<Thing> ingredients, Thing dominantIngredient1, IBillGiver billGiver, Precept_ThingStyle precept, RecipeInvokeSource invokeSource, IEnumerable<Thing> result)
    parameters:
    - id: recipeDef
      type: Verse.RecipeDef
    - id: worker
      type: Verse.Pawn
    - id: ingredients
      type: System.Collections.Generic.List{Verse.Thing}
    - id: dominantIngredient1
      type: Verse.Thing
    - id: billGiver
      type: RimWorld.IBillGiver
    - id: precept
      type: RimWorld.Precept_ThingStyle
    - id: invokeSource
      type: RecipeInvokeSource
    - id: result
      type: System.Collections.Generic.IEnumerable{Verse.Thing}
    return:
      type: System.Collections.Generic.IEnumerable{Verse.Thing}
    content.vb: Protected Overrides Function PostGenRecipe_MakeRecipeProducts(recipeDef As RecipeDef, worker As Pawn, ingredients As List(Of Thing), dominantIngredient1 As Thing, billGiver As IBillGiver, precept As Precept_ThingStyle, invokeSource As RecipeInvokeSource, result As IEnumerable(Of Thing)) As IEnumerable(Of Thing)
  overload: RW_ModularizationWeapon.CompModularizationWeapon.PostGenRecipe_MakeRecipeProducts*
  nameWithType.vb: CompModularizationWeapon.PostGenRecipe_MakeRecipeProducts(RecipeDef, Pawn, List(Of Thing), Thing, IBillGiver, Precept_ThingStyle, RecipeInvokeSource, IEnumerable(Of Thing))
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
  fullName.vb: RW_ModularizationWeapon.CompModularizationWeapon.PostGenRecipe_MakeRecipeProducts(Verse.RecipeDef, Verse.Pawn, System.Collections.Generic.List(Of Verse.Thing), Verse.Thing, RimWorld.IBillGiver, RimWorld.Precept_ThingStyle, RecipeInvokeSource, System.Collections.Generic.IEnumerable(Of Verse.Thing))
  name.vb: PostGenRecipe_MakeRecipeProducts(RecipeDef, Pawn, List(Of Thing), Thing, IBillGiver, Precept_ThingStyle, RecipeInvokeSource, IEnumerable(Of Thing))
- uid: RW_ModularizationWeapon.CompModularizationWeapon.PostThingWithComps_PreApplyDamage(Verse.DamageInfo@,System.Boolean)
  commentId: M:RW_ModularizationWeapon.CompModularizationWeapon.PostThingWithComps_PreApplyDamage(Verse.DamageInfo@,System.Boolean)
  id: PostThingWithComps_PreApplyDamage(Verse.DamageInfo@,System.Boolean)
  parent: RW_ModularizationWeapon.CompModularizationWeapon
  langs:
  - csharp
  - vb
  name: PostThingWithComps_PreApplyDamage(ref DamageInfo, Boolean)
  nameWithType: CompModularizationWeapon.PostThingWithComps_PreApplyDamage(ref DamageInfo, Boolean)
  fullName: RW_ModularizationWeapon.CompModularizationWeapon.PostThingWithComps_PreApplyDamage(ref Verse.DamageInfo, System.Boolean)
  type: Method
  source:
    remote:
      path: src/RW_ModularizationWeapon/CompModularizationWeapon.cs
      branch: master
      repo: https://github.com/RW-NodeTree/RW_ModularizationWeapon.git
    id: PostThingWithComps_PreApplyDamage
    path: CompModularizationWeapon.cs
    startLine: 502
  assemblies:
  - RW_ModularizationWeapon
  namespace: RW_ModularizationWeapon
  syntax:
    content: protected override bool PostThingWithComps_PreApplyDamage(ref DamageInfo dinfo, bool absorbed)
    parameters:
    - id: dinfo
      type: Verse.DamageInfo
    - id: absorbed
      type: System.Boolean
    return:
      type: System.Boolean
    content.vb: Protected Overrides Function PostThingWithComps_PreApplyDamage(ByRef dinfo As DamageInfo, absorbed As Boolean) As Boolean
  overload: RW_ModularizationWeapon.CompModularizationWeapon.PostThingWithComps_PreApplyDamage*
  nameWithType.vb: CompModularizationWeapon.PostThingWithComps_PreApplyDamage(ByRef DamageInfo, Boolean)
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
  fullName.vb: RW_ModularizationWeapon.CompModularizationWeapon.PostThingWithComps_PreApplyDamage(ByRef Verse.DamageInfo, System.Boolean)
  name.vb: PostThingWithComps_PreApplyDamage(ByRef DamageInfo, Boolean)
- uid: RW_ModularizationWeapon.CompModularizationWeapon.AllExtraCompProperties
  commentId: M:RW_ModularizationWeapon.CompModularizationWeapon.AllExtraCompProperties
  id: AllExtraCompProperties
  parent: RW_ModularizationWeapon.CompModularizationWeapon
  langs:
  - csharp
  - vb
  name: AllExtraCompProperties()
  nameWithType: CompModularizationWeapon.AllExtraCompProperties()
  fullName: RW_ModularizationWeapon.CompModularizationWeapon.AllExtraCompProperties()
  type: Method
  source:
    remote:
      path: src/RW_ModularizationWeapon/CompModularizationWeapon.cs
      branch: master
      repo: https://github.com/RW-NodeTree/RW_ModularizationWeapon.git
    id: AllExtraCompProperties
    path: CompModularizationWeapon.cs
    startLine: 534
  assemblies:
  - RW_ModularizationWeapon
  namespace: RW_ModularizationWeapon
  syntax:
    content: public List<CompProperties> AllExtraCompProperties()
    return:
      type: System.Collections.Generic.List{Verse.CompProperties}
    content.vb: Public Function AllExtraCompProperties As List(Of CompProperties)
  overload: RW_ModularizationWeapon.CompModularizationWeapon.AllExtraCompProperties*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: RW_ModularizationWeapon.CompModularizationWeapon.PreUpdateNode(CompChildNodeProccesser,System.Collections.Generic.Dictionary{System.String,System.Object},System.Collections.Generic.Dictionary{System.String,Verse.Thing})
  commentId: M:RW_ModularizationWeapon.CompModularizationWeapon.PreUpdateNode(CompChildNodeProccesser,System.Collections.Generic.Dictionary{System.String,System.Object},System.Collections.Generic.Dictionary{System.String,Verse.Thing})
  id: PreUpdateNode(CompChildNodeProccesser,System.Collections.Generic.Dictionary{System.String,System.Object},System.Collections.Generic.Dictionary{System.String,Verse.Thing})
  parent: RW_ModularizationWeapon.CompModularizationWeapon
  langs:
  - csharp
  - vb
  name: PreUpdateNode(CompChildNodeProccesser, Dictionary<String, Object>, Dictionary<String, Thing>)
  nameWithType: CompModularizationWeapon.PreUpdateNode(CompChildNodeProccesser, Dictionary<String, Object>, Dictionary<String, Thing>)
  fullName: RW_ModularizationWeapon.CompModularizationWeapon.PreUpdateNode(CompChildNodeProccesser, System.Collections.Generic.Dictionary<System.String, System.Object>, System.Collections.Generic.Dictionary<System.String, Verse.Thing>)
  type: Method
  source:
    remote:
      path: src/RW_ModularizationWeapon/CompModularizationWeapon.cs
      branch: master
      repo: https://github.com/RW-NodeTree/RW_ModularizationWeapon.git
    id: PreUpdateNode
    path: CompModularizationWeapon.cs
    startLine: 649
  assemblies:
  - RW_ModularizationWeapon
  namespace: RW_ModularizationWeapon
  syntax:
    content: protected override bool PreUpdateNode(CompChildNodeProccesser actionNode, Dictionary<string, object> cachedDataToPostUpatde, Dictionary<string, Thing> prveChilds)
    parameters:
    - id: actionNode
      type: CompChildNodeProccesser
    - id: cachedDataToPostUpatde
      type: System.Collections.Generic.Dictionary{System.String,System.Object}
    - id: prveChilds
      type: System.Collections.Generic.Dictionary{System.String,Verse.Thing}
    return:
      type: System.Boolean
    content.vb: Protected Overrides Function PreUpdateNode(actionNode As CompChildNodeProccesser, cachedDataToPostUpatde As Dictionary(Of String, Object), prveChilds As Dictionary(Of String, Thing)) As Boolean
  overload: RW_ModularizationWeapon.CompModularizationWeapon.PreUpdateNode*
  nameWithType.vb: CompModularizationWeapon.PreUpdateNode(CompChildNodeProccesser, Dictionary(Of String, Object), Dictionary(Of String, Thing))
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
  fullName.vb: RW_ModularizationWeapon.CompModularizationWeapon.PreUpdateNode(CompChildNodeProccesser, System.Collections.Generic.Dictionary(Of System.String, System.Object), System.Collections.Generic.Dictionary(Of System.String, Verse.Thing))
  name.vb: PreUpdateNode(CompChildNodeProccesser, Dictionary(Of String, Object), Dictionary(Of String, Thing))
- uid: RW_ModularizationWeapon.CompModularizationWeapon.PostUpdateNode(CompChildNodeProccesser,System.Collections.Generic.Dictionary{System.String,System.Object},System.Collections.Generic.Dictionary{System.String,Verse.Thing})
  commentId: M:RW_ModularizationWeapon.CompModularizationWeapon.PostUpdateNode(CompChildNodeProccesser,System.Collections.Generic.Dictionary{System.String,System.Object},System.Collections.Generic.Dictionary{System.String,Verse.Thing})
  id: PostUpdateNode(CompChildNodeProccesser,System.Collections.Generic.Dictionary{System.String,System.Object},System.Collections.Generic.Dictionary{System.String,Verse.Thing})
  parent: RW_ModularizationWeapon.CompModularizationWeapon
  langs:
  - csharp
  - vb
  name: PostUpdateNode(CompChildNodeProccesser, Dictionary<String, Object>, Dictionary<String, Thing>)
  nameWithType: CompModularizationWeapon.PostUpdateNode(CompChildNodeProccesser, Dictionary<String, Object>, Dictionary<String, Thing>)
  fullName: RW_ModularizationWeapon.CompModularizationWeapon.PostUpdateNode(CompChildNodeProccesser, System.Collections.Generic.Dictionary<System.String, System.Object>, System.Collections.Generic.Dictionary<System.String, Verse.Thing>)
  type: Method
  source:
    remote:
      path: src/RW_ModularizationWeapon/CompModularizationWeapon.cs
      branch: master
      repo: https://github.com/RW-NodeTree/RW_ModularizationWeapon.git
    id: PostUpdateNode
    path: CompModularizationWeapon.cs
    startLine: 699
  assemblies:
  - RW_ModularizationWeapon
  namespace: RW_ModularizationWeapon
  syntax:
    content: protected override bool PostUpdateNode(CompChildNodeProccesser actionNode, Dictionary<string, object> cachedDataFromPerUpdate, Dictionary<string, Thing> prveChilds)
    parameters:
    - id: actionNode
      type: CompChildNodeProccesser
    - id: cachedDataFromPerUpdate
      type: System.Collections.Generic.Dictionary{System.String,System.Object}
    - id: prveChilds
      type: System.Collections.Generic.Dictionary{System.String,Verse.Thing}
    return:
      type: System.Boolean
    content.vb: Protected Overrides Function PostUpdateNode(actionNode As CompChildNodeProccesser, cachedDataFromPerUpdate As Dictionary(Of String, Object), prveChilds As Dictionary(Of String, Thing)) As Boolean
  overload: RW_ModularizationWeapon.CompModularizationWeapon.PostUpdateNode*
  nameWithType.vb: CompModularizationWeapon.PostUpdateNode(CompChildNodeProccesser, Dictionary(Of String, Object), Dictionary(Of String, Thing))
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
  fullName.vb: RW_ModularizationWeapon.CompModularizationWeapon.PostUpdateNode(CompChildNodeProccesser, System.Collections.Generic.Dictionary(Of System.String, System.Object), System.Collections.Generic.Dictionary(Of System.String, Verse.Thing))
  name.vb: PostUpdateNode(CompChildNodeProccesser, Dictionary(Of String, Object), Dictionary(Of String, Thing))
- uid: RW_ModularizationWeapon.CompModularizationWeapon.SetChildPostion
  commentId: M:RW_ModularizationWeapon.CompModularizationWeapon.SetChildPostion
  id: SetChildPostion
  parent: RW_ModularizationWeapon.CompModularizationWeapon
  langs:
  - csharp
  - vb
  name: SetChildPostion()
  nameWithType: CompModularizationWeapon.SetChildPostion()
  fullName: RW_ModularizationWeapon.CompModularizationWeapon.SetChildPostion()
  type: Method
  source:
    remote:
      path: src/RW_ModularizationWeapon/CompModularizationWeapon.cs
      branch: master
      repo: https://github.com/RW-NodeTree/RW_ModularizationWeapon.git
    id: SetChildPostion
    path: CompModularizationWeapon.cs
    startLine: 853
  assemblies:
  - RW_ModularizationWeapon
  namespace: RW_ModularizationWeapon
  syntax:
    content: public void SetChildPostion()
    content.vb: Public Sub SetChildPostion
  overload: RW_ModularizationWeapon.CompModularizationWeapon.SetChildPostion*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: RW_ModularizationWeapon.CompModularizationWeapon.SetChildPostionInvalid
  commentId: M:RW_ModularizationWeapon.CompModularizationWeapon.SetChildPostionInvalid
  id: SetChildPostionInvalid
  parent: RW_ModularizationWeapon.CompModularizationWeapon
  langs:
  - csharp
  - vb
  name: SetChildPostionInvalid()
  nameWithType: CompModularizationWeapon.SetChildPostionInvalid()
  fullName: RW_ModularizationWeapon.CompModularizationWeapon.SetChildPostionInvalid()
  type: Method
  source:
    remote:
      path: src/RW_ModularizationWeapon/CompModularizationWeapon.cs
      branch: master
      repo: https://github.com/RW-NodeTree/RW_ModularizationWeapon.git
    id: SetChildPostionInvalid
    path: CompModularizationWeapon.cs
    startLine: 866
  assemblies:
  - RW_ModularizationWeapon
  namespace: RW_ModularizationWeapon
  syntax:
    content: public void SetChildPostionInvalid()
    content.vb: Public Sub SetChildPostionInvalid
  overload: RW_ModularizationWeapon.CompModularizationWeapon.SetChildPostionInvalid*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: RW_ModularizationWeapon.CompModularizationWeapon.UniqueVerbOwnerID
  commentId: M:RW_ModularizationWeapon.CompModularizationWeapon.UniqueVerbOwnerID
  id: UniqueVerbOwnerID
  parent: RW_ModularizationWeapon.CompModularizationWeapon
  langs:
  - csharp
  - vb
  name: UniqueVerbOwnerID()
  nameWithType: CompModularizationWeapon.UniqueVerbOwnerID()
  fullName: RW_ModularizationWeapon.CompModularizationWeapon.UniqueVerbOwnerID()
  type: Method
  source:
    remote:
      path: src/RW_ModularizationWeapon/CompModularizationWeapon.cs
      branch: master
      repo: https://github.com/RW-NodeTree/RW_ModularizationWeapon.git
    id: UniqueVerbOwnerID
    path: CompModularizationWeapon.cs
    startLine: 901
  assemblies:
  - RW_ModularizationWeapon
  namespace: RW_ModularizationWeapon
  syntax:
    content: public string UniqueVerbOwnerID()
    return:
      type: System.String
    content.vb: Public Function UniqueVerbOwnerID As String
  overload: RW_ModularizationWeapon.CompModularizationWeapon.UniqueVerbOwnerID*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: RW_ModularizationWeapon.CompModularizationWeapon.VerbsStillUsableBy(Verse.Pawn)
  commentId: M:RW_ModularizationWeapon.CompModularizationWeapon.VerbsStillUsableBy(Verse.Pawn)
  id: VerbsStillUsableBy(Verse.Pawn)
  parent: RW_ModularizationWeapon.CompModularizationWeapon
  langs:
  - csharp
  - vb
  name: VerbsStillUsableBy(Pawn)
  nameWithType: CompModularizationWeapon.VerbsStillUsableBy(Pawn)
  fullName: RW_ModularizationWeapon.CompModularizationWeapon.VerbsStillUsableBy(Verse.Pawn)
  type: Method
  source:
    remote:
      path: src/RW_ModularizationWeapon/CompModularizationWeapon.cs
      branch: master
      repo: https://github.com/RW-NodeTree/RW_ModularizationWeapon.git
    id: VerbsStillUsableBy
    path: CompModularizationWeapon.cs
    startLine: 906
  assemblies:
  - RW_ModularizationWeapon
  namespace: RW_ModularizationWeapon
  syntax:
    content: public bool VerbsStillUsableBy(Pawn p)
    parameters:
    - id: p
      type: Verse.Pawn
    return:
      type: System.Boolean
    content.vb: Public Function VerbsStillUsableBy(p As Pawn) As Boolean
  overload: RW_ModularizationWeapon.CompModularizationWeapon.VerbsStillUsableBy*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: RW_ModularizationWeapon.CompModularizationWeapon.op_Implicit(RW_ModularizationWeapon.CompModularizationWeapon)~Verse.Thing
  commentId: M:RW_ModularizationWeapon.CompModularizationWeapon.op_Implicit(RW_ModularizationWeapon.CompModularizationWeapon)~Verse.Thing
  id: op_Implicit(RW_ModularizationWeapon.CompModularizationWeapon)~Verse.Thing
  parent: RW_ModularizationWeapon.CompModularizationWeapon
  langs:
  - csharp
  - vb
  name: Implicit(CompModularizationWeapon to Thing)
  nameWithType: CompModularizationWeapon.Implicit(CompModularizationWeapon to Thing)
  fullName: RW_ModularizationWeapon.CompModularizationWeapon.Implicit(RW_ModularizationWeapon.CompModularizationWeapon to Verse.Thing)
  type: Operator
  source:
    remote:
      path: src/RW_ModularizationWeapon/CompModularizationWeapon.cs
      branch: master
      repo: https://github.com/RW-NodeTree/RW_ModularizationWeapon.git
    id: op_Implicit
    path: CompModularizationWeapon.cs
    startLine: 912
  assemblies:
  - RW_ModularizationWeapon
  namespace: RW_ModularizationWeapon
  syntax:
    content: public static implicit operator Thing(CompModularizationWeapon node)
    parameters:
    - id: node
      type: RW_ModularizationWeapon.CompModularizationWeapon
    return:
      type: Verse.Thing
    content.vb: Public Shared Widening Operator CType(node As CompModularizationWeapon) As Thing
  overload: RW_ModularizationWeapon.CompModularizationWeapon.op_Implicit*
  nameWithType.vb: CompModularizationWeapon.Widening(CompModularizationWeapon to Thing)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: RW_ModularizationWeapon.CompModularizationWeapon.Widening(RW_ModularizationWeapon.CompModularizationWeapon to Verse.Thing)
  name.vb: Widening(CompModularizationWeapon to Thing)
- uid: RW_ModularizationWeapon.CompModularizationWeapon.op_Implicit(Verse.Thing)~RW_ModularizationWeapon.CompModularizationWeapon
  commentId: M:RW_ModularizationWeapon.CompModularizationWeapon.op_Implicit(Verse.Thing)~RW_ModularizationWeapon.CompModularizationWeapon
  id: op_Implicit(Verse.Thing)~RW_ModularizationWeapon.CompModularizationWeapon
  parent: RW_ModularizationWeapon.CompModularizationWeapon
  langs:
  - csharp
  - vb
  name: Implicit(Thing to CompModularizationWeapon)
  nameWithType: CompModularizationWeapon.Implicit(Thing to CompModularizationWeapon)
  fullName: RW_ModularizationWeapon.CompModularizationWeapon.Implicit(Verse.Thing to RW_ModularizationWeapon.CompModularizationWeapon)
  type: Operator
  source:
    remote:
      path: src/RW_ModularizationWeapon/CompModularizationWeapon.cs
      branch: master
      repo: https://github.com/RW-NodeTree/RW_ModularizationWeapon.git
    id: op_Implicit
    path: CompModularizationWeapon.cs
    startLine: 917
  assemblies:
  - RW_ModularizationWeapon
  namespace: RW_ModularizationWeapon
  syntax:
    content: public static implicit operator CompModularizationWeapon(Thing thing)
    parameters:
    - id: thing
      type: Verse.Thing
    return:
      type: RW_ModularizationWeapon.CompModularizationWeapon
    content.vb: Public Shared Widening Operator CType(thing As Thing) As CompModularizationWeapon
  overload: RW_ModularizationWeapon.CompModularizationWeapon.op_Implicit*
  nameWithType.vb: CompModularizationWeapon.Widening(Thing to CompModularizationWeapon)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: RW_ModularizationWeapon.CompModularizationWeapon.Widening(Verse.Thing to RW_ModularizationWeapon.CompModularizationWeapon)
  name.vb: Widening(Thing to CompModularizationWeapon)
- uid: RW_ModularizationWeapon.CompModularizationWeapon.Unchangeable(System.String)
  commentId: M:RW_ModularizationWeapon.CompModularizationWeapon.Unchangeable(System.String)
  id: Unchangeable(System.String)
  parent: RW_ModularizationWeapon.CompModularizationWeapon
  langs:
  - csharp
  - vb
  name: Unchangeable(String)
  nameWithType: CompModularizationWeapon.Unchangeable(String)
  fullName: RW_ModularizationWeapon.CompModularizationWeapon.Unchangeable(System.String)
  type: Method
  source:
    remote:
      path: src/RW_ModularizationWeapon/Condition/CompModularizationWeapon.cs
      branch: master
      repo: https://github.com/RW-NodeTree/RW_ModularizationWeapon.git
    id: Unchangeable
    path: Condition/CompModularizationWeapon.cs
    startLine: 6
  assemblies:
  - RW_ModularizationWeapon
  namespace: RW_ModularizationWeapon
  syntax:
    content: public bool Unchangeable(string id)
    parameters:
    - id: id
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Function Unchangeable(id As String) As Boolean
  overload: RW_ModularizationWeapon.CompModularizationWeapon.Unchangeable*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: RW_ModularizationWeapon.CompModularizationWeapon.NotDraw(System.String)
  commentId: M:RW_ModularizationWeapon.CompModularizationWeapon.NotDraw(System.String)
  id: NotDraw(System.String)
  parent: RW_ModularizationWeapon.CompModularizationWeapon
  langs:
  - csharp
  - vb
  name: NotDraw(String)
  nameWithType: CompModularizationWeapon.NotDraw(String)
  fullName: RW_ModularizationWeapon.CompModularizationWeapon.NotDraw(System.String)
  type: Method
  source:
    remote:
      path: src/RW_ModularizationWeapon/Condition/CompModularizationWeapon.cs
      branch: master
      repo: https://github.com/RW-NodeTree/RW_ModularizationWeapon.git
    id: NotDraw
    path: Condition/CompModularizationWeapon.cs
    startLine: 26
  assemblies:
  - RW_ModularizationWeapon
  namespace: RW_ModularizationWeapon
  syntax:
    content: public bool NotDraw(string id)
    parameters:
    - id: id
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Function NotDraw(id As String) As Boolean
  overload: RW_ModularizationWeapon.CompModularizationWeapon.NotDraw*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: RW_ModularizationWeapon.CompModularizationWeapon.NotUseTools(System.String)
  commentId: M:RW_ModularizationWeapon.CompModularizationWeapon.NotUseTools(System.String)
  id: NotUseTools(System.String)
  parent: RW_ModularizationWeapon.CompModularizationWeapon
  langs:
  - csharp
  - vb
  name: NotUseTools(String)
  nameWithType: CompModularizationWeapon.NotUseTools(String)
  fullName: RW_ModularizationWeapon.CompModularizationWeapon.NotUseTools(System.String)
  type: Method
  source:
    remote:
      path: src/RW_ModularizationWeapon/Condition/CompModularizationWeapon.cs
      branch: master
      repo: https://github.com/RW-NodeTree/RW_ModularizationWeapon.git
    id: NotUseTools
    path: Condition/CompModularizationWeapon.cs
    startLine: 45
  assemblies:
  - RW_ModularizationWeapon
  namespace: RW_ModularizationWeapon
  syntax:
    content: public bool NotUseTools(string id)
    parameters:
    - id: id
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Function NotUseTools(id As String) As Boolean
  overload: RW_ModularizationWeapon.CompModularizationWeapon.NotUseTools*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: RW_ModularizationWeapon.CompModularizationWeapon.NotUseVerbProperties(System.String)
  commentId: M:RW_ModularizationWeapon.CompModularizationWeapon.NotUseVerbProperties(System.String)
  id: NotUseVerbProperties(System.String)
  parent: RW_ModularizationWeapon.CompModularizationWeapon
  langs:
  - csharp
  - vb
  name: NotUseVerbProperties(String)
  nameWithType: CompModularizationWeapon.NotUseVerbProperties(String)
  fullName: RW_ModularizationWeapon.CompModularizationWeapon.NotUseVerbProperties(System.String)
  type: Method
  source:
    remote:
      path: src/RW_ModularizationWeapon/Condition/CompModularizationWeapon.cs
      branch: master
      repo: https://github.com/RW-NodeTree/RW_ModularizationWeapon.git
    id: NotUseVerbProperties
    path: Condition/CompModularizationWeapon.cs
    startLine: 64
  assemblies:
  - RW_ModularizationWeapon
  namespace: RW_ModularizationWeapon
  syntax:
    content: public bool NotUseVerbProperties(string id)
    parameters:
    - id: id
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Function NotUseVerbProperties(id As String) As Boolean
  overload: RW_ModularizationWeapon.CompModularizationWeapon.NotUseVerbProperties*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: RW_ModularizationWeapon.CompModularizationWeapon.VerbPropertiesMultiplier(System.String)
  commentId: M:RW_ModularizationWeapon.CompModularizationWeapon.VerbPropertiesMultiplier(System.String)
  id: VerbPropertiesMultiplier(System.String)
  parent: RW_ModularizationWeapon.CompModularizationWeapon
  langs:
  - csharp
  - vb
  name: VerbPropertiesMultiplier(String)
  nameWithType: CompModularizationWeapon.VerbPropertiesMultiplier(String)
  fullName: RW_ModularizationWeapon.CompModularizationWeapon.VerbPropertiesMultiplier(System.String)
  type: Method
  source:
    remote:
      path: src/RW_ModularizationWeapon/Multiplier/CompModularizationWeapon.cs
      branch: master
      repo: https://github.com/RW-NodeTree/RW_ModularizationWeapon.git
    id: VerbPropertiesMultiplier
    path: Multiplier/CompModularizationWeapon.cs
    startLine: 13
  assemblies:
  - RW_ModularizationWeapon
  namespace: RW_ModularizationWeapon
  syntax:
    content: public FieldReaderDgitList<VerbProperties> VerbPropertiesMultiplier(string childNodeIdForVerbProperties)
    parameters:
    - id: childNodeIdForVerbProperties
      type: System.String
    return:
      type: RW_ModularizationWeapon.FieldReaderDgitList{Verse.VerbProperties}
    content.vb: Public Function VerbPropertiesMultiplier(childNodeIdForVerbProperties As String) As FieldReaderDgitList(Of VerbProperties)
  overload: RW_ModularizationWeapon.CompModularizationWeapon.VerbPropertiesMultiplier*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: RW_ModularizationWeapon.CompModularizationWeapon.ToolsMultiplier(System.String)
  commentId: M:RW_ModularizationWeapon.CompModularizationWeapon.ToolsMultiplier(System.String)
  id: ToolsMultiplier(System.String)
  parent: RW_ModularizationWeapon.CompModularizationWeapon
  langs:
  - csharp
  - vb
  name: ToolsMultiplier(String)
  nameWithType: CompModularizationWeapon.ToolsMultiplier(String)
  fullName: RW_ModularizationWeapon.CompModularizationWeapon.ToolsMultiplier(System.String)
  type: Method
  source:
    remote:
      path: src/RW_ModularizationWeapon/Multiplier/CompModularizationWeapon.cs
      branch: master
      repo: https://github.com/RW-NodeTree/RW_ModularizationWeapon.git
    id: ToolsMultiplier
    path: Multiplier/CompModularizationWeapon.cs
    startLine: 74
  assemblies:
  - RW_ModularizationWeapon
  namespace: RW_ModularizationWeapon
  syntax:
    content: public FieldReaderDgitList<Tool> ToolsMultiplier(string childNodeIdForTool)
    parameters:
    - id: childNodeIdForTool
      type: System.String
    return:
      type: RW_ModularizationWeapon.FieldReaderDgitList{Verse.Tool}
    content.vb: Public Function ToolsMultiplier(childNodeIdForTool As String) As FieldReaderDgitList(Of Tool)
  overload: RW_ModularizationWeapon.CompModularizationWeapon.ToolsMultiplier*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: RW_ModularizationWeapon.CompModularizationWeapon.CompPropertiesMultiplier
  commentId: M:RW_ModularizationWeapon.CompModularizationWeapon.CompPropertiesMultiplier
  id: CompPropertiesMultiplier
  parent: RW_ModularizationWeapon.CompModularizationWeapon
  langs:
  - csharp
  - vb
  name: CompPropertiesMultiplier()
  nameWithType: CompModularizationWeapon.CompPropertiesMultiplier()
  fullName: RW_ModularizationWeapon.CompModularizationWeapon.CompPropertiesMultiplier()
  type: Method
  source:
    remote:
      path: src/RW_ModularizationWeapon/Multiplier/CompModularizationWeapon.cs
      branch: master
      repo: https://github.com/RW-NodeTree/RW_ModularizationWeapon.git
    id: CompPropertiesMultiplier
    path: Multiplier/CompModularizationWeapon.cs
    startLine: 133
  assemblies:
  - RW_ModularizationWeapon
  namespace: RW_ModularizationWeapon
  syntax:
    content: public FieldReaderDgitList<CompProperties> CompPropertiesMultiplier()
    return:
      type: RW_ModularizationWeapon.FieldReaderDgitList{Verse.CompProperties}
    content.vb: Public Function CompPropertiesMultiplier As FieldReaderDgitList(Of CompProperties)
  overload: RW_ModularizationWeapon.CompModularizationWeapon.CompPropertiesMultiplier*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: RW_ModularizationWeapon.CompModularizationWeapon.GetStatMultiplier(RimWorld.StatDef,Verse.Thing)
  commentId: M:RW_ModularizationWeapon.CompModularizationWeapon.GetStatMultiplier(RimWorld.StatDef,Verse.Thing)
  id: GetStatMultiplier(RimWorld.StatDef,Verse.Thing)
  parent: RW_ModularizationWeapon.CompModularizationWeapon
  langs:
  - csharp
  - vb
  name: GetStatMultiplier(StatDef, Thing)
  nameWithType: CompModularizationWeapon.GetStatMultiplier(StatDef, Thing)
  fullName: RW_ModularizationWeapon.CompModularizationWeapon.GetStatMultiplier(RimWorld.StatDef, Verse.Thing)
  type: Method
  source:
    remote:
      path: src/RW_ModularizationWeapon/Multiplier/CompModularizationWeapon.cs
      branch: master
      repo: https://github.com/RW-NodeTree/RW_ModularizationWeapon.git
    id: GetStatMultiplier
    path: Multiplier/CompModularizationWeapon.cs
    startLine: 164
  assemblies:
  - RW_ModularizationWeapon
  namespace: RW_ModularizationWeapon
  syntax:
    content: public float GetStatMultiplier(StatDef statDef, Thing part)
    parameters:
    - id: statDef
      type: RimWorld.StatDef
    - id: part
      type: Verse.Thing
    return:
      type: System.Single
    content.vb: Public Function GetStatMultiplier(statDef As StatDef, part As Thing) As Single
  overload: RW_ModularizationWeapon.CompModularizationWeapon.GetStatMultiplier*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: RW_ModularizationWeapon.CompModularizationWeapon.VerbPropertiesOffseter(System.String)
  commentId: M:RW_ModularizationWeapon.CompModularizationWeapon.VerbPropertiesOffseter(System.String)
  id: VerbPropertiesOffseter(System.String)
  parent: RW_ModularizationWeapon.CompModularizationWeapon
  langs:
  - csharp
  - vb
  name: VerbPropertiesOffseter(String)
  nameWithType: CompModularizationWeapon.VerbPropertiesOffseter(String)
  fullName: RW_ModularizationWeapon.CompModularizationWeapon.VerbPropertiesOffseter(System.String)
  type: Method
  source:
    remote:
      path: src/RW_ModularizationWeapon/Offset/CompModularizationWeapon.cs
      branch: master
      repo: https://github.com/RW-NodeTree/RW_ModularizationWeapon.git
    id: VerbPropertiesOffseter
    path: Offset/CompModularizationWeapon.cs
    startLine: 10
  assemblies:
  - RW_ModularizationWeapon
  namespace: RW_ModularizationWeapon
  syntax:
    content: public FieldReaderDgitList<VerbProperties> VerbPropertiesOffseter(string childNodeIdForVerbProperties)
    parameters:
    - id: childNodeIdForVerbProperties
      type: System.String
    return:
      type: RW_ModularizationWeapon.FieldReaderDgitList{Verse.VerbProperties}
    content.vb: Public Function VerbPropertiesOffseter(childNodeIdForVerbProperties As String) As FieldReaderDgitList(Of VerbProperties)
  overload: RW_ModularizationWeapon.CompModularizationWeapon.VerbPropertiesOffseter*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: RW_ModularizationWeapon.CompModularizationWeapon.ToolsOffseter(System.String)
  commentId: M:RW_ModularizationWeapon.CompModularizationWeapon.ToolsOffseter(System.String)
  id: ToolsOffseter(System.String)
  parent: RW_ModularizationWeapon.CompModularizationWeapon
  langs:
  - csharp
  - vb
  name: ToolsOffseter(String)
  nameWithType: CompModularizationWeapon.ToolsOffseter(String)
  fullName: RW_ModularizationWeapon.CompModularizationWeapon.ToolsOffseter(System.String)
  type: Method
  source:
    remote:
      path: src/RW_ModularizationWeapon/Offset/CompModularizationWeapon.cs
      branch: master
      repo: https://github.com/RW-NodeTree/RW_ModularizationWeapon.git
    id: ToolsOffseter
    path: Offset/CompModularizationWeapon.cs
    startLine: 67
  assemblies:
  - RW_ModularizationWeapon
  namespace: RW_ModularizationWeapon
  syntax:
    content: public FieldReaderDgitList<Tool> ToolsOffseter(string childNodeIdForTool)
    parameters:
    - id: childNodeIdForTool
      type: System.String
    return:
      type: RW_ModularizationWeapon.FieldReaderDgitList{Verse.Tool}
    content.vb: Public Function ToolsOffseter(childNodeIdForTool As String) As FieldReaderDgitList(Of Tool)
  overload: RW_ModularizationWeapon.CompModularizationWeapon.ToolsOffseter*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: RW_ModularizationWeapon.CompModularizationWeapon.CompPropertiesOffseter
  commentId: M:RW_ModularizationWeapon.CompModularizationWeapon.CompPropertiesOffseter
  id: CompPropertiesOffseter
  parent: RW_ModularizationWeapon.CompModularizationWeapon
  langs:
  - csharp
  - vb
  name: CompPropertiesOffseter()
  nameWithType: CompModularizationWeapon.CompPropertiesOffseter()
  fullName: RW_ModularizationWeapon.CompModularizationWeapon.CompPropertiesOffseter()
  type: Method
  source:
    remote:
      path: src/RW_ModularizationWeapon/Offset/CompModularizationWeapon.cs
      branch: master
      repo: https://github.com/RW-NodeTree/RW_ModularizationWeapon.git
    id: CompPropertiesOffseter
    path: Offset/CompModularizationWeapon.cs
    startLine: 123
  assemblies:
  - RW_ModularizationWeapon
  namespace: RW_ModularizationWeapon
  syntax:
    content: public FieldReaderDgitList<CompProperties> CompPropertiesOffseter()
    return:
      type: RW_ModularizationWeapon.FieldReaderDgitList{Verse.CompProperties}
    content.vb: Public Function CompPropertiesOffseter As FieldReaderDgitList(Of CompProperties)
  overload: RW_ModularizationWeapon.CompModularizationWeapon.CompPropertiesOffseter*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: RW_ModularizationWeapon.CompModularizationWeapon.GetStatOffset(RimWorld.StatDef,Verse.Thing)
  commentId: M:RW_ModularizationWeapon.CompModularizationWeapon.GetStatOffset(RimWorld.StatDef,Verse.Thing)
  id: GetStatOffset(RimWorld.StatDef,Verse.Thing)
  parent: RW_ModularizationWeapon.CompModularizationWeapon
  langs:
  - csharp
  - vb
  name: GetStatOffset(StatDef, Thing)
  nameWithType: CompModularizationWeapon.GetStatOffset(StatDef, Thing)
  fullName: RW_ModularizationWeapon.CompModularizationWeapon.GetStatOffset(RimWorld.StatDef, Verse.Thing)
  type: Method
  source:
    remote:
      path: src/RW_ModularizationWeapon/Offset/CompModularizationWeapon.cs
      branch: master
      repo: https://github.com/RW-NodeTree/RW_ModularizationWeapon.git
    id: GetStatOffset
    path: Offset/CompModularizationWeapon.cs
    startLine: 150
  assemblies:
  - RW_ModularizationWeapon
  namespace: RW_ModularizationWeapon
  syntax:
    content: public float GetStatOffset(StatDef statDef, Thing part)
    parameters:
    - id: statDef
      type: RimWorld.StatDef
    - id: part
      type: Verse.Thing
    return:
      type: System.Single
    content.vb: Public Function GetStatOffset(statDef As StatDef, part As Thing) As Single
  overload: RW_ModularizationWeapon.CompModularizationWeapon.GetStatOffset*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: RW_ModularizationWeapon.CompModularizationWeapon.VerbPropertiesObjectPatch(System.String)
  commentId: M:RW_ModularizationWeapon.CompModularizationWeapon.VerbPropertiesObjectPatch(System.String)
  id: VerbPropertiesObjectPatch(System.String)
  parent: RW_ModularizationWeapon.CompModularizationWeapon
  langs:
  - csharp
  - vb
  name: VerbPropertiesObjectPatch(String)
  nameWithType: CompModularizationWeapon.VerbPropertiesObjectPatch(String)
  fullName: RW_ModularizationWeapon.CompModularizationWeapon.VerbPropertiesObjectPatch(System.String)
  type: Method
  source:
    remote:
      path: src/RW_ModularizationWeapon/Patch/CompModularizationWeapon.cs
      branch: master
      repo: https://github.com/RW-NodeTree/RW_ModularizationWeapon.git
    id: VerbPropertiesObjectPatch
    path: Patch/CompModularizationWeapon.cs
    startLine: 8
  assemblies:
  - RW_ModularizationWeapon
  namespace: RW_ModularizationWeapon
  syntax:
    content: public FieldReaderInstList<VerbProperties> VerbPropertiesObjectPatch(string childNodeIdForVerbProperties)
    parameters:
    - id: childNodeIdForVerbProperties
      type: System.String
    return:
      type: RW_ModularizationWeapon.FieldReaderInstList{Verse.VerbProperties}
    content.vb: Public Function VerbPropertiesObjectPatch(childNodeIdForVerbProperties As String) As FieldReaderInstList(Of VerbProperties)
  overload: RW_ModularizationWeapon.CompModularizationWeapon.VerbPropertiesObjectPatch*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: RW_ModularizationWeapon.CompModularizationWeapon.ToolsObjectPatch(System.String)
  commentId: M:RW_ModularizationWeapon.CompModularizationWeapon.ToolsObjectPatch(System.String)
  id: ToolsObjectPatch(System.String)
  parent: RW_ModularizationWeapon.CompModularizationWeapon
  langs:
  - csharp
  - vb
  name: ToolsObjectPatch(String)
  nameWithType: CompModularizationWeapon.ToolsObjectPatch(String)
  fullName: RW_ModularizationWeapon.CompModularizationWeapon.ToolsObjectPatch(System.String)
  type: Method
  source:
    remote:
      path: src/RW_ModularizationWeapon/Patch/CompModularizationWeapon.cs
      branch: master
      repo: https://github.com/RW-NodeTree/RW_ModularizationWeapon.git
    id: ToolsObjectPatch
    path: Patch/CompModularizationWeapon.cs
    startLine: 55
  assemblies:
  - RW_ModularizationWeapon
  namespace: RW_ModularizationWeapon
  syntax:
    content: public FieldReaderInstList<Tool> ToolsObjectPatch(string childNodeIdForTool)
    parameters:
    - id: childNodeIdForTool
      type: System.String
    return:
      type: RW_ModularizationWeapon.FieldReaderInstList{Verse.Tool}
    content.vb: Public Function ToolsObjectPatch(childNodeIdForTool As String) As FieldReaderInstList(Of Tool)
  overload: RW_ModularizationWeapon.CompModularizationWeapon.ToolsObjectPatch*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: RW_ModularizationWeapon.CompModularizationWeapon.CompPropertiesObjectPatch
  commentId: M:RW_ModularizationWeapon.CompModularizationWeapon.CompPropertiesObjectPatch
  id: CompPropertiesObjectPatch
  parent: RW_ModularizationWeapon.CompModularizationWeapon
  langs:
  - csharp
  - vb
  name: CompPropertiesObjectPatch()
  nameWithType: CompModularizationWeapon.CompPropertiesObjectPatch()
  fullName: RW_ModularizationWeapon.CompModularizationWeapon.CompPropertiesObjectPatch()
  type: Method
  source:
    remote:
      path: src/RW_ModularizationWeapon/Patch/CompModularizationWeapon.cs
      branch: master
      repo: https://github.com/RW-NodeTree/RW_ModularizationWeapon.git
    id: CompPropertiesObjectPatch
    path: Patch/CompModularizationWeapon.cs
    startLine: 103
  assemblies:
  - RW_ModularizationWeapon
  namespace: RW_ModularizationWeapon
  syntax:
    content: public FieldReaderInstList<CompProperties> CompPropertiesObjectPatch()
    return:
      type: RW_ModularizationWeapon.FieldReaderInstList{Verse.CompProperties}
    content.vb: Public Function CompPropertiesObjectPatch As FieldReaderInstList(Of CompProperties)
  overload: RW_ModularizationWeapon.CompModularizationWeapon.CompPropertiesObjectPatch*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: RW_ModularizationWeapon.CompModularizationWeapon.VerbPropertiesBoolAndPatch(System.String)
  commentId: M:RW_ModularizationWeapon.CompModularizationWeapon.VerbPropertiesBoolAndPatch(System.String)
  id: VerbPropertiesBoolAndPatch(System.String)
  parent: RW_ModularizationWeapon.CompModularizationWeapon
  langs:
  - csharp
  - vb
  name: VerbPropertiesBoolAndPatch(String)
  nameWithType: CompModularizationWeapon.VerbPropertiesBoolAndPatch(String)
  fullName: RW_ModularizationWeapon.CompModularizationWeapon.VerbPropertiesBoolAndPatch(System.String)
  type: Method
  source:
    remote:
      path: src/RW_ModularizationWeapon/Patch/CompModularizationWeapon.cs
      branch: master
      repo: https://github.com/RW-NodeTree/RW_ModularizationWeapon.git
    id: VerbPropertiesBoolAndPatch
    path: Patch/CompModularizationWeapon.cs
    startLine: 121
  assemblies:
  - RW_ModularizationWeapon
  namespace: RW_ModularizationWeapon
  syntax:
    content: public FieldReaderBoolList<VerbProperties> VerbPropertiesBoolAndPatch(string childNodeIdForVerbProperties)
    parameters:
    - id: childNodeIdForVerbProperties
      type: System.String
    return:
      type: RW_ModularizationWeapon.FieldReaderBoolList{Verse.VerbProperties}
    content.vb: Public Function VerbPropertiesBoolAndPatch(childNodeIdForVerbProperties As String) As FieldReaderBoolList(Of VerbProperties)
  overload: RW_ModularizationWeapon.CompModularizationWeapon.VerbPropertiesBoolAndPatch*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: RW_ModularizationWeapon.CompModularizationWeapon.ToolsBoolAndPatch(System.String)
  commentId: M:RW_ModularizationWeapon.CompModularizationWeapon.ToolsBoolAndPatch(System.String)
  id: ToolsBoolAndPatch(System.String)
  parent: RW_ModularizationWeapon.CompModularizationWeapon
  langs:
  - csharp
  - vb
  name: ToolsBoolAndPatch(String)
  nameWithType: CompModularizationWeapon.ToolsBoolAndPatch(String)
  fullName: RW_ModularizationWeapon.CompModularizationWeapon.ToolsBoolAndPatch(System.String)
  type: Method
  source:
    remote:
      path: src/RW_ModularizationWeapon/Patch/CompModularizationWeapon.cs
      branch: master
      repo: https://github.com/RW-NodeTree/RW_ModularizationWeapon.git
    id: ToolsBoolAndPatch
    path: Patch/CompModularizationWeapon.cs
    startLine: 171
  assemblies:
  - RW_ModularizationWeapon
  namespace: RW_ModularizationWeapon
  syntax:
    content: public FieldReaderBoolList<Tool> ToolsBoolAndPatch(string childNodeIdForTool)
    parameters:
    - id: childNodeIdForTool
      type: System.String
    return:
      type: RW_ModularizationWeapon.FieldReaderBoolList{Verse.Tool}
    content.vb: Public Function ToolsBoolAndPatch(childNodeIdForTool As String) As FieldReaderBoolList(Of Tool)
  overload: RW_ModularizationWeapon.CompModularizationWeapon.ToolsBoolAndPatch*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: RW_ModularizationWeapon.CompModularizationWeapon.CompPropertiesBoolAndPatch
  commentId: M:RW_ModularizationWeapon.CompModularizationWeapon.CompPropertiesBoolAndPatch
  id: CompPropertiesBoolAndPatch
  parent: RW_ModularizationWeapon.CompModularizationWeapon
  langs:
  - csharp
  - vb
  name: CompPropertiesBoolAndPatch()
  nameWithType: CompModularizationWeapon.CompPropertiesBoolAndPatch()
  fullName: RW_ModularizationWeapon.CompModularizationWeapon.CompPropertiesBoolAndPatch()
  type: Method
  source:
    remote:
      path: src/RW_ModularizationWeapon/Patch/CompModularizationWeapon.cs
      branch: master
      repo: https://github.com/RW-NodeTree/RW_ModularizationWeapon.git
    id: CompPropertiesBoolAndPatch
    path: Patch/CompModularizationWeapon.cs
    startLine: 221
  assemblies:
  - RW_ModularizationWeapon
  namespace: RW_ModularizationWeapon
  syntax:
    content: public FieldReaderBoolList<CompProperties> CompPropertiesBoolAndPatch()
    return:
      type: RW_ModularizationWeapon.FieldReaderBoolList{Verse.CompProperties}
    content.vb: Public Function CompPropertiesBoolAndPatch As FieldReaderBoolList(Of CompProperties)
  overload: RW_ModularizationWeapon.CompModularizationWeapon.CompPropertiesBoolAndPatch*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: RW_ModularizationWeapon.CompModularizationWeapon.VerbPropertiesBoolOrPatch(System.String)
  commentId: M:RW_ModularizationWeapon.CompModularizationWeapon.VerbPropertiesBoolOrPatch(System.String)
  id: VerbPropertiesBoolOrPatch(System.String)
  parent: RW_ModularizationWeapon.CompModularizationWeapon
  langs:
  - csharp
  - vb
  name: VerbPropertiesBoolOrPatch(String)
  nameWithType: CompModularizationWeapon.VerbPropertiesBoolOrPatch(String)
  fullName: RW_ModularizationWeapon.CompModularizationWeapon.VerbPropertiesBoolOrPatch(System.String)
  type: Method
  source:
    remote:
      path: src/RW_ModularizationWeapon/Patch/CompModularizationWeapon.cs
      branch: master
      repo: https://github.com/RW-NodeTree/RW_ModularizationWeapon.git
    id: VerbPropertiesBoolOrPatch
    path: Patch/CompModularizationWeapon.cs
    startLine: 240
  assemblies:
  - RW_ModularizationWeapon
  namespace: RW_ModularizationWeapon
  syntax:
    content: public FieldReaderBoolList<VerbProperties> VerbPropertiesBoolOrPatch(string childNodeIdForVerbProperties)
    parameters:
    - id: childNodeIdForVerbProperties
      type: System.String
    return:
      type: RW_ModularizationWeapon.FieldReaderBoolList{Verse.VerbProperties}
    content.vb: Public Function VerbPropertiesBoolOrPatch(childNodeIdForVerbProperties As String) As FieldReaderBoolList(Of VerbProperties)
  overload: RW_ModularizationWeapon.CompModularizationWeapon.VerbPropertiesBoolOrPatch*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: RW_ModularizationWeapon.CompModularizationWeapon.ToolsBoolOrPatch(System.String)
  commentId: M:RW_ModularizationWeapon.CompModularizationWeapon.ToolsBoolOrPatch(System.String)
  id: ToolsBoolOrPatch(System.String)
  parent: RW_ModularizationWeapon.CompModularizationWeapon
  langs:
  - csharp
  - vb
  name: ToolsBoolOrPatch(String)
  nameWithType: CompModularizationWeapon.ToolsBoolOrPatch(String)
  fullName: RW_ModularizationWeapon.CompModularizationWeapon.ToolsBoolOrPatch(System.String)
  type: Method
  source:
    remote:
      path: src/RW_ModularizationWeapon/Patch/CompModularizationWeapon.cs
      branch: master
      repo: https://github.com/RW-NodeTree/RW_ModularizationWeapon.git
    id: ToolsBoolOrPatch
    path: Patch/CompModularizationWeapon.cs
    startLine: 290
  assemblies:
  - RW_ModularizationWeapon
  namespace: RW_ModularizationWeapon
  syntax:
    content: public FieldReaderBoolList<Tool> ToolsBoolOrPatch(string childNodeIdForTool)
    parameters:
    - id: childNodeIdForTool
      type: System.String
    return:
      type: RW_ModularizationWeapon.FieldReaderBoolList{Verse.Tool}
    content.vb: Public Function ToolsBoolOrPatch(childNodeIdForTool As String) As FieldReaderBoolList(Of Tool)
  overload: RW_ModularizationWeapon.CompModularizationWeapon.ToolsBoolOrPatch*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: RW_ModularizationWeapon.CompModularizationWeapon.CompPropertiesBoolOrPatch
  commentId: M:RW_ModularizationWeapon.CompModularizationWeapon.CompPropertiesBoolOrPatch
  id: CompPropertiesBoolOrPatch
  parent: RW_ModularizationWeapon.CompModularizationWeapon
  langs:
  - csharp
  - vb
  name: CompPropertiesBoolOrPatch()
  nameWithType: CompModularizationWeapon.CompPropertiesBoolOrPatch()
  fullName: RW_ModularizationWeapon.CompModularizationWeapon.CompPropertiesBoolOrPatch()
  type: Method
  source:
    remote:
      path: src/RW_ModularizationWeapon/Patch/CompModularizationWeapon.cs
      branch: master
      repo: https://github.com/RW-NodeTree/RW_ModularizationWeapon.git
    id: CompPropertiesBoolOrPatch
    path: Patch/CompModularizationWeapon.cs
    startLine: 340
  assemblies:
  - RW_ModularizationWeapon
  namespace: RW_ModularizationWeapon
  syntax:
    content: public FieldReaderBoolList<CompProperties> CompPropertiesBoolOrPatch()
    return:
      type: RW_ModularizationWeapon.FieldReaderBoolList{Verse.CompProperties}
    content.vb: Public Function CompPropertiesBoolOrPatch As FieldReaderBoolList(Of CompProperties)
  overload: RW_ModularizationWeapon.CompModularizationWeapon.CompPropertiesBoolOrPatch*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: RW_ModularizationWeapon.CompModularizationWeapon.PreStatWorker_GetValueUnfinalized(RimWorld.StatWorker,RimWorld.StatRequest,System.Boolean,System.Collections.Generic.Dictionary{System.String,System.Object})
  commentId: M:RW_ModularizationWeapon.CompModularizationWeapon.PreStatWorker_GetValueUnfinalized(RimWorld.StatWorker,RimWorld.StatRequest,System.Boolean,System.Collections.Generic.Dictionary{System.String,System.Object})
  id: PreStatWorker_GetValueUnfinalized(RimWorld.StatWorker,RimWorld.StatRequest,System.Boolean,System.Collections.Generic.Dictionary{System.String,System.Object})
  parent: RW_ModularizationWeapon.CompModularizationWeapon
  langs:
  - csharp
  - vb
  name: PreStatWorker_GetValueUnfinalized(StatWorker, StatRequest, Boolean, Dictionary<String, Object>)
  nameWithType: CompModularizationWeapon.PreStatWorker_GetValueUnfinalized(StatWorker, StatRequest, Boolean, Dictionary<String, Object>)
  fullName: RW_ModularizationWeapon.CompModularizationWeapon.PreStatWorker_GetValueUnfinalized(RimWorld.StatWorker, RimWorld.StatRequest, System.Boolean, System.Collections.Generic.Dictionary<System.String, System.Object>)
  type: Method
  source:
    remote:
      path: src/RW_ModularizationWeapon/Stat/CompModularizationWeapon.cs
      branch: master
      repo: https://github.com/RW-NodeTree/RW_ModularizationWeapon.git
    id: PreStatWorker_GetValueUnfinalized
    path: Stat/CompModularizationWeapon.cs
    startLine: 92
  assemblies:
  - RW_ModularizationWeapon
  namespace: RW_ModularizationWeapon
  syntax:
    content: protected override bool PreStatWorker_GetValueUnfinalized(StatWorker statWorker, StatRequest req, bool applyFinalProcess, Dictionary<string, object> stats)
    parameters:
    - id: statWorker
      type: RimWorld.StatWorker
    - id: req
      type: RimWorld.StatRequest
    - id: applyFinalProcess
      type: System.Boolean
    - id: stats
      type: System.Collections.Generic.Dictionary{System.String,System.Object}
    return:
      type: System.Boolean
    content.vb: Protected Overrides Function PreStatWorker_GetValueUnfinalized(statWorker As StatWorker, req As StatRequest, applyFinalProcess As Boolean, stats As Dictionary(Of String, Object)) As Boolean
  overload: RW_ModularizationWeapon.CompModularizationWeapon.PreStatWorker_GetValueUnfinalized*
  nameWithType.vb: CompModularizationWeapon.PreStatWorker_GetValueUnfinalized(StatWorker, StatRequest, Boolean, Dictionary(Of String, Object))
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
  fullName.vb: RW_ModularizationWeapon.CompModularizationWeapon.PreStatWorker_GetValueUnfinalized(RimWorld.StatWorker, RimWorld.StatRequest, System.Boolean, System.Collections.Generic.Dictionary(Of System.String, System.Object))
  name.vb: PreStatWorker_GetValueUnfinalized(StatWorker, StatRequest, Boolean, Dictionary(Of String, Object))
- uid: RW_ModularizationWeapon.CompModularizationWeapon.FinalStatWorker_GetValueUnfinalized(RimWorld.StatWorker,RimWorld.StatRequest,System.Boolean,System.Single,System.Collections.Generic.Dictionary{System.String,System.Object},System.Exception)
  commentId: M:RW_ModularizationWeapon.CompModularizationWeapon.FinalStatWorker_GetValueUnfinalized(RimWorld.StatWorker,RimWorld.StatRequest,System.Boolean,System.Single,System.Collections.Generic.Dictionary{System.String,System.Object},System.Exception)
  id: FinalStatWorker_GetValueUnfinalized(RimWorld.StatWorker,RimWorld.StatRequest,System.Boolean,System.Single,System.Collections.Generic.Dictionary{System.String,System.Object},System.Exception)
  parent: RW_ModularizationWeapon.CompModularizationWeapon
  langs:
  - csharp
  - vb
  name: FinalStatWorker_GetValueUnfinalized(StatWorker, StatRequest, Boolean, Single, Dictionary<String, Object>, Exception)
  nameWithType: CompModularizationWeapon.FinalStatWorker_GetValueUnfinalized(StatWorker, StatRequest, Boolean, Single, Dictionary<String, Object>, Exception)
  fullName: RW_ModularizationWeapon.CompModularizationWeapon.FinalStatWorker_GetValueUnfinalized(RimWorld.StatWorker, RimWorld.StatRequest, System.Boolean, System.Single, System.Collections.Generic.Dictionary<System.String, System.Object>, System.Exception)
  type: Method
  source:
    remote:
      path: src/RW_ModularizationWeapon/Stat/CompModularizationWeapon.cs
      branch: master
      repo: https://github.com/RW-NodeTree/RW_ModularizationWeapon.git
    id: FinalStatWorker_GetValueUnfinalized
    path: Stat/CompModularizationWeapon.cs
    startLine: 106
  assemblies:
  - RW_ModularizationWeapon
  namespace: RW_ModularizationWeapon
  syntax:
    content: protected override float FinalStatWorker_GetValueUnfinalized(StatWorker statWorker, StatRequest req, bool applyFinalProcess, float result, Dictionary<string, object> stats, Exception exception)
    parameters:
    - id: statWorker
      type: RimWorld.StatWorker
    - id: req
      type: RimWorld.StatRequest
    - id: applyFinalProcess
      type: System.Boolean
    - id: result
      type: System.Single
    - id: stats
      type: System.Collections.Generic.Dictionary{System.String,System.Object}
    - id: exception
      type: System.Exception
    return:
      type: System.Single
    content.vb: Protected Overrides Function FinalStatWorker_GetValueUnfinalized(statWorker As StatWorker, req As StatRequest, applyFinalProcess As Boolean, result As Single, stats As Dictionary(Of String, Object), exception As Exception) As Single
  overload: RW_ModularizationWeapon.CompModularizationWeapon.FinalStatWorker_GetValueUnfinalized*
  nameWithType.vb: CompModularizationWeapon.FinalStatWorker_GetValueUnfinalized(StatWorker, StatRequest, Boolean, Single, Dictionary(Of String, Object), Exception)
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
  fullName.vb: RW_ModularizationWeapon.CompModularizationWeapon.FinalStatWorker_GetValueUnfinalized(RimWorld.StatWorker, RimWorld.StatRequest, System.Boolean, System.Single, System.Collections.Generic.Dictionary(Of System.String, System.Object), System.Exception)
  name.vb: FinalStatWorker_GetValueUnfinalized(StatWorker, StatRequest, Boolean, Single, Dictionary(Of String, Object), Exception)
- uid: RW_ModularizationWeapon.CompModularizationWeapon.PreStatWorker_FinalizeValue(RimWorld.StatWorker,RimWorld.StatRequest,System.Boolean,System.Single@,System.Collections.Generic.Dictionary{System.String,System.Object})
  commentId: M:RW_ModularizationWeapon.CompModularizationWeapon.PreStatWorker_FinalizeValue(RimWorld.StatWorker,RimWorld.StatRequest,System.Boolean,System.Single@,System.Collections.Generic.Dictionary{System.String,System.Object})
  id: PreStatWorker_FinalizeValue(RimWorld.StatWorker,RimWorld.StatRequest,System.Boolean,System.Single@,System.Collections.Generic.Dictionary{System.String,System.Object})
  parent: RW_ModularizationWeapon.CompModularizationWeapon
  langs:
  - csharp
  - vb
  name: PreStatWorker_FinalizeValue(StatWorker, StatRequest, Boolean, ref Single, Dictionary<String, Object>)
  nameWithType: CompModularizationWeapon.PreStatWorker_FinalizeValue(StatWorker, StatRequest, Boolean, ref Single, Dictionary<String, Object>)
  fullName: RW_ModularizationWeapon.CompModularizationWeapon.PreStatWorker_FinalizeValue(RimWorld.StatWorker, RimWorld.StatRequest, System.Boolean, ref System.Single, System.Collections.Generic.Dictionary<System.String, System.Object>)
  type: Method
  source:
    remote:
      path: src/RW_ModularizationWeapon/Stat/CompModularizationWeapon.cs
      branch: master
      repo: https://github.com/RW-NodeTree/RW_ModularizationWeapon.git
    id: PreStatWorker_FinalizeValue
    path: Stat/CompModularizationWeapon.cs
    startLine: 138
  assemblies:
  - RW_ModularizationWeapon
  namespace: RW_ModularizationWeapon
  syntax:
    content: protected override bool PreStatWorker_FinalizeValue(StatWorker statWorker, StatRequest req, bool applyFinalProcess, ref float result, Dictionary<string, object> stats)
    parameters:
    - id: statWorker
      type: RimWorld.StatWorker
    - id: req
      type: RimWorld.StatRequest
    - id: applyFinalProcess
      type: System.Boolean
    - id: result
      type: System.Single
    - id: stats
      type: System.Collections.Generic.Dictionary{System.String,System.Object}
    return:
      type: System.Boolean
    content.vb: Protected Overrides Function PreStatWorker_FinalizeValue(statWorker As StatWorker, req As StatRequest, applyFinalProcess As Boolean, ByRef result As Single, stats As Dictionary(Of String, Object)) As Boolean
  overload: RW_ModularizationWeapon.CompModularizationWeapon.PreStatWorker_FinalizeValue*
  nameWithType.vb: CompModularizationWeapon.PreStatWorker_FinalizeValue(StatWorker, StatRequest, Boolean, ByRef Single, Dictionary(Of String, Object))
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
  fullName.vb: RW_ModularizationWeapon.CompModularizationWeapon.PreStatWorker_FinalizeValue(RimWorld.StatWorker, RimWorld.StatRequest, System.Boolean, ByRef System.Single, System.Collections.Generic.Dictionary(Of System.String, System.Object))
  name.vb: PreStatWorker_FinalizeValue(StatWorker, StatRequest, Boolean, ByRef Single, Dictionary(Of String, Object))
- uid: RW_ModularizationWeapon.CompModularizationWeapon.FinalStatWorker_FinalizeValue(RimWorld.StatWorker,RimWorld.StatRequest,System.Boolean,System.Single,System.Collections.Generic.Dictionary{System.String,System.Object},System.Exception)
  commentId: M:RW_ModularizationWeapon.CompModularizationWeapon.FinalStatWorker_FinalizeValue(RimWorld.StatWorker,RimWorld.StatRequest,System.Boolean,System.Single,System.Collections.Generic.Dictionary{System.String,System.Object},System.Exception)
  id: FinalStatWorker_FinalizeValue(RimWorld.StatWorker,RimWorld.StatRequest,System.Boolean,System.Single,System.Collections.Generic.Dictionary{System.String,System.Object},System.Exception)
  parent: RW_ModularizationWeapon.CompModularizationWeapon
  langs:
  - csharp
  - vb
  name: FinalStatWorker_FinalizeValue(StatWorker, StatRequest, Boolean, Single, Dictionary<String, Object>, Exception)
  nameWithType: CompModularizationWeapon.FinalStatWorker_FinalizeValue(StatWorker, StatRequest, Boolean, Single, Dictionary<String, Object>, Exception)
  fullName: RW_ModularizationWeapon.CompModularizationWeapon.FinalStatWorker_FinalizeValue(RimWorld.StatWorker, RimWorld.StatRequest, System.Boolean, System.Single, System.Collections.Generic.Dictionary<System.String, System.Object>, System.Exception)
  type: Method
  source:
    remote:
      path: src/RW_ModularizationWeapon/Stat/CompModularizationWeapon.cs
      branch: master
      repo: https://github.com/RW-NodeTree/RW_ModularizationWeapon.git
    id: FinalStatWorker_FinalizeValue
    path: Stat/CompModularizationWeapon.cs
    startLine: 171
  assemblies:
  - RW_ModularizationWeapon
  namespace: RW_ModularizationWeapon
  syntax:
    content: protected override float FinalStatWorker_FinalizeValue(StatWorker statWorker, StatRequest req, bool applyFinalProcess, float result, Dictionary<string, object> stats, Exception exception)
    parameters:
    - id: statWorker
      type: RimWorld.StatWorker
    - id: req
      type: RimWorld.StatRequest
    - id: applyFinalProcess
      type: System.Boolean
    - id: result
      type: System.Single
    - id: stats
      type: System.Collections.Generic.Dictionary{System.String,System.Object}
    - id: exception
      type: System.Exception
    return:
      type: System.Single
    content.vb: Protected Overrides Function FinalStatWorker_FinalizeValue(statWorker As StatWorker, req As StatRequest, applyFinalProcess As Boolean, result As Single, stats As Dictionary(Of String, Object), exception As Exception) As Single
  overload: RW_ModularizationWeapon.CompModularizationWeapon.FinalStatWorker_FinalizeValue*
  nameWithType.vb: CompModularizationWeapon.FinalStatWorker_FinalizeValue(StatWorker, StatRequest, Boolean, Single, Dictionary(Of String, Object), Exception)
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
  fullName.vb: RW_ModularizationWeapon.CompModularizationWeapon.FinalStatWorker_FinalizeValue(RimWorld.StatWorker, RimWorld.StatRequest, System.Boolean, System.Single, System.Collections.Generic.Dictionary(Of System.String, System.Object), System.Exception)
  name.vb: FinalStatWorker_FinalizeValue(StatWorker, StatRequest, Boolean, Single, Dictionary(Of String, Object), Exception)
- uid: RW_ModularizationWeapon.CompModularizationWeapon.PreStatWorker_GetStatDrawEntryLabel(RimWorld.StatWorker,RimWorld.StatDef,System.Single,Verse.ToStringNumberSense,RimWorld.StatRequest,System.Boolean,System.Collections.Generic.Dictionary{System.String,System.Object})
  commentId: M:RW_ModularizationWeapon.CompModularizationWeapon.PreStatWorker_GetStatDrawEntryLabel(RimWorld.StatWorker,RimWorld.StatDef,System.Single,Verse.ToStringNumberSense,RimWorld.StatRequest,System.Boolean,System.Collections.Generic.Dictionary{System.String,System.Object})
  id: PreStatWorker_GetStatDrawEntryLabel(RimWorld.StatWorker,RimWorld.StatDef,System.Single,Verse.ToStringNumberSense,RimWorld.StatRequest,System.Boolean,System.Collections.Generic.Dictionary{System.String,System.Object})
  parent: RW_ModularizationWeapon.CompModularizationWeapon
  langs:
  - csharp
  - vb
  name: PreStatWorker_GetStatDrawEntryLabel(StatWorker, StatDef, Single, ToStringNumberSense, StatRequest, Boolean, Dictionary<String, Object>)
  nameWithType: CompModularizationWeapon.PreStatWorker_GetStatDrawEntryLabel(StatWorker, StatDef, Single, ToStringNumberSense, StatRequest, Boolean, Dictionary<String, Object>)
  fullName: RW_ModularizationWeapon.CompModularizationWeapon.PreStatWorker_GetStatDrawEntryLabel(RimWorld.StatWorker, RimWorld.StatDef, System.Single, Verse.ToStringNumberSense, RimWorld.StatRequest, System.Boolean, System.Collections.Generic.Dictionary<System.String, System.Object>)
  type: Method
  source:
    remote:
      path: src/RW_ModularizationWeapon/Stat/CompModularizationWeapon.cs
      branch: master
      repo: https://github.com/RW-NodeTree/RW_ModularizationWeapon.git
    id: PreStatWorker_GetStatDrawEntryLabel
    path: Stat/CompModularizationWeapon.cs
    startLine: 236
  assemblies:
  - RW_ModularizationWeapon
  namespace: RW_ModularizationWeapon
  syntax:
    content: protected override bool PreStatWorker_GetStatDrawEntryLabel(StatWorker statWorker, StatDef stat, float value, ToStringNumberSense numberSense, StatRequest optionalReq, bool finalized, Dictionary<string, object> stats)
    parameters:
    - id: statWorker
      type: RimWorld.StatWorker
    - id: stat
      type: RimWorld.StatDef
    - id: value
      type: System.Single
    - id: numberSense
      type: Verse.ToStringNumberSense
    - id: optionalReq
      type: RimWorld.StatRequest
    - id: finalized
      type: System.Boolean
    - id: stats
      type: System.Collections.Generic.Dictionary{System.String,System.Object}
    return:
      type: System.Boolean
    content.vb: Protected Overrides Function PreStatWorker_GetStatDrawEntryLabel(statWorker As StatWorker, stat As StatDef, value As Single, numberSense As ToStringNumberSense, optionalReq As StatRequest, finalized As Boolean, stats As Dictionary(Of String, Object)) As Boolean
  overload: RW_ModularizationWeapon.CompModularizationWeapon.PreStatWorker_GetStatDrawEntryLabel*
  nameWithType.vb: CompModularizationWeapon.PreStatWorker_GetStatDrawEntryLabel(StatWorker, StatDef, Single, ToStringNumberSense, StatRequest, Boolean, Dictionary(Of String, Object))
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
  fullName.vb: RW_ModularizationWeapon.CompModularizationWeapon.PreStatWorker_GetStatDrawEntryLabel(RimWorld.StatWorker, RimWorld.StatDef, System.Single, Verse.ToStringNumberSense, RimWorld.StatRequest, System.Boolean, System.Collections.Generic.Dictionary(Of System.String, System.Object))
  name.vb: PreStatWorker_GetStatDrawEntryLabel(StatWorker, StatDef, Single, ToStringNumberSense, StatRequest, Boolean, Dictionary(Of String, Object))
- uid: RW_ModularizationWeapon.CompModularizationWeapon.FinalStatWorker_GetStatDrawEntryLabel(RimWorld.StatWorker,RimWorld.StatDef,System.Single,Verse.ToStringNumberSense,RimWorld.StatRequest,System.Boolean,System.String,System.Collections.Generic.Dictionary{System.String,System.Object},System.Exception)
  commentId: M:RW_ModularizationWeapon.CompModularizationWeapon.FinalStatWorker_GetStatDrawEntryLabel(RimWorld.StatWorker,RimWorld.StatDef,System.Single,Verse.ToStringNumberSense,RimWorld.StatRequest,System.Boolean,System.String,System.Collections.Generic.Dictionary{System.String,System.Object},System.Exception)
  id: FinalStatWorker_GetStatDrawEntryLabel(RimWorld.StatWorker,RimWorld.StatDef,System.Single,Verse.ToStringNumberSense,RimWorld.StatRequest,System.Boolean,System.String,System.Collections.Generic.Dictionary{System.String,System.Object},System.Exception)
  parent: RW_ModularizationWeapon.CompModularizationWeapon
  langs:
  - csharp
  - vb
  name: FinalStatWorker_GetStatDrawEntryLabel(StatWorker, StatDef, Single, ToStringNumberSense, StatRequest, Boolean, String, Dictionary<String, Object>, Exception)
  nameWithType: CompModularizationWeapon.FinalStatWorker_GetStatDrawEntryLabel(StatWorker, StatDef, Single, ToStringNumberSense, StatRequest, Boolean, String, Dictionary<String, Object>, Exception)
  fullName: RW_ModularizationWeapon.CompModularizationWeapon.FinalStatWorker_GetStatDrawEntryLabel(RimWorld.StatWorker, RimWorld.StatDef, System.Single, Verse.ToStringNumberSense, RimWorld.StatRequest, System.Boolean, System.String, System.Collections.Generic.Dictionary<System.String, System.Object>, System.Exception)
  type: Method
  source:
    remote:
      path: src/RW_ModularizationWeapon/Stat/CompModularizationWeapon.cs
      branch: master
      repo: https://github.com/RW-NodeTree/RW_ModularizationWeapon.git
    id: FinalStatWorker_GetStatDrawEntryLabel
    path: Stat/CompModularizationWeapon.cs
    startLine: 255
  assemblies:
  - RW_ModularizationWeapon
  namespace: RW_ModularizationWeapon
  syntax:
    content: protected override string FinalStatWorker_GetStatDrawEntryLabel(StatWorker statWorker, StatDef stat, float value, ToStringNumberSense numberSense, StatRequest optionalReq, bool finalized, string result, Dictionary<string, object> stats, Exception exception)
    parameters:
    - id: statWorker
      type: RimWorld.StatWorker
    - id: stat
      type: RimWorld.StatDef
    - id: value
      type: System.Single
    - id: numberSense
      type: Verse.ToStringNumberSense
    - id: optionalReq
      type: RimWorld.StatRequest
    - id: finalized
      type: System.Boolean
    - id: result
      type: System.String
    - id: stats
      type: System.Collections.Generic.Dictionary{System.String,System.Object}
    - id: exception
      type: System.Exception
    return:
      type: System.String
    content.vb: Protected Overrides Function FinalStatWorker_GetStatDrawEntryLabel(statWorker As StatWorker, stat As StatDef, value As Single, numberSense As ToStringNumberSense, optionalReq As StatRequest, finalized As Boolean, result As String, stats As Dictionary(Of String, Object), exception As Exception) As String
  overload: RW_ModularizationWeapon.CompModularizationWeapon.FinalStatWorker_GetStatDrawEntryLabel*
  nameWithType.vb: CompModularizationWeapon.FinalStatWorker_GetStatDrawEntryLabel(StatWorker, StatDef, Single, ToStringNumberSense, StatRequest, Boolean, String, Dictionary(Of String, Object), Exception)
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
  fullName.vb: RW_ModularizationWeapon.CompModularizationWeapon.FinalStatWorker_GetStatDrawEntryLabel(RimWorld.StatWorker, RimWorld.StatDef, System.Single, Verse.ToStringNumberSense, RimWorld.StatRequest, System.Boolean, System.String, System.Collections.Generic.Dictionary(Of System.String, System.Object), System.Exception)
  name.vb: FinalStatWorker_GetStatDrawEntryLabel(StatWorker, StatDef, Single, ToStringNumberSense, StatRequest, Boolean, String, Dictionary(Of String, Object), Exception)
- uid: RW_ModularizationWeapon.CompModularizationWeapon.PreStatWorker_GetExplanationUnfinalized(RimWorld.StatWorker,RimWorld.StatRequest,Verse.ToStringNumberSense,System.Collections.Generic.Dictionary{System.String,System.Object})
  commentId: M:RW_ModularizationWeapon.CompModularizationWeapon.PreStatWorker_GetExplanationUnfinalized(RimWorld.StatWorker,RimWorld.StatRequest,Verse.ToStringNumberSense,System.Collections.Generic.Dictionary{System.String,System.Object})
  id: PreStatWorker_GetExplanationUnfinalized(RimWorld.StatWorker,RimWorld.StatRequest,Verse.ToStringNumberSense,System.Collections.Generic.Dictionary{System.String,System.Object})
  parent: RW_ModularizationWeapon.CompModularizationWeapon
  langs:
  - csharp
  - vb
  name: PreStatWorker_GetExplanationUnfinalized(StatWorker, StatRequest, ToStringNumberSense, Dictionary<String, Object>)
  nameWithType: CompModularizationWeapon.PreStatWorker_GetExplanationUnfinalized(StatWorker, StatRequest, ToStringNumberSense, Dictionary<String, Object>)
  fullName: RW_ModularizationWeapon.CompModularizationWeapon.PreStatWorker_GetExplanationUnfinalized(RimWorld.StatWorker, RimWorld.StatRequest, Verse.ToStringNumberSense, System.Collections.Generic.Dictionary<System.String, System.Object>)
  type: Method
  source:
    remote:
      path: src/RW_ModularizationWeapon/Stat/CompModularizationWeapon.cs
      branch: master
      repo: https://github.com/RW-NodeTree/RW_ModularizationWeapon.git
    id: PreStatWorker_GetExplanationUnfinalized
    path: Stat/CompModularizationWeapon.cs
    startLine: 292
  assemblies:
  - RW_ModularizationWeapon
  namespace: RW_ModularizationWeapon
  syntax:
    content: protected override bool PreStatWorker_GetExplanationUnfinalized(StatWorker statWorker, StatRequest req, ToStringNumberSense numberSense, Dictionary<string, object> stats)
    parameters:
    - id: statWorker
      type: RimWorld.StatWorker
    - id: req
      type: RimWorld.StatRequest
    - id: numberSense
      type: Verse.ToStringNumberSense
    - id: stats
      type: System.Collections.Generic.Dictionary{System.String,System.Object}
    return:
      type: System.Boolean
    content.vb: Protected Overrides Function PreStatWorker_GetExplanationUnfinalized(statWorker As StatWorker, req As StatRequest, numberSense As ToStringNumberSense, stats As Dictionary(Of String, Object)) As Boolean
  overload: RW_ModularizationWeapon.CompModularizationWeapon.PreStatWorker_GetExplanationUnfinalized*
  nameWithType.vb: CompModularizationWeapon.PreStatWorker_GetExplanationUnfinalized(StatWorker, StatRequest, ToStringNumberSense, Dictionary(Of String, Object))
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
  fullName.vb: RW_ModularizationWeapon.CompModularizationWeapon.PreStatWorker_GetExplanationUnfinalized(RimWorld.StatWorker, RimWorld.StatRequest, Verse.ToStringNumberSense, System.Collections.Generic.Dictionary(Of System.String, System.Object))
  name.vb: PreStatWorker_GetExplanationUnfinalized(StatWorker, StatRequest, ToStringNumberSense, Dictionary(Of String, Object))
- uid: RW_ModularizationWeapon.CompModularizationWeapon.FinalStatWorker_GetExplanationUnfinalized(RimWorld.StatWorker,RimWorld.StatRequest,Verse.ToStringNumberSense,System.String,System.Collections.Generic.Dictionary{System.String,System.Object},System.Exception)
  commentId: M:RW_ModularizationWeapon.CompModularizationWeapon.FinalStatWorker_GetExplanationUnfinalized(RimWorld.StatWorker,RimWorld.StatRequest,Verse.ToStringNumberSense,System.String,System.Collections.Generic.Dictionary{System.String,System.Object},System.Exception)
  id: FinalStatWorker_GetExplanationUnfinalized(RimWorld.StatWorker,RimWorld.StatRequest,Verse.ToStringNumberSense,System.String,System.Collections.Generic.Dictionary{System.String,System.Object},System.Exception)
  parent: RW_ModularizationWeapon.CompModularizationWeapon
  langs:
  - csharp
  - vb
  name: FinalStatWorker_GetExplanationUnfinalized(StatWorker, StatRequest, ToStringNumberSense, String, Dictionary<String, Object>, Exception)
  nameWithType: CompModularizationWeapon.FinalStatWorker_GetExplanationUnfinalized(StatWorker, StatRequest, ToStringNumberSense, String, Dictionary<String, Object>, Exception)
  fullName: RW_ModularizationWeapon.CompModularizationWeapon.FinalStatWorker_GetExplanationUnfinalized(RimWorld.StatWorker, RimWorld.StatRequest, Verse.ToStringNumberSense, System.String, System.Collections.Generic.Dictionary<System.String, System.Object>, System.Exception)
  type: Method
  source:
    remote:
      path: src/RW_ModularizationWeapon/Stat/CompModularizationWeapon.cs
      branch: master
      repo: https://github.com/RW-NodeTree/RW_ModularizationWeapon.git
    id: FinalStatWorker_GetExplanationUnfinalized
    path: Stat/CompModularizationWeapon.cs
    startLine: 311
  assemblies:
  - RW_ModularizationWeapon
  namespace: RW_ModularizationWeapon
  syntax:
    content: protected override string FinalStatWorker_GetExplanationUnfinalized(StatWorker statWorker, StatRequest req, ToStringNumberSense numberSense, string result, Dictionary<string, object> stats, Exception exception)
    parameters:
    - id: statWorker
      type: RimWorld.StatWorker
    - id: req
      type: RimWorld.StatRequest
    - id: numberSense
      type: Verse.ToStringNumberSense
    - id: result
      type: System.String
    - id: stats
      type: System.Collections.Generic.Dictionary{System.String,System.Object}
    - id: exception
      type: System.Exception
    return:
      type: System.String
    content.vb: Protected Overrides Function FinalStatWorker_GetExplanationUnfinalized(statWorker As StatWorker, req As StatRequest, numberSense As ToStringNumberSense, result As String, stats As Dictionary(Of String, Object), exception As Exception) As String
  overload: RW_ModularizationWeapon.CompModularizationWeapon.FinalStatWorker_GetExplanationUnfinalized*
  nameWithType.vb: CompModularizationWeapon.FinalStatWorker_GetExplanationUnfinalized(StatWorker, StatRequest, ToStringNumberSense, String, Dictionary(Of String, Object), Exception)
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
  fullName.vb: RW_ModularizationWeapon.CompModularizationWeapon.FinalStatWorker_GetExplanationUnfinalized(RimWorld.StatWorker, RimWorld.StatRequest, Verse.ToStringNumberSense, System.String, System.Collections.Generic.Dictionary(Of System.String, System.Object), System.Exception)
  name.vb: FinalStatWorker_GetExplanationUnfinalized(StatWorker, StatRequest, ToStringNumberSense, String, Dictionary(Of String, Object), Exception)
- uid: RW_ModularizationWeapon.CompModularizationWeapon.PostStatWorker_GetInfoCardHyperlinks(RimWorld.StatWorker,RimWorld.StatRequest,System.Collections.Generic.IEnumerable{Verse.Dialog_InfoCard.Hyperlink})
  commentId: M:RW_ModularizationWeapon.CompModularizationWeapon.PostStatWorker_GetInfoCardHyperlinks(RimWorld.StatWorker,RimWorld.StatRequest,System.Collections.Generic.IEnumerable{Verse.Dialog_InfoCard.Hyperlink})
  id: PostStatWorker_GetInfoCardHyperlinks(RimWorld.StatWorker,RimWorld.StatRequest,System.Collections.Generic.IEnumerable{Verse.Dialog_InfoCard.Hyperlink})
  parent: RW_ModularizationWeapon.CompModularizationWeapon
  langs:
  - csharp
  - vb
  name: PostStatWorker_GetInfoCardHyperlinks(StatWorker, StatRequest, IEnumerable<Dialog_InfoCard.Hyperlink>)
  nameWithType: CompModularizationWeapon.PostStatWorker_GetInfoCardHyperlinks(StatWorker, StatRequest, IEnumerable<Dialog_InfoCard.Hyperlink>)
  fullName: RW_ModularizationWeapon.CompModularizationWeapon.PostStatWorker_GetInfoCardHyperlinks(RimWorld.StatWorker, RimWorld.StatRequest, System.Collections.Generic.IEnumerable<Verse.Dialog_InfoCard.Hyperlink>)
  type: Method
  source:
    remote:
      path: src/RW_ModularizationWeapon/Stat/CompModularizationWeapon.cs
      branch: master
      repo: https://github.com/RW-NodeTree/RW_ModularizationWeapon.git
    id: PostStatWorker_GetInfoCardHyperlinks
    path: Stat/CompModularizationWeapon.cs
    startLine: 367
  assemblies:
  - RW_ModularizationWeapon
  namespace: RW_ModularizationWeapon
  syntax:
    content: protected override IEnumerable<Dialog_InfoCard.Hyperlink> PostStatWorker_GetInfoCardHyperlinks(StatWorker statWorker, StatRequest statRequest, IEnumerable<Dialog_InfoCard.Hyperlink> result)
    parameters:
    - id: statWorker
      type: RimWorld.StatWorker
    - id: statRequest
      type: RimWorld.StatRequest
    - id: result
      type: System.Collections.Generic.IEnumerable{Verse.Dialog_InfoCard.Hyperlink}
    return:
      type: System.Collections.Generic.IEnumerable{Verse.Dialog_InfoCard.Hyperlink}
    content.vb: Protected Overrides Function PostStatWorker_GetInfoCardHyperlinks(statWorker As StatWorker, statRequest As StatRequest, result As IEnumerable(Of Dialog_InfoCard.Hyperlink)) As IEnumerable(Of Dialog_InfoCard.Hyperlink)
  overload: RW_ModularizationWeapon.CompModularizationWeapon.PostStatWorker_GetInfoCardHyperlinks*
  nameWithType.vb: CompModularizationWeapon.PostStatWorker_GetInfoCardHyperlinks(StatWorker, StatRequest, IEnumerable(Of Dialog_InfoCard.Hyperlink))
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
  fullName.vb: RW_ModularizationWeapon.CompModularizationWeapon.PostStatWorker_GetInfoCardHyperlinks(RimWorld.StatWorker, RimWorld.StatRequest, System.Collections.Generic.IEnumerable(Of Verse.Dialog_InfoCard.Hyperlink))
  name.vb: PostStatWorker_GetInfoCardHyperlinks(StatWorker, StatRequest, IEnumerable(Of Dialog_InfoCard.Hyperlink))
- uid: RW_ModularizationWeapon.CompModularizationWeapon.PostThingDef_SpecialDisplayStats(Verse.ThingDef,RimWorld.StatRequest,System.Collections.Generic.IEnumerable{RimWorld.StatDrawEntry})
  commentId: M:RW_ModularizationWeapon.CompModularizationWeapon.PostThingDef_SpecialDisplayStats(Verse.ThingDef,RimWorld.StatRequest,System.Collections.Generic.IEnumerable{RimWorld.StatDrawEntry})
  id: PostThingDef_SpecialDisplayStats(Verse.ThingDef,RimWorld.StatRequest,System.Collections.Generic.IEnumerable{RimWorld.StatDrawEntry})
  parent: RW_ModularizationWeapon.CompModularizationWeapon
  langs:
  - csharp
  - vb
  name: PostThingDef_SpecialDisplayStats(ThingDef, StatRequest, IEnumerable<StatDrawEntry>)
  nameWithType: CompModularizationWeapon.PostThingDef_SpecialDisplayStats(ThingDef, StatRequest, IEnumerable<StatDrawEntry>)
  fullName: RW_ModularizationWeapon.CompModularizationWeapon.PostThingDef_SpecialDisplayStats(Verse.ThingDef, RimWorld.StatRequest, System.Collections.Generic.IEnumerable<RimWorld.StatDrawEntry>)
  type: Method
  source:
    remote:
      path: src/RW_ModularizationWeapon/Stat/CompModularizationWeapon.cs
      branch: master
      repo: https://github.com/RW-NodeTree/RW_ModularizationWeapon.git
    id: PostThingDef_SpecialDisplayStats
    path: Stat/CompModularizationWeapon.cs
    startLine: 387
  assemblies:
  - RW_ModularizationWeapon
  namespace: RW_ModularizationWeapon
  syntax:
    content: protected override IEnumerable<StatDrawEntry> PostThingDef_SpecialDisplayStats(ThingDef def, StatRequest req, IEnumerable<StatDrawEntry> result)
    parameters:
    - id: def
      type: Verse.ThingDef
    - id: req
      type: RimWorld.StatRequest
    - id: result
      type: System.Collections.Generic.IEnumerable{RimWorld.StatDrawEntry}
    return:
      type: System.Collections.Generic.IEnumerable{RimWorld.StatDrawEntry}
    content.vb: Protected Overrides Function PostThingDef_SpecialDisplayStats(def As ThingDef, req As StatRequest, result As IEnumerable(Of StatDrawEntry)) As IEnumerable(Of StatDrawEntry)
  overload: RW_ModularizationWeapon.CompModularizationWeapon.PostThingDef_SpecialDisplayStats*
  nameWithType.vb: CompModularizationWeapon.PostThingDef_SpecialDisplayStats(ThingDef, StatRequest, IEnumerable(Of StatDrawEntry))
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
  fullName.vb: RW_ModularizationWeapon.CompModularizationWeapon.PostThingDef_SpecialDisplayStats(Verse.ThingDef, RimWorld.StatRequest, System.Collections.Generic.IEnumerable(Of RimWorld.StatDrawEntry))
  name.vb: PostThingDef_SpecialDisplayStats(ThingDef, StatRequest, IEnumerable(Of StatDrawEntry))
- uid: RW_ModularizationWeapon.CompModularizationWeapon.PostStatsReportUtility_StatsToDraw(Verse.Thing,System.Collections.Generic.IEnumerable{RimWorld.StatDrawEntry})
  commentId: M:RW_ModularizationWeapon.CompModularizationWeapon.PostStatsReportUtility_StatsToDraw(Verse.Thing,System.Collections.Generic.IEnumerable{RimWorld.StatDrawEntry})
  id: PostStatsReportUtility_StatsToDraw(Verse.Thing,System.Collections.Generic.IEnumerable{RimWorld.StatDrawEntry})
  parent: RW_ModularizationWeapon.CompModularizationWeapon
  langs:
  - csharp
  - vb
  name: PostStatsReportUtility_StatsToDraw(Thing, IEnumerable<StatDrawEntry>)
  nameWithType: CompModularizationWeapon.PostStatsReportUtility_StatsToDraw(Thing, IEnumerable<StatDrawEntry>)
  fullName: RW_ModularizationWeapon.CompModularizationWeapon.PostStatsReportUtility_StatsToDraw(Verse.Thing, System.Collections.Generic.IEnumerable<RimWorld.StatDrawEntry>)
  type: Method
  source:
    remote:
      path: src/RW_ModularizationWeapon/Stat/CompModularizationWeapon.cs
      branch: master
      repo: https://github.com/RW-NodeTree/RW_ModularizationWeapon.git
    id: PostStatsReportUtility_StatsToDraw
    path: Stat/CompModularizationWeapon.cs
    startLine: 421
  assemblies:
  - RW_ModularizationWeapon
  namespace: RW_ModularizationWeapon
  syntax:
    content: protected override IEnumerable<StatDrawEntry> PostStatsReportUtility_StatsToDraw(Thing thing, IEnumerable<StatDrawEntry> result)
    parameters:
    - id: thing
      type: Verse.Thing
    - id: result
      type: System.Collections.Generic.IEnumerable{RimWorld.StatDrawEntry}
    return:
      type: System.Collections.Generic.IEnumerable{RimWorld.StatDrawEntry}
    content.vb: Protected Overrides Function PostStatsReportUtility_StatsToDraw(thing As Thing, result As IEnumerable(Of StatDrawEntry)) As IEnumerable(Of StatDrawEntry)
  overload: RW_ModularizationWeapon.CompModularizationWeapon.PostStatsReportUtility_StatsToDraw*
  nameWithType.vb: CompModularizationWeapon.PostStatsReportUtility_StatsToDraw(Thing, IEnumerable(Of StatDrawEntry))
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
  fullName.vb: RW_ModularizationWeapon.CompModularizationWeapon.PostStatsReportUtility_StatsToDraw(Verse.Thing, System.Collections.Generic.IEnumerable(Of RimWorld.StatDrawEntry))
  name.vb: PostStatsReportUtility_StatsToDraw(Thing, IEnumerable(Of StatDrawEntry))
- uid: RW_ModularizationWeapon.CompModularizationWeapon.FinalStatWorker_StatOffsetFromGear(Verse.Thing,RimWorld.StatDef,System.Single,System.Collections.Generic.Dictionary{System.String,System.Object},System.Exception)
  commentId: M:RW_ModularizationWeapon.CompModularizationWeapon.FinalStatWorker_StatOffsetFromGear(Verse.Thing,RimWorld.StatDef,System.Single,System.Collections.Generic.Dictionary{System.String,System.Object},System.Exception)
  id: FinalStatWorker_StatOffsetFromGear(Verse.Thing,RimWorld.StatDef,System.Single,System.Collections.Generic.Dictionary{System.String,System.Object},System.Exception)
  parent: RW_ModularizationWeapon.CompModularizationWeapon
  langs:
  - csharp
  - vb
  name: FinalStatWorker_StatOffsetFromGear(Thing, StatDef, Single, Dictionary<String, Object>, Exception)
  nameWithType: CompModularizationWeapon.FinalStatWorker_StatOffsetFromGear(Thing, StatDef, Single, Dictionary<String, Object>, Exception)
  fullName: RW_ModularizationWeapon.CompModularizationWeapon.FinalStatWorker_StatOffsetFromGear(Verse.Thing, RimWorld.StatDef, System.Single, System.Collections.Generic.Dictionary<System.String, System.Object>, System.Exception)
  type: Method
  source:
    remote:
      path: src/RW_ModularizationWeapon/Stat/CompModularizationWeapon.cs
      branch: master
      repo: https://github.com/RW-NodeTree/RW_ModularizationWeapon.git
    id: FinalStatWorker_StatOffsetFromGear
    path: Stat/CompModularizationWeapon.cs
    startLine: 454
  assemblies:
  - RW_ModularizationWeapon
  namespace: RW_ModularizationWeapon
  syntax:
    content: protected override float FinalStatWorker_StatOffsetFromGear(Thing gear, StatDef stat, float result, Dictionary<string, object> stats, Exception exception)
    parameters:
    - id: gear
      type: Verse.Thing
    - id: stat
      type: RimWorld.StatDef
    - id: result
      type: System.Single
    - id: stats
      type: System.Collections.Generic.Dictionary{System.String,System.Object}
    - id: exception
      type: System.Exception
    return:
      type: System.Single
    content.vb: Protected Overrides Function FinalStatWorker_StatOffsetFromGear(gear As Thing, stat As StatDef, result As Single, stats As Dictionary(Of String, Object), exception As Exception) As Single
  overload: RW_ModularizationWeapon.CompModularizationWeapon.FinalStatWorker_StatOffsetFromGear*
  nameWithType.vb: CompModularizationWeapon.FinalStatWorker_StatOffsetFromGear(Thing, StatDef, Single, Dictionary(Of String, Object), Exception)
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
  fullName.vb: RW_ModularizationWeapon.CompModularizationWeapon.FinalStatWorker_StatOffsetFromGear(Verse.Thing, RimWorld.StatDef, System.Single, System.Collections.Generic.Dictionary(Of System.String, System.Object), System.Exception)
  name.vb: FinalStatWorker_StatOffsetFromGear(Thing, StatDef, Single, Dictionary(Of String, Object), Exception)
- uid: RW_ModularizationWeapon.CompModularizationWeapon.FinalStatWorker_GearHasCompsThatAffectStat(Verse.Thing,RimWorld.StatDef,System.Boolean,System.Collections.Generic.Dictionary{System.String,System.Object},System.Exception)
  commentId: M:RW_ModularizationWeapon.CompModularizationWeapon.FinalStatWorker_GearHasCompsThatAffectStat(Verse.Thing,RimWorld.StatDef,System.Boolean,System.Collections.Generic.Dictionary{System.String,System.Object},System.Exception)
  id: FinalStatWorker_GearHasCompsThatAffectStat(Verse.Thing,RimWorld.StatDef,System.Boolean,System.Collections.Generic.Dictionary{System.String,System.Object},System.Exception)
  parent: RW_ModularizationWeapon.CompModularizationWeapon
  langs:
  - csharp
  - vb
  name: FinalStatWorker_GearHasCompsThatAffectStat(Thing, StatDef, Boolean, Dictionary<String, Object>, Exception)
  nameWithType: CompModularizationWeapon.FinalStatWorker_GearHasCompsThatAffectStat(Thing, StatDef, Boolean, Dictionary<String, Object>, Exception)
  fullName: RW_ModularizationWeapon.CompModularizationWeapon.FinalStatWorker_GearHasCompsThatAffectStat(Verse.Thing, RimWorld.StatDef, System.Boolean, System.Collections.Generic.Dictionary<System.String, System.Object>, System.Exception)
  type: Method
  source:
    remote:
      path: src/RW_ModularizationWeapon/Stat/CompModularizationWeapon.cs
      branch: master
      repo: https://github.com/RW-NodeTree/RW_ModularizationWeapon.git
    id: FinalStatWorker_GearHasCompsThatAffectStat
    path: Stat/CompModularizationWeapon.cs
    startLine: 463
  assemblies:
  - RW_ModularizationWeapon
  namespace: RW_ModularizationWeapon
  syntax:
    content: protected override bool FinalStatWorker_GearHasCompsThatAffectStat(Thing gear, StatDef stat, bool result, Dictionary<string, object> stats, Exception exception)
    parameters:
    - id: gear
      type: Verse.Thing
    - id: stat
      type: RimWorld.StatDef
    - id: result
      type: System.Boolean
    - id: stats
      type: System.Collections.Generic.Dictionary{System.String,System.Object}
    - id: exception
      type: System.Exception
    return:
      type: System.Boolean
    content.vb: Protected Overrides Function FinalStatWorker_GearHasCompsThatAffectStat(gear As Thing, stat As StatDef, result As Boolean, stats As Dictionary(Of String, Object), exception As Exception) As Boolean
  overload: RW_ModularizationWeapon.CompModularizationWeapon.FinalStatWorker_GearHasCompsThatAffectStat*
  nameWithType.vb: CompModularizationWeapon.FinalStatWorker_GearHasCompsThatAffectStat(Thing, StatDef, Boolean, Dictionary(Of String, Object), Exception)
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
  fullName.vb: RW_ModularizationWeapon.CompModularizationWeapon.FinalStatWorker_GearHasCompsThatAffectStat(Verse.Thing, RimWorld.StatDef, System.Boolean, System.Collections.Generic.Dictionary(Of System.String, System.Object), System.Exception)
  name.vb: FinalStatWorker_GearHasCompsThatAffectStat(Thing, StatDef, Boolean, Dictionary(Of String, Object), Exception)
- uid: RW_ModularizationWeapon.CompModularizationWeapon.AllowSwap
  commentId: P:RW_ModularizationWeapon.CompModularizationWeapon.AllowSwap
  id: AllowSwap
  parent: RW_ModularizationWeapon.CompModularizationWeapon
  langs:
  - csharp
  - vb
  name: AllowSwap
  nameWithType: CompModularizationWeapon.AllowSwap
  fullName: RW_ModularizationWeapon.CompModularizationWeapon.AllowSwap
  type: Property
  source:
    remote:
      path: src/RW_ModularizationWeapon/TargetPart/CompModularizationWeapon.cs
      branch: master
      repo: https://github.com/RW-NodeTree/RW_ModularizationWeapon.git
    id: AllowSwap
    path: TargetPart/CompModularizationWeapon.cs
    startLine: 8
  assemblies:
  - RW_ModularizationWeapon
  namespace: RW_ModularizationWeapon
  syntax:
    content: public bool AllowSwap { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property AllowSwap As Boolean
  overload: RW_ModularizationWeapon.CompModularizationWeapon.AllowSwap*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: RW_ModularizationWeapon.CompModularizationWeapon.SetTargetPart(System.String,Verse.LocalTargetInfo)
  commentId: M:RW_ModularizationWeapon.CompModularizationWeapon.SetTargetPart(System.String,Verse.LocalTargetInfo)
  id: SetTargetPart(System.String,Verse.LocalTargetInfo)
  parent: RW_ModularizationWeapon.CompModularizationWeapon
  langs:
  - csharp
  - vb
  name: SetTargetPart(String, LocalTargetInfo)
  nameWithType: CompModularizationWeapon.SetTargetPart(String, LocalTargetInfo)
  fullName: RW_ModularizationWeapon.CompModularizationWeapon.SetTargetPart(System.String, Verse.LocalTargetInfo)
  type: Method
  source:
    remote:
      path: src/RW_ModularizationWeapon/TargetPart/CompModularizationWeapon.cs
      branch: master
      repo: https://github.com/RW-NodeTree/RW_ModularizationWeapon.git
    id: SetTargetPart
    path: TargetPart/CompModularizationWeapon.cs
    startLine: 11
  assemblies:
  - RW_ModularizationWeapon
  namespace: RW_ModularizationWeapon
  syntax:
    content: public bool SetTargetPart(string id, LocalTargetInfo targetInfo)
    parameters:
    - id: id
      type: System.String
    - id: targetInfo
      type: Verse.LocalTargetInfo
    return:
      type: System.Boolean
    content.vb: Public Function SetTargetPart(id As String, targetInfo As LocalTargetInfo) As Boolean
  overload: RW_ModularizationWeapon.CompModularizationWeapon.SetTargetPart*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: RW_ModularizationWeapon.CompModularizationWeapon.GetTargetPart(System.String)
  commentId: M:RW_ModularizationWeapon.CompModularizationWeapon.GetTargetPart(System.String)
  id: GetTargetPart(System.String)
  parent: RW_ModularizationWeapon.CompModularizationWeapon
  langs:
  - csharp
  - vb
  name: GetTargetPart(String)
  nameWithType: CompModularizationWeapon.GetTargetPart(String)
  fullName: RW_ModularizationWeapon.CompModularizationWeapon.GetTargetPart(System.String)
  type: Method
  source:
    remote:
      path: src/RW_ModularizationWeapon/TargetPart/CompModularizationWeapon.cs
      branch: master
      repo: https://github.com/RW-NodeTree/RW_ModularizationWeapon.git
    id: GetTargetPart
    path: TargetPart/CompModularizationWeapon.cs
    startLine: 39
  assemblies:
  - RW_ModularizationWeapon
  namespace: RW_ModularizationWeapon
  syntax:
    content: public LocalTargetInfo GetTargetPart(string id)
    parameters:
    - id: id
      type: System.String
    return:
      type: Verse.LocalTargetInfo
    content.vb: Public Function GetTargetPart(id As String) As LocalTargetInfo
  overload: RW_ModularizationWeapon.CompModularizationWeapon.GetTargetPart*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: RW_ModularizationWeapon.CompModularizationWeapon.SwapTargetPart
  commentId: M:RW_ModularizationWeapon.CompModularizationWeapon.SwapTargetPart
  id: SwapTargetPart
  parent: RW_ModularizationWeapon.CompModularizationWeapon
  langs:
  - csharp
  - vb
  name: SwapTargetPart()
  nameWithType: CompModularizationWeapon.SwapTargetPart()
  fullName: RW_ModularizationWeapon.CompModularizationWeapon.SwapTargetPart()
  type: Method
  source:
    remote:
      path: src/RW_ModularizationWeapon/TargetPart/CompModularizationWeapon.cs
      branch: master
      repo: https://github.com/RW-NodeTree/RW_ModularizationWeapon.git
    id: SwapTargetPart
    path: TargetPart/CompModularizationWeapon.cs
    startLine: 45
  assemblies:
  - RW_ModularizationWeapon
  namespace: RW_ModularizationWeapon
  syntax:
    content: public void SwapTargetPart()
    content.vb: Public Sub SwapTargetPart
  overload: RW_ModularizationWeapon.CompModularizationWeapon.SwapTargetPart*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: RW_ModularizationWeapon.CompModularizationWeapon.ClearTargetPart
  commentId: M:RW_ModularizationWeapon.CompModularizationWeapon.ClearTargetPart
  id: ClearTargetPart
  parent: RW_ModularizationWeapon.CompModularizationWeapon
  langs:
  - csharp
  - vb
  name: ClearTargetPart()
  nameWithType: CompModularizationWeapon.ClearTargetPart()
  fullName: RW_ModularizationWeapon.CompModularizationWeapon.ClearTargetPart()
  type: Method
  source:
    remote:
      path: src/RW_ModularizationWeapon/TargetPart/CompModularizationWeapon.cs
      branch: master
      repo: https://github.com/RW-NodeTree/RW_ModularizationWeapon.git
    id: ClearTargetPart
    path: TargetPart/CompModularizationWeapon.cs
    startLine: 70
  assemblies:
  - RW_ModularizationWeapon
  namespace: RW_ModularizationWeapon
  syntax:
    content: public void ClearTargetPart()
    content.vb: Public Sub ClearTargetPart
  overload: RW_ModularizationWeapon.CompModularizationWeapon.ClearTargetPart*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: RW_ModularizationWeapon.CompModularizationWeapon.GetEnumerator
  commentId: M:RW_ModularizationWeapon.CompModularizationWeapon.GetEnumerator
  id: GetEnumerator
  parent: RW_ModularizationWeapon.CompModularizationWeapon
  langs:
  - csharp
  - vb
  name: GetEnumerator()
  nameWithType: CompModularizationWeapon.GetEnumerator()
  fullName: RW_ModularizationWeapon.CompModularizationWeapon.GetEnumerator()
  type: Method
  source:
    remote:
      path: src/RW_ModularizationWeapon/TargetPart/CompModularizationWeapon.cs
      branch: master
      repo: https://github.com/RW-NodeTree/RW_ModularizationWeapon.git
    id: GetEnumerator
    path: TargetPart/CompModularizationWeapon.cs
    startLine: 73
  assemblies:
  - RW_ModularizationWeapon
  namespace: RW_ModularizationWeapon
  syntax:
    content: public IEnumerator<(string, Thing, WeaponAttachmentProperties)> GetEnumerator()
    return:
      type: System.Collections.Generic.IEnumerator{System.ValueTuple{System.String,Verse.Thing,RW_ModularizationWeapon.WeaponAttachmentProperties}}
    content.vb: Public Function GetEnumerator As IEnumerator(Of(String, Thing, WeaponAttachmentProperties)(Of String , Thing, WeaponAttachmentProperties))
  overload: RW_ModularizationWeapon.CompModularizationWeapon.GetEnumerator*
  implements:
  - System.Collections.Generic.IEnumerable{System.ValueTuple{System.String,Verse.Thing,RW_ModularizationWeapon.WeaponAttachmentProperties}}.GetEnumerator
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: RW_ModularizationWeapon.CompModularizationWeapon.System#Collections#IEnumerable#GetEnumerator
  commentId: M:RW_ModularizationWeapon.CompModularizationWeapon.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: RW_ModularizationWeapon.CompModularizationWeapon
  langs:
  - csharp
  - vb
  name: IEnumerable.GetEnumerator()
  nameWithType: CompModularizationWeapon.IEnumerable.GetEnumerator()
  fullName: RW_ModularizationWeapon.CompModularizationWeapon.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  source:
    remote:
      path: src/RW_ModularizationWeapon/TargetPart/CompModularizationWeapon.cs
      branch: master
      repo: https://github.com/RW-NodeTree/RW_ModularizationWeapon.git
    id: System.Collections.IEnumerable.GetEnumerator
    path: TargetPart/CompModularizationWeapon.cs
    startLine: 84
  assemblies:
  - RW_ModularizationWeapon
  namespace: RW_ModularizationWeapon
  syntax:
    content: IEnumerator IEnumerable.GetEnumerator()
    return:
      type: System.Collections.IEnumerator
    content.vb: Function System.Collections.IEnumerable.GetEnumerator As IEnumerator Implements IEnumerable.GetEnumerator
  overload: RW_ModularizationWeapon.CompModularizationWeapon.System#Collections#IEnumerable#GetEnumerator*
  implements:
  - System.Collections.IEnumerable.GetEnumerator
  nameWithType.vb: CompModularizationWeapon.System.Collections.IEnumerable.GetEnumerator()
  name.vb: System.Collections.IEnumerable.GetEnumerator()
- uid: RW_ModularizationWeapon.CompModularizationWeapon.GetChildTreeViewOpend(System.String)
  commentId: M:RW_ModularizationWeapon.CompModularizationWeapon.GetChildTreeViewOpend(System.String)
  id: GetChildTreeViewOpend(System.String)
  parent: RW_ModularizationWeapon.CompModularizationWeapon
  langs:
  - csharp
  - vb
  name: GetChildTreeViewOpend(String)
  nameWithType: CompModularizationWeapon.GetChildTreeViewOpend(String)
  fullName: RW_ModularizationWeapon.CompModularizationWeapon.GetChildTreeViewOpend(System.String)
  type: Method
  source:
    remote:
      path: src/RW_ModularizationWeapon/UI/CompModularizationWeapon.cs
      branch: master
      repo: https://github.com/RW-NodeTree/RW_ModularizationWeapon.git
    id: GetChildTreeViewOpend
    path: UI/CompModularizationWeapon.cs
    startLine: 10
  assemblies:
  - RW_ModularizationWeapon
  namespace: RW_ModularizationWeapon
  syntax:
    content: public bool GetChildTreeViewOpend(string id)
    parameters:
    - id: id
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Function GetChildTreeViewOpend(id As String) As Boolean
  overload: RW_ModularizationWeapon.CompModularizationWeapon.GetChildTreeViewOpend*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: RW_ModularizationWeapon.CompModularizationWeapon.SetChildTreeViewOpend(System.String,System.Boolean)
  commentId: M:RW_ModularizationWeapon.CompModularizationWeapon.SetChildTreeViewOpend(System.String,System.Boolean)
  id: SetChildTreeViewOpend(System.String,System.Boolean)
  parent: RW_ModularizationWeapon.CompModularizationWeapon
  langs:
  - csharp
  - vb
  name: SetChildTreeViewOpend(String, Boolean)
  nameWithType: CompModularizationWeapon.SetChildTreeViewOpend(String, Boolean)
  fullName: RW_ModularizationWeapon.CompModularizationWeapon.SetChildTreeViewOpend(System.String, System.Boolean)
  type: Method
  source:
    remote:
      path: src/RW_ModularizationWeapon/UI/CompModularizationWeapon.cs
      branch: master
      repo: https://github.com/RW-NodeTree/RW_ModularizationWeapon.git
    id: SetChildTreeViewOpend
    path: UI/CompModularizationWeapon.cs
    startLine: 22
  assemblies:
  - RW_ModularizationWeapon
  namespace: RW_ModularizationWeapon
  syntax:
    content: public void SetChildTreeViewOpend(string id, bool value)
    parameters:
    - id: id
      type: System.String
    - id: value
      type: System.Boolean
    content.vb: Public Sub SetChildTreeViewOpend(id As String, value As Boolean)
  overload: RW_ModularizationWeapon.CompModularizationWeapon.SetChildTreeViewOpend*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: RW_ModularizationWeapon.CompModularizationWeapon.TreeViewDrawSize(UnityEngine.Vector2)
  commentId: M:RW_ModularizationWeapon.CompModularizationWeapon.TreeViewDrawSize(UnityEngine.Vector2)
  id: TreeViewDrawSize(UnityEngine.Vector2)
  parent: RW_ModularizationWeapon.CompModularizationWeapon
  langs:
  - csharp
  - vb
  name: TreeViewDrawSize(Vector2)
  nameWithType: CompModularizationWeapon.TreeViewDrawSize(Vector2)
  fullName: RW_ModularizationWeapon.CompModularizationWeapon.TreeViewDrawSize(UnityEngine.Vector2)
  type: Method
  source:
    remote:
      path: src/RW_ModularizationWeapon/UI/CompModularizationWeapon.cs
      branch: master
      repo: https://github.com/RW-NodeTree/RW_ModularizationWeapon.git
    id: TreeViewDrawSize
    path: UI/CompModularizationWeapon.cs
    startLine: 25
  assemblies:
  - RW_ModularizationWeapon
  namespace: RW_ModularizationWeapon
  syntax:
    content: public Vector2 TreeViewDrawSize(Vector2 BlockSize)
    parameters:
    - id: BlockSize
      type: UnityEngine.Vector2
    return:
      type: UnityEngine.Vector2
    content.vb: Public Function TreeViewDrawSize(BlockSize As Vector2) As Vector2
  overload: RW_ModularizationWeapon.CompModularizationWeapon.TreeViewDrawSize*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: RW_ModularizationWeapon.CompModularizationWeapon.DrawChildTreeView(UnityEngine.Vector2,System.Single,System.Single,System.Single,System.Single,System.Action{System.String,Verse.Thing,RW_ModularizationWeapon.CompModularizationWeapon},System.Action{System.String,Verse.Thing,RW_ModularizationWeapon.CompModularizationWeapon},System.Action{System.String,Verse.Thing,RW_ModularizationWeapon.CompModularizationWeapon},System.Collections.Generic.HashSet{System.ValueTuple{System.String,RW_ModularizationWeapon.CompModularizationWeapon}})
  commentId: M:RW_ModularizationWeapon.CompModularizationWeapon.DrawChildTreeView(UnityEngine.Vector2,System.Single,System.Single,System.Single,System.Single,System.Action{System.String,Verse.Thing,RW_ModularizationWeapon.CompModularizationWeapon},System.Action{System.String,Verse.Thing,RW_ModularizationWeapon.CompModularizationWeapon},System.Action{System.String,Verse.Thing,RW_ModularizationWeapon.CompModularizationWeapon},System.Collections.Generic.HashSet{System.ValueTuple{System.String,RW_ModularizationWeapon.CompModularizationWeapon}})
  id: DrawChildTreeView(UnityEngine.Vector2,System.Single,System.Single,System.Single,System.Single,System.Action{System.String,Verse.Thing,RW_ModularizationWeapon.CompModularizationWeapon},System.Action{System.String,Verse.Thing,RW_ModularizationWeapon.CompModularizationWeapon},System.Action{System.String,Verse.Thing,RW_ModularizationWeapon.CompModularizationWeapon},System.Collections.Generic.HashSet{System.ValueTuple{System.String,RW_ModularizationWeapon.CompModularizationWeapon}})
  parent: RW_ModularizationWeapon.CompModularizationWeapon
  langs:
  - csharp
  - vb
  name: DrawChildTreeView(Vector2, Single, Single, Single, Single, Action<String, Thing, CompModularizationWeapon>, Action<String, Thing, CompModularizationWeapon>, Action<String, Thing, CompModularizationWeapon>, HashSet<(String, CompModularizationWeapon)>)
  nameWithType: CompModularizationWeapon.DrawChildTreeView(Vector2, Single, Single, Single, Single, Action<String, Thing, CompModularizationWeapon>, Action<String, Thing, CompModularizationWeapon>, Action<String, Thing, CompModularizationWeapon>, HashSet<(String, CompModularizationWeapon)>)
  fullName: RW_ModularizationWeapon.CompModularizationWeapon.DrawChildTreeView(UnityEngine.Vector2, System.Single, System.Single, System.Single, System.Single, System.Action<System.String, Verse.Thing, RW_ModularizationWeapon.CompModularizationWeapon>, System.Action<System.String, Verse.Thing, RW_ModularizationWeapon.CompModularizationWeapon>, System.Action<System.String, Verse.Thing, RW_ModularizationWeapon.CompModularizationWeapon>, System.Collections.Generic.HashSet<System.ValueTuple<System.String, RW_ModularizationWeapon.CompModularizationWeapon>>)
  type: Method
  source:
    remote:
      path: src/RW_ModularizationWeapon/UI/CompModularizationWeapon.cs
      branch: master
      repo: https://github.com/RW-NodeTree/RW_ModularizationWeapon.git
    id: DrawChildTreeView
    path: UI/CompModularizationWeapon.cs
    startLine: 46
  assemblies:
  - RW_ModularizationWeapon
  namespace: RW_ModularizationWeapon
  syntax:
    content: public float DrawChildTreeView(Vector2 DrawPos, float ScrollPos, float BlockHeight, float ContainerWidth, float ContainerHeight, Action<string, Thing, CompModularizationWeapon> openEvent, Action<string, Thing, CompModularizationWeapon> closeEvent, Action<string, Thing, CompModularizationWeapon> iconEvent, HashSet<(string, CompModularizationWeapon)> Selected)
    parameters:
    - id: DrawPos
      type: UnityEngine.Vector2
    - id: ScrollPos
      type: System.Single
    - id: BlockHeight
      type: System.Single
    - id: ContainerWidth
      type: System.Single
    - id: ContainerHeight
      type: System.Single
    - id: openEvent
      type: System.Action{System.String,Verse.Thing,RW_ModularizationWeapon.CompModularizationWeapon}
    - id: closeEvent
      type: System.Action{System.String,Verse.Thing,RW_ModularizationWeapon.CompModularizationWeapon}
    - id: iconEvent
      type: System.Action{System.String,Verse.Thing,RW_ModularizationWeapon.CompModularizationWeapon}
    - id: Selected
      type: System.Collections.Generic.HashSet{System.ValueTuple{System.String,RW_ModularizationWeapon.CompModularizationWeapon}}
    return:
      type: System.Single
    content.vb: Public Function DrawChildTreeView(DrawPos As Vector2, ScrollPos As Single, BlockHeight As Single, ContainerWidth As Single, ContainerHeight As Single, openEvent As Action(Of String, Thing, CompModularizationWeapon), closeEvent As Action(Of String, Thing, CompModularizationWeapon), iconEvent As Action(Of String, Thing, CompModularizationWeapon), Selected As HashSet(Of(String, CompModularizationWeapon)(Of String , CompModularizationWeapon))) As Single
  overload: RW_ModularizationWeapon.CompModularizationWeapon.DrawChildTreeView*
  nameWithType.vb: CompModularizationWeapon.DrawChildTreeView(Vector2, Single, Single, Single, Single, Action(Of String, Thing, CompModularizationWeapon), Action(Of String, Thing, CompModularizationWeapon), Action(Of String, Thing, CompModularizationWeapon), HashSet(Of (String, CompModularizationWeapon)(Of String, CompModularizationWeapon)))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: RW_ModularizationWeapon.CompModularizationWeapon.DrawChildTreeView(UnityEngine.Vector2, System.Single, System.Single, System.Single, System.Single, System.Action(Of System.String, Verse.Thing, RW_ModularizationWeapon.CompModularizationWeapon), System.Action(Of System.String, Verse.Thing, RW_ModularizationWeapon.CompModularizationWeapon), System.Action(Of System.String, Verse.Thing, RW_ModularizationWeapon.CompModularizationWeapon), System.Collections.Generic.HashSet(Of System.ValueTuple(Of System.String, RW_ModularizationWeapon.CompModularizationWeapon)))
  name.vb: DrawChildTreeView(Vector2, Single, Single, Single, Single, Action(Of String, Thing, CompModularizationWeapon), Action(Of String, Thing, CompModularizationWeapon), Action(Of String, Thing, CompModularizationWeapon), HashSet(Of (String, CompModularizationWeapon)(Of String, CompModularizationWeapon)))
- uid: RW_ModularizationWeapon.CompModularizationWeapon.VerbPropertiesRegiestInfoUpadte(System.Type,System.Collections.Generic.List{VerbPropertiesRegiestInfo})
  commentId: M:RW_ModularizationWeapon.CompModularizationWeapon.VerbPropertiesRegiestInfoUpadte(System.Type,System.Collections.Generic.List{VerbPropertiesRegiestInfo})
  id: VerbPropertiesRegiestInfoUpadte(System.Type,System.Collections.Generic.List{VerbPropertiesRegiestInfo})
  parent: RW_ModularizationWeapon.CompModularizationWeapon
  langs:
  - csharp
  - vb
  name: VerbPropertiesRegiestInfoUpadte(Type, List<VerbPropertiesRegiestInfo>)
  nameWithType: CompModularizationWeapon.VerbPropertiesRegiestInfoUpadte(Type, List<VerbPropertiesRegiestInfo>)
  fullName: RW_ModularizationWeapon.CompModularizationWeapon.VerbPropertiesRegiestInfoUpadte(System.Type, System.Collections.Generic.List<VerbPropertiesRegiestInfo>)
  type: Method
  source:
    remote:
      path: src/RW_ModularizationWeapon/Verb/CompModularizationWeapon.cs
      branch: master
      repo: https://github.com/RW-NodeTree/RW_ModularizationWeapon.git
    id: VerbPropertiesRegiestInfoUpadte
    path: Verb/CompModularizationWeapon.cs
    startLine: 47
  assemblies:
  - RW_ModularizationWeapon
  namespace: RW_ModularizationWeapon
  syntax:
    content: protected override List<VerbPropertiesRegiestInfo> VerbPropertiesRegiestInfoUpadte(Type ownerType, List<VerbPropertiesRegiestInfo> result)
    parameters:
    - id: ownerType
      type: System.Type
    - id: result
      type: System.Collections.Generic.List{VerbPropertiesRegiestInfo}
    return:
      type: System.Collections.Generic.List{VerbPropertiesRegiestInfo}
    content.vb: Protected Overrides Function VerbPropertiesRegiestInfoUpadte(ownerType As Type, result As List(Of VerbPropertiesRegiestInfo)) As List(Of VerbPropertiesRegiestInfo)
  overload: RW_ModularizationWeapon.CompModularizationWeapon.VerbPropertiesRegiestInfoUpadte*
  nameWithType.vb: CompModularizationWeapon.VerbPropertiesRegiestInfoUpadte(Type, List(Of VerbPropertiesRegiestInfo))
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
  fullName.vb: RW_ModularizationWeapon.CompModularizationWeapon.VerbPropertiesRegiestInfoUpadte(System.Type, System.Collections.Generic.List(Of VerbPropertiesRegiestInfo))
  name.vb: VerbPropertiesRegiestInfoUpadte(Type, List(Of VerbPropertiesRegiestInfo))
- uid: RW_ModularizationWeapon.CompModularizationWeapon.VerbToolRegiestInfoUpdate(System.Type,System.Collections.Generic.List{VerbToolRegiestInfo})
  commentId: M:RW_ModularizationWeapon.CompModularizationWeapon.VerbToolRegiestInfoUpdate(System.Type,System.Collections.Generic.List{VerbToolRegiestInfo})
  id: VerbToolRegiestInfoUpdate(System.Type,System.Collections.Generic.List{VerbToolRegiestInfo})
  parent: RW_ModularizationWeapon.CompModularizationWeapon
  langs:
  - csharp
  - vb
  name: VerbToolRegiestInfoUpdate(Type, List<VerbToolRegiestInfo>)
  nameWithType: CompModularizationWeapon.VerbToolRegiestInfoUpdate(Type, List<VerbToolRegiestInfo>)
  fullName: RW_ModularizationWeapon.CompModularizationWeapon.VerbToolRegiestInfoUpdate(System.Type, System.Collections.Generic.List<VerbToolRegiestInfo>)
  type: Method
  source:
    remote:
      path: src/RW_ModularizationWeapon/Verb/CompModularizationWeapon.cs
      branch: master
      repo: https://github.com/RW-NodeTree/RW_ModularizationWeapon.git
    id: VerbToolRegiestInfoUpdate
    path: Verb/CompModularizationWeapon.cs
    startLine: 159
  assemblies:
  - RW_ModularizationWeapon
  namespace: RW_ModularizationWeapon
  syntax:
    content: protected override List<VerbToolRegiestInfo> VerbToolRegiestInfoUpdate(Type ownerType, List<VerbToolRegiestInfo> result)
    parameters:
    - id: ownerType
      type: System.Type
    - id: result
      type: System.Collections.Generic.List{VerbToolRegiestInfo}
    return:
      type: System.Collections.Generic.List{VerbToolRegiestInfo}
    content.vb: Protected Overrides Function VerbToolRegiestInfoUpdate(ownerType As Type, result As List(Of VerbToolRegiestInfo)) As List(Of VerbToolRegiestInfo)
  overload: RW_ModularizationWeapon.CompModularizationWeapon.VerbToolRegiestInfoUpdate*
  nameWithType.vb: CompModularizationWeapon.VerbToolRegiestInfoUpdate(Type, List(Of VerbToolRegiestInfo))
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
  fullName.vb: RW_ModularizationWeapon.CompModularizationWeapon.VerbToolRegiestInfoUpdate(System.Type, System.Collections.Generic.List(Of VerbToolRegiestInfo))
  name.vb: VerbToolRegiestInfoUpdate(Type, List(Of VerbToolRegiestInfo))
references:
- uid: RW_ModularizationWeapon
  commentId: N:RW_ModularizationWeapon
  name: RW_ModularizationWeapon
  nameWithType: RW_ModularizationWeapon
  fullName: RW_ModularizationWeapon
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Collections.Generic.IEnumerable{System.ValueTuple{System.String,Verse.Thing,RW_ModularizationWeapon.WeaponAttachmentProperties}}
  commentId: T:System.Collections.Generic.IEnumerable{System.ValueTuple{System.String,Verse.Thing,RW_ModularizationWeapon.WeaponAttachmentProperties}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<(T1, T2, T3)<String, Thing, WeaponAttachmentProperties>>
  nameWithType: IEnumerable<(T1, T2, T3)<String, Thing, WeaponAttachmentProperties>>
  fullName: System.Collections.Generic.IEnumerable<System.ValueTuple<System.String, Verse.Thing, RW_ModularizationWeapon.WeaponAttachmentProperties>>
  nameWithType.vb: IEnumerable(Of (T1, T2, T3)(Of String, Thing, WeaponAttachmentProperties))
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.ValueTuple(Of System.String, Verse.Thing, RW_ModularizationWeapon.WeaponAttachmentProperties))
  name.vb: IEnumerable(Of (T1, T2, T3)(Of String, Thing, WeaponAttachmentProperties))
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.ValueTuple`3
    name: (T1, T2, T3)
    nameWithType: (T1, T2, T3)
    fullName: System.ValueTuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Verse.Thing
    name: Thing
    nameWithType: Thing
    fullName: Verse.Thing
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: RW_ModularizationWeapon.WeaponAttachmentProperties
    name: WeaponAttachmentProperties
    nameWithType: WeaponAttachmentProperties
    fullName: RW_ModularizationWeapon.WeaponAttachmentProperties
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.ValueTuple`3
    name: (T1, T2, T3)
    nameWithType: (T1, T2, T3)
    fullName: System.ValueTuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Verse.Thing
    name: Thing
    nameWithType: Thing
    fullName: Verse.Thing
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: RW_ModularizationWeapon.WeaponAttachmentProperties
    name: WeaponAttachmentProperties
    nameWithType: WeaponAttachmentProperties
    fullName: RW_ModularizationWeapon.WeaponAttachmentProperties
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IEnumerable
  commentId: T:System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Object.RW_ModularizationWeapon.Tools.ToolsFunction.LogAllField
  commentId: M:RW_ModularizationWeapon.Tools.ToolsFunction.LogAllField(System.Object)
  parent: RW_ModularizationWeapon.Tools.ToolsFunction
  definition: RW_ModularizationWeapon.Tools.ToolsFunction.LogAllField(System.Object)
  name: LogAllField()
  nameWithType: ToolsFunction.LogAllField()
  fullName: RW_ModularizationWeapon.Tools.ToolsFunction.LogAllField()
  spec.csharp:
  - uid: RW_ModularizationWeapon.Tools.ToolsFunction.LogAllField
    name: LogAllField
    nameWithType: ToolsFunction.LogAllField
    fullName: RW_ModularizationWeapon.Tools.ToolsFunction.LogAllField
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: RW_ModularizationWeapon.Tools.ToolsFunction.LogAllField
    name: LogAllField
    nameWithType: ToolsFunction.LogAllField
    fullName: RW_ModularizationWeapon.Tools.ToolsFunction.LogAllField
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: true
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
- uid: RW_ModularizationWeapon.Tools.ToolsFunction.LogAllField(System.Object)
  commentId: M:RW_ModularizationWeapon.Tools.ToolsFunction.LogAllField(System.Object)
  isExternal: true
  name: LogAllField(Object)
  nameWithType: ToolsFunction.LogAllField(Object)
  fullName: RW_ModularizationWeapon.Tools.ToolsFunction.LogAllField(System.Object)
  spec.csharp:
  - uid: RW_ModularizationWeapon.Tools.ToolsFunction.LogAllField(System.Object)
    name: LogAllField
    nameWithType: ToolsFunction.LogAllField
    fullName: RW_ModularizationWeapon.Tools.ToolsFunction.LogAllField
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: RW_ModularizationWeapon.Tools.ToolsFunction.LogAllField(System.Object)
    name: LogAllField
    nameWithType: ToolsFunction.LogAllField
    fullName: RW_ModularizationWeapon.Tools.ToolsFunction.LogAllField
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: RW_ModularizationWeapon.Tools.ToolsFunction
  commentId: T:RW_ModularizationWeapon.Tools.ToolsFunction
  parent: RW_ModularizationWeapon.Tools
  name: ToolsFunction
  nameWithType: ToolsFunction
  fullName: RW_ModularizationWeapon.Tools.ToolsFunction
- uid: RW_ModularizationWeapon.Tools
  commentId: N:RW_ModularizationWeapon.Tools
  name: RW_ModularizationWeapon.Tools
  nameWithType: RW_ModularizationWeapon.Tools
  fullName: RW_ModularizationWeapon.Tools
- uid: RW_ModularizationWeapon.CompModularizationWeapon.Props*
  commentId: Overload:RW_ModularizationWeapon.CompModularizationWeapon.Props
  name: Props
  nameWithType: CompModularizationWeapon.Props
  fullName: RW_ModularizationWeapon.CompModularizationWeapon.Props
- uid: RW_ModularizationWeapon.CompProperties_ModularizationWeapon
  commentId: T:RW_ModularizationWeapon.CompProperties_ModularizationWeapon
  parent: RW_ModularizationWeapon
  name: CompProperties_ModularizationWeapon
  nameWithType: CompProperties_ModularizationWeapon
  fullName: RW_ModularizationWeapon.CompProperties_ModularizationWeapon
- uid: RW_ModularizationWeapon.CompModularizationWeapon.ParentPart*
  commentId: Overload:RW_ModularizationWeapon.CompModularizationWeapon.ParentPart
  name: ParentPart
  nameWithType: CompModularizationWeapon.ParentPart
  fullName: RW_ModularizationWeapon.CompModularizationWeapon.ParentPart
- uid: RW_ModularizationWeapon.CompModularizationWeapon
  commentId: T:RW_ModularizationWeapon.CompModularizationWeapon
  parent: RW_ModularizationWeapon
  name: CompModularizationWeapon
  nameWithType: CompModularizationWeapon
  fullName: RW_ModularizationWeapon.CompModularizationWeapon
- uid: RW_ModularizationWeapon.CompModularizationWeapon.RootPart*
  commentId: Overload:RW_ModularizationWeapon.CompModularizationWeapon.RootPart
  name: RootPart
  nameWithType: CompModularizationWeapon.RootPart
  fullName: RW_ModularizationWeapon.CompModularizationWeapon.RootPart
- uid: RW_ModularizationWeapon.CompModularizationWeapon.PartIDs*
  commentId: Overload:RW_ModularizationWeapon.CompModularizationWeapon.PartIDs
  name: PartIDs
  nameWithType: CompModularizationWeapon.PartIDs
  fullName: RW_ModularizationWeapon.CompModularizationWeapon.PartIDs
- uid: System.Collections.Generic.HashSet{System.String}
  commentId: T:System.Collections.Generic.HashSet{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.HashSet`1
  name: HashSet<String>
  nameWithType: HashSet<String>
  fullName: System.Collections.Generic.HashSet<System.String>
  nameWithType.vb: HashSet(Of String)
  fullName.vb: System.Collections.Generic.HashSet(Of System.String)
  name.vb: HashSet(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    nameWithType: HashSet
    fullName: System.Collections.Generic.HashSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    nameWithType: HashSet
    fullName: System.Collections.Generic.HashSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.HashSet`1
  commentId: T:System.Collections.Generic.HashSet`1
  isExternal: true
  name: HashSet<T>
  nameWithType: HashSet<T>
  fullName: System.Collections.Generic.HashSet<T>
  nameWithType.vb: HashSet(Of T)
  fullName.vb: System.Collections.Generic.HashSet(Of T)
  name.vb: HashSet(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    nameWithType: HashSet
    fullName: System.Collections.Generic.HashSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    nameWithType: HashSet
    fullName: System.Collections.Generic.HashSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: RW_ModularizationWeapon.CompModularizationWeapon.Occupyed*
  commentId: Overload:RW_ModularizationWeapon.CompModularizationWeapon.Occupyed
  name: Occupyed
  nameWithType: CompModularizationWeapon.Occupyed
  fullName: RW_ModularizationWeapon.CompModularizationWeapon.Occupyed
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: RW_ModularizationWeapon.CompModularizationWeapon.PostPostMake*
  commentId: Overload:RW_ModularizationWeapon.CompModularizationWeapon.PostPostMake
  name: PostPostMake
  nameWithType: CompModularizationWeapon.PostPostMake
  fullName: RW_ModularizationWeapon.CompModularizationWeapon.PostPostMake
- uid: RW_ModularizationWeapon.CompModularizationWeapon.PostExposeData*
  commentId: Overload:RW_ModularizationWeapon.CompModularizationWeapon.PostExposeData
  name: PostExposeData
  nameWithType: CompModularizationWeapon.PostExposeData
  fullName: RW_ModularizationWeapon.CompModularizationWeapon.PostExposeData
- uid: RW_ModularizationWeapon.CompModularizationWeapon.AllowStackWith*
  commentId: Overload:RW_ModularizationWeapon.CompModularizationWeapon.AllowStackWith
  name: AllowStackWith
  nameWithType: CompModularizationWeapon.AllowStackWith
  fullName: RW_ModularizationWeapon.CompModularizationWeapon.AllowStackWith
- uid: Verse.Thing
  commentId: T:Verse.Thing
  parent: Verse
  isExternal: true
  name: Thing
  nameWithType: Thing
  fullName: Verse.Thing
- uid: Verse
  commentId: N:Verse
  isExternal: true
  name: Verse
  nameWithType: Verse
  fullName: Verse
- uid: RW_ModularizationWeapon.CompModularizationWeapon.HasPostFX*
  commentId: Overload:RW_ModularizationWeapon.CompModularizationWeapon.HasPostFX
  name: HasPostFX
  nameWithType: CompModularizationWeapon.HasPostFX
  fullName: RW_ModularizationWeapon.CompModularizationWeapon.HasPostFX
- uid: RW_ModularizationWeapon.CompModularizationWeapon.CompGetGizmosExtra*
  commentId: Overload:RW_ModularizationWeapon.CompModularizationWeapon.CompGetGizmosExtra
  name: CompGetGizmosExtra
  nameWithType: CompModularizationWeapon.CompGetGizmosExtra
  fullName: RW_ModularizationWeapon.CompModularizationWeapon.CompGetGizmosExtra
- uid: System.Collections.Generic.IEnumerable{Verse.Gizmo}
  commentId: T:System.Collections.Generic.IEnumerable{Verse.Gizmo}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<Gizmo>
  nameWithType: IEnumerable<Gizmo>
  fullName: System.Collections.Generic.IEnumerable<Verse.Gizmo>
  nameWithType.vb: IEnumerable(Of Gizmo)
  fullName.vb: System.Collections.Generic.IEnumerable(Of Verse.Gizmo)
  name.vb: IEnumerable(Of Gizmo)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Verse.Gizmo
    name: Gizmo
    nameWithType: Gizmo
    fullName: Verse.Gizmo
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Verse.Gizmo
    name: Gizmo
    nameWithType: Gizmo
    fullName: Verse.Gizmo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: RW_ModularizationWeapon.CompModularizationWeapon.PostDrawSteep*
  commentId: Overload:RW_ModularizationWeapon.CompModularizationWeapon.PostDrawSteep
  name: PostDrawSteep
  nameWithType: CompModularizationWeapon.PostDrawSteep
  fullName: RW_ModularizationWeapon.CompModularizationWeapon.PostDrawSteep
- uid: System.Collections.Generic.List{System.ValueTuple{System.String,Verse.Thing,System.Collections.Generic.List{RenderInfo}}}
  commentId: T:System.Collections.Generic.List{System.ValueTuple{System.String,Verse.Thing,System.Collections.Generic.List{RenderInfo}}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<(T1, T2, T3)<String, Thing, List<RenderInfo>>>
  nameWithType: List<(T1, T2, T3)<String, Thing, List<RenderInfo>>>
  fullName: System.Collections.Generic.List<System.ValueTuple<System.String, Verse.Thing, System.Collections.Generic.List<RenderInfo>>>
  nameWithType.vb: List(Of (T1, T2, T3)(Of String, Thing, List(Of RenderInfo)))
  fullName.vb: System.Collections.Generic.List(Of System.ValueTuple(Of System.String, Verse.Thing, System.Collections.Generic.List(Of RenderInfo)))
  name.vb: List(Of (T1, T2, T3)(Of String, Thing, List(Of RenderInfo)))
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.ValueTuple`3
    name: (T1, T2, T3)
    nameWithType: (T1, T2, T3)
    fullName: System.ValueTuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Verse.Thing
    name: Thing
    nameWithType: Thing
    fullName: Verse.Thing
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: RenderInfo
    name: RenderInfo
    nameWithType: RenderInfo
    fullName: RenderInfo
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.ValueTuple`3
    name: (T1, T2, T3)
    nameWithType: (T1, T2, T3)
    fullName: System.ValueTuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Verse.Thing
    name: Thing
    nameWithType: Thing
    fullName: Verse.Thing
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: RenderInfo
    name: RenderInfo
    nameWithType: RenderInfo
    fullName: RenderInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Verse.Rot4
  commentId: T:Verse.Rot4
  parent: Verse
  isExternal: true
  name: Rot4
  nameWithType: Rot4
  fullName: Verse.Rot4
- uid: Verse.Graphic
  commentId: T:Verse.Graphic
  parent: Verse
  isExternal: true
  name: Graphic
  nameWithType: Graphic
  fullName: Verse.Graphic
- uid: System.Collections.Generic.Dictionary{System.String,System.Object}
  commentId: T:System.Collections.Generic.Dictionary{System.String,System.Object}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<String, Object>
  nameWithType: Dictionary<String, Object>
  fullName: System.Collections.Generic.Dictionary<System.String, System.Object>
  nameWithType.vb: Dictionary(Of String, Object)
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, System.Object)
  name.vb: Dictionary(Of String, Object)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: RW_ModularizationWeapon.CompModularizationWeapon.PostFX*
  commentId: Overload:RW_ModularizationWeapon.CompModularizationWeapon.PostFX
  name: PostFX
  nameWithType: CompModularizationWeapon.PostFX
  fullName: RW_ModularizationWeapon.CompModularizationWeapon.PostFX
- uid: UnityEngine.RenderTexture
  commentId: T:UnityEngine.RenderTexture
  parent: UnityEngine
  isExternal: true
  name: RenderTexture
  nameWithType: RenderTexture
  fullName: UnityEngine.RenderTexture
- uid: UnityEngine
  commentId: N:UnityEngine
  isExternal: true
  name: UnityEngine
  nameWithType: UnityEngine
  fullName: UnityEngine
- uid: RW_ModularizationWeapon.CompModularizationWeapon.AllowPart*
  commentId: Overload:RW_ModularizationWeapon.CompModularizationWeapon.AllowPart
  name: AllowPart
  nameWithType: CompModularizationWeapon.AllowPart
  fullName: RW_ModularizationWeapon.CompModularizationWeapon.AllowPart
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: RW_ModularizationWeapon.CompModularizationWeapon.AllowNode*
  commentId: Overload:RW_ModularizationWeapon.CompModularizationWeapon.AllowNode
  name: AllowNode
  nameWithType: CompModularizationWeapon.AllowNode
  fullName: RW_ModularizationWeapon.CompModularizationWeapon.AllowNode
- uid: RW_ModularizationWeapon.CompModularizationWeapon.SetPartToDefault*
  commentId: Overload:RW_ModularizationWeapon.CompModularizationWeapon.SetPartToDefault
  name: SetPartToDefault
  nameWithType: CompModularizationWeapon.SetPartToDefault
  fullName: RW_ModularizationWeapon.CompModularizationWeapon.SetPartToDefault
- uid: RW_ModularizationWeapon.CompModularizationWeapon.SetPartToRandom*
  commentId: Overload:RW_ModularizationWeapon.CompModularizationWeapon.SetPartToRandom
  name: SetPartToRandom
  nameWithType: CompModularizationWeapon.SetPartToRandom
  fullName: RW_ModularizationWeapon.CompModularizationWeapon.SetPartToRandom
- uid: RW_ModularizationWeapon.CompModularizationWeapon.PostGenRecipe_MakeRecipeProducts*
  commentId: Overload:RW_ModularizationWeapon.CompModularizationWeapon.PostGenRecipe_MakeRecipeProducts
  name: PostGenRecipe_MakeRecipeProducts
  nameWithType: CompModularizationWeapon.PostGenRecipe_MakeRecipeProducts
  fullName: RW_ModularizationWeapon.CompModularizationWeapon.PostGenRecipe_MakeRecipeProducts
- uid: Verse.RecipeDef
  commentId: T:Verse.RecipeDef
  parent: Verse
  isExternal: true
  name: RecipeDef
  nameWithType: RecipeDef
  fullName: Verse.RecipeDef
- uid: Verse.Pawn
  commentId: T:Verse.Pawn
  parent: Verse
  isExternal: true
  name: Pawn
  nameWithType: Pawn
  fullName: Verse.Pawn
- uid: System.Collections.Generic.List{Verse.Thing}
  commentId: T:System.Collections.Generic.List{Verse.Thing}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Thing>
  nameWithType: List<Thing>
  fullName: System.Collections.Generic.List<Verse.Thing>
  nameWithType.vb: List(Of Thing)
  fullName.vb: System.Collections.Generic.List(Of Verse.Thing)
  name.vb: List(Of Thing)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Verse.Thing
    name: Thing
    nameWithType: Thing
    fullName: Verse.Thing
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Verse.Thing
    name: Thing
    nameWithType: Thing
    fullName: Verse.Thing
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: RimWorld.IBillGiver
  commentId: T:RimWorld.IBillGiver
  parent: RimWorld
  isExternal: true
  name: IBillGiver
  nameWithType: IBillGiver
  fullName: RimWorld.IBillGiver
- uid: RimWorld.Precept_ThingStyle
  commentId: T:RimWorld.Precept_ThingStyle
  parent: RimWorld
  isExternal: true
  name: Precept_ThingStyle
  nameWithType: Precept_ThingStyle
  fullName: RimWorld.Precept_ThingStyle
- uid: RecipeInvokeSource
  commentId: '!:RecipeInvokeSource'
  isExternal: true
  name: RecipeInvokeSource
  nameWithType: RecipeInvokeSource
  fullName: RecipeInvokeSource
- uid: System.Collections.Generic.IEnumerable{Verse.Thing}
  commentId: T:System.Collections.Generic.IEnumerable{Verse.Thing}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<Thing>
  nameWithType: IEnumerable<Thing>
  fullName: System.Collections.Generic.IEnumerable<Verse.Thing>
  nameWithType.vb: IEnumerable(Of Thing)
  fullName.vb: System.Collections.Generic.IEnumerable(Of Verse.Thing)
  name.vb: IEnumerable(Of Thing)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Verse.Thing
    name: Thing
    nameWithType: Thing
    fullName: Verse.Thing
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Verse.Thing
    name: Thing
    nameWithType: Thing
    fullName: Verse.Thing
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: RimWorld
  commentId: N:RimWorld
  isExternal: true
  name: RimWorld
  nameWithType: RimWorld
  fullName: RimWorld
- uid: RW_ModularizationWeapon.CompModularizationWeapon.PostThingWithComps_PreApplyDamage*
  commentId: Overload:RW_ModularizationWeapon.CompModularizationWeapon.PostThingWithComps_PreApplyDamage
  name: PostThingWithComps_PreApplyDamage
  nameWithType: CompModularizationWeapon.PostThingWithComps_PreApplyDamage
  fullName: RW_ModularizationWeapon.CompModularizationWeapon.PostThingWithComps_PreApplyDamage
- uid: Verse.DamageInfo
  commentId: T:Verse.DamageInfo
  parent: Verse
  isExternal: true
  name: DamageInfo
  nameWithType: DamageInfo
  fullName: Verse.DamageInfo
- uid: RW_ModularizationWeapon.CompModularizationWeapon.AllExtraCompProperties*
  commentId: Overload:RW_ModularizationWeapon.CompModularizationWeapon.AllExtraCompProperties
  name: AllExtraCompProperties
  nameWithType: CompModularizationWeapon.AllExtraCompProperties
  fullName: RW_ModularizationWeapon.CompModularizationWeapon.AllExtraCompProperties
- uid: System.Collections.Generic.List{Verse.CompProperties}
  commentId: T:System.Collections.Generic.List{Verse.CompProperties}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<CompProperties>
  nameWithType: List<CompProperties>
  fullName: System.Collections.Generic.List<Verse.CompProperties>
  nameWithType.vb: List(Of CompProperties)
  fullName.vb: System.Collections.Generic.List(Of Verse.CompProperties)
  name.vb: List(Of CompProperties)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Verse.CompProperties
    name: CompProperties
    nameWithType: CompProperties
    fullName: Verse.CompProperties
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Verse.CompProperties
    name: CompProperties
    nameWithType: CompProperties
    fullName: Verse.CompProperties
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: RW_ModularizationWeapon.CompModularizationWeapon.PreUpdateNode*
  commentId: Overload:RW_ModularizationWeapon.CompModularizationWeapon.PreUpdateNode
  name: PreUpdateNode
  nameWithType: CompModularizationWeapon.PreUpdateNode
  fullName: RW_ModularizationWeapon.CompModularizationWeapon.PreUpdateNode
- uid: CompChildNodeProccesser
  isExternal: true
  name: CompChildNodeProccesser
  nameWithType: CompChildNodeProccesser
  fullName: CompChildNodeProccesser
- uid: System.Collections.Generic.Dictionary{System.String,Verse.Thing}
  commentId: T:System.Collections.Generic.Dictionary{System.String,Verse.Thing}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<String, Thing>
  nameWithType: Dictionary<String, Thing>
  fullName: System.Collections.Generic.Dictionary<System.String, Verse.Thing>
  nameWithType.vb: Dictionary(Of String, Thing)
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, Verse.Thing)
  name.vb: Dictionary(Of String, Thing)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Verse.Thing
    name: Thing
    nameWithType: Thing
    fullName: Verse.Thing
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Verse.Thing
    name: Thing
    nameWithType: Thing
    fullName: Verse.Thing
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: RW_ModularizationWeapon.CompModularizationWeapon.PostUpdateNode*
  commentId: Overload:RW_ModularizationWeapon.CompModularizationWeapon.PostUpdateNode
  name: PostUpdateNode
  nameWithType: CompModularizationWeapon.PostUpdateNode
  fullName: RW_ModularizationWeapon.CompModularizationWeapon.PostUpdateNode
- uid: RW_ModularizationWeapon.CompModularizationWeapon.SetChildPostion*
  commentId: Overload:RW_ModularizationWeapon.CompModularizationWeapon.SetChildPostion
  name: SetChildPostion
  nameWithType: CompModularizationWeapon.SetChildPostion
  fullName: RW_ModularizationWeapon.CompModularizationWeapon.SetChildPostion
- uid: RW_ModularizationWeapon.CompModularizationWeapon.SetChildPostionInvalid*
  commentId: Overload:RW_ModularizationWeapon.CompModularizationWeapon.SetChildPostionInvalid
  name: SetChildPostionInvalid
  nameWithType: CompModularizationWeapon.SetChildPostionInvalid
  fullName: RW_ModularizationWeapon.CompModularizationWeapon.SetChildPostionInvalid
- uid: RW_ModularizationWeapon.CompModularizationWeapon.UniqueVerbOwnerID*
  commentId: Overload:RW_ModularizationWeapon.CompModularizationWeapon.UniqueVerbOwnerID
  name: UniqueVerbOwnerID
  nameWithType: CompModularizationWeapon.UniqueVerbOwnerID
  fullName: RW_ModularizationWeapon.CompModularizationWeapon.UniqueVerbOwnerID
- uid: RW_ModularizationWeapon.CompModularizationWeapon.VerbsStillUsableBy*
  commentId: Overload:RW_ModularizationWeapon.CompModularizationWeapon.VerbsStillUsableBy
  name: VerbsStillUsableBy
  nameWithType: CompModularizationWeapon.VerbsStillUsableBy
  fullName: RW_ModularizationWeapon.CompModularizationWeapon.VerbsStillUsableBy
- uid: RW_ModularizationWeapon.CompModularizationWeapon.op_Implicit*
  commentId: Overload:RW_ModularizationWeapon.CompModularizationWeapon.op_Implicit
  name: Implicit
  nameWithType: CompModularizationWeapon.Implicit
  fullName: RW_ModularizationWeapon.CompModularizationWeapon.Implicit
  nameWithType.vb: CompModularizationWeapon.Widening
  fullName.vb: RW_ModularizationWeapon.CompModularizationWeapon.Widening
  name.vb: Widening
- uid: RW_ModularizationWeapon.CompModularizationWeapon.Unchangeable*
  commentId: Overload:RW_ModularizationWeapon.CompModularizationWeapon.Unchangeable
  name: Unchangeable
  nameWithType: CompModularizationWeapon.Unchangeable
  fullName: RW_ModularizationWeapon.CompModularizationWeapon.Unchangeable
- uid: RW_ModularizationWeapon.CompModularizationWeapon.NotDraw*
  commentId: Overload:RW_ModularizationWeapon.CompModularizationWeapon.NotDraw
  name: NotDraw
  nameWithType: CompModularizationWeapon.NotDraw
  fullName: RW_ModularizationWeapon.CompModularizationWeapon.NotDraw
- uid: RW_ModularizationWeapon.CompModularizationWeapon.NotUseTools*
  commentId: Overload:RW_ModularizationWeapon.CompModularizationWeapon.NotUseTools
  name: NotUseTools
  nameWithType: CompModularizationWeapon.NotUseTools
  fullName: RW_ModularizationWeapon.CompModularizationWeapon.NotUseTools
- uid: RW_ModularizationWeapon.CompModularizationWeapon.NotUseVerbProperties*
  commentId: Overload:RW_ModularizationWeapon.CompModularizationWeapon.NotUseVerbProperties
  name: NotUseVerbProperties
  nameWithType: CompModularizationWeapon.NotUseVerbProperties
  fullName: RW_ModularizationWeapon.CompModularizationWeapon.NotUseVerbProperties
- uid: RW_ModularizationWeapon.CompModularizationWeapon.VerbPropertiesMultiplier*
  commentId: Overload:RW_ModularizationWeapon.CompModularizationWeapon.VerbPropertiesMultiplier
  name: VerbPropertiesMultiplier
  nameWithType: CompModularizationWeapon.VerbPropertiesMultiplier
  fullName: RW_ModularizationWeapon.CompModularizationWeapon.VerbPropertiesMultiplier
- uid: RW_ModularizationWeapon.FieldReaderDgitList{Verse.VerbProperties}
  commentId: T:RW_ModularizationWeapon.FieldReaderDgitList{Verse.VerbProperties}
  parent: RW_ModularizationWeapon
  definition: RW_ModularizationWeapon.FieldReaderDgitList`1
  name: FieldReaderDgitList<VerbProperties>
  nameWithType: FieldReaderDgitList<VerbProperties>
  fullName: RW_ModularizationWeapon.FieldReaderDgitList<Verse.VerbProperties>
  nameWithType.vb: FieldReaderDgitList(Of VerbProperties)
  fullName.vb: RW_ModularizationWeapon.FieldReaderDgitList(Of Verse.VerbProperties)
  name.vb: FieldReaderDgitList(Of VerbProperties)
  spec.csharp:
  - uid: RW_ModularizationWeapon.FieldReaderDgitList`1
    name: FieldReaderDgitList
    nameWithType: FieldReaderDgitList
    fullName: RW_ModularizationWeapon.FieldReaderDgitList
  - name: <
    nameWithType: <
    fullName: <
  - uid: Verse.VerbProperties
    name: VerbProperties
    nameWithType: VerbProperties
    fullName: Verse.VerbProperties
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: RW_ModularizationWeapon.FieldReaderDgitList`1
    name: FieldReaderDgitList
    nameWithType: FieldReaderDgitList
    fullName: RW_ModularizationWeapon.FieldReaderDgitList
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Verse.VerbProperties
    name: VerbProperties
    nameWithType: VerbProperties
    fullName: Verse.VerbProperties
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: RW_ModularizationWeapon.FieldReaderDgitList`1
  commentId: T:RW_ModularizationWeapon.FieldReaderDgitList`1
  parent: RW_ModularizationWeapon
  name: FieldReaderDgitList<T>
  nameWithType: FieldReaderDgitList<T>
  fullName: RW_ModularizationWeapon.FieldReaderDgitList<T>
  nameWithType.vb: FieldReaderDgitList(Of T)
  fullName.vb: RW_ModularizationWeapon.FieldReaderDgitList(Of T)
  name.vb: FieldReaderDgitList(Of T)
  spec.csharp:
  - uid: RW_ModularizationWeapon.FieldReaderDgitList`1
    name: FieldReaderDgitList
    nameWithType: FieldReaderDgitList
    fullName: RW_ModularizationWeapon.FieldReaderDgitList
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: RW_ModularizationWeapon.FieldReaderDgitList`1
    name: FieldReaderDgitList
    nameWithType: FieldReaderDgitList
    fullName: RW_ModularizationWeapon.FieldReaderDgitList
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: RW_ModularizationWeapon.CompModularizationWeapon.ToolsMultiplier*
  commentId: Overload:RW_ModularizationWeapon.CompModularizationWeapon.ToolsMultiplier
  name: ToolsMultiplier
  nameWithType: CompModularizationWeapon.ToolsMultiplier
  fullName: RW_ModularizationWeapon.CompModularizationWeapon.ToolsMultiplier
- uid: RW_ModularizationWeapon.FieldReaderDgitList{Verse.Tool}
  commentId: T:RW_ModularizationWeapon.FieldReaderDgitList{Verse.Tool}
  parent: RW_ModularizationWeapon
  definition: RW_ModularizationWeapon.FieldReaderDgitList`1
  name: FieldReaderDgitList<Tool>
  nameWithType: FieldReaderDgitList<Tool>
  fullName: RW_ModularizationWeapon.FieldReaderDgitList<Verse.Tool>
  nameWithType.vb: FieldReaderDgitList(Of Tool)
  fullName.vb: RW_ModularizationWeapon.FieldReaderDgitList(Of Verse.Tool)
  name.vb: FieldReaderDgitList(Of Tool)
  spec.csharp:
  - uid: RW_ModularizationWeapon.FieldReaderDgitList`1
    name: FieldReaderDgitList
    nameWithType: FieldReaderDgitList
    fullName: RW_ModularizationWeapon.FieldReaderDgitList
  - name: <
    nameWithType: <
    fullName: <
  - uid: Verse.Tool
    name: Tool
    nameWithType: Tool
    fullName: Verse.Tool
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: RW_ModularizationWeapon.FieldReaderDgitList`1
    name: FieldReaderDgitList
    nameWithType: FieldReaderDgitList
    fullName: RW_ModularizationWeapon.FieldReaderDgitList
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Verse.Tool
    name: Tool
    nameWithType: Tool
    fullName: Verse.Tool
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: RW_ModularizationWeapon.CompModularizationWeapon.CompPropertiesMultiplier*
  commentId: Overload:RW_ModularizationWeapon.CompModularizationWeapon.CompPropertiesMultiplier
  name: CompPropertiesMultiplier
  nameWithType: CompModularizationWeapon.CompPropertiesMultiplier
  fullName: RW_ModularizationWeapon.CompModularizationWeapon.CompPropertiesMultiplier
- uid: RW_ModularizationWeapon.FieldReaderDgitList{Verse.CompProperties}
  commentId: T:RW_ModularizationWeapon.FieldReaderDgitList{Verse.CompProperties}
  parent: RW_ModularizationWeapon
  definition: RW_ModularizationWeapon.FieldReaderDgitList`1
  name: FieldReaderDgitList<CompProperties>
  nameWithType: FieldReaderDgitList<CompProperties>
  fullName: RW_ModularizationWeapon.FieldReaderDgitList<Verse.CompProperties>
  nameWithType.vb: FieldReaderDgitList(Of CompProperties)
  fullName.vb: RW_ModularizationWeapon.FieldReaderDgitList(Of Verse.CompProperties)
  name.vb: FieldReaderDgitList(Of CompProperties)
  spec.csharp:
  - uid: RW_ModularizationWeapon.FieldReaderDgitList`1
    name: FieldReaderDgitList
    nameWithType: FieldReaderDgitList
    fullName: RW_ModularizationWeapon.FieldReaderDgitList
  - name: <
    nameWithType: <
    fullName: <
  - uid: Verse.CompProperties
    name: CompProperties
    nameWithType: CompProperties
    fullName: Verse.CompProperties
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: RW_ModularizationWeapon.FieldReaderDgitList`1
    name: FieldReaderDgitList
    nameWithType: FieldReaderDgitList
    fullName: RW_ModularizationWeapon.FieldReaderDgitList
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Verse.CompProperties
    name: CompProperties
    nameWithType: CompProperties
    fullName: Verse.CompProperties
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: RW_ModularizationWeapon.CompModularizationWeapon.GetStatMultiplier*
  commentId: Overload:RW_ModularizationWeapon.CompModularizationWeapon.GetStatMultiplier
  name: GetStatMultiplier
  nameWithType: CompModularizationWeapon.GetStatMultiplier
  fullName: RW_ModularizationWeapon.CompModularizationWeapon.GetStatMultiplier
- uid: RimWorld.StatDef
  commentId: T:RimWorld.StatDef
  parent: RimWorld
  isExternal: true
  name: StatDef
  nameWithType: StatDef
  fullName: RimWorld.StatDef
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: RW_ModularizationWeapon.CompModularizationWeapon.VerbPropertiesOffseter*
  commentId: Overload:RW_ModularizationWeapon.CompModularizationWeapon.VerbPropertiesOffseter
  name: VerbPropertiesOffseter
  nameWithType: CompModularizationWeapon.VerbPropertiesOffseter
  fullName: RW_ModularizationWeapon.CompModularizationWeapon.VerbPropertiesOffseter
- uid: RW_ModularizationWeapon.CompModularizationWeapon.ToolsOffseter*
  commentId: Overload:RW_ModularizationWeapon.CompModularizationWeapon.ToolsOffseter
  name: ToolsOffseter
  nameWithType: CompModularizationWeapon.ToolsOffseter
  fullName: RW_ModularizationWeapon.CompModularizationWeapon.ToolsOffseter
- uid: RW_ModularizationWeapon.CompModularizationWeapon.CompPropertiesOffseter*
  commentId: Overload:RW_ModularizationWeapon.CompModularizationWeapon.CompPropertiesOffseter
  name: CompPropertiesOffseter
  nameWithType: CompModularizationWeapon.CompPropertiesOffseter
  fullName: RW_ModularizationWeapon.CompModularizationWeapon.CompPropertiesOffseter
- uid: RW_ModularizationWeapon.CompModularizationWeapon.GetStatOffset*
  commentId: Overload:RW_ModularizationWeapon.CompModularizationWeapon.GetStatOffset
  name: GetStatOffset
  nameWithType: CompModularizationWeapon.GetStatOffset
  fullName: RW_ModularizationWeapon.CompModularizationWeapon.GetStatOffset
- uid: RW_ModularizationWeapon.CompModularizationWeapon.VerbPropertiesObjectPatch*
  commentId: Overload:RW_ModularizationWeapon.CompModularizationWeapon.VerbPropertiesObjectPatch
  name: VerbPropertiesObjectPatch
  nameWithType: CompModularizationWeapon.VerbPropertiesObjectPatch
  fullName: RW_ModularizationWeapon.CompModularizationWeapon.VerbPropertiesObjectPatch
- uid: RW_ModularizationWeapon.FieldReaderInstList{Verse.VerbProperties}
  commentId: T:RW_ModularizationWeapon.FieldReaderInstList{Verse.VerbProperties}
  parent: RW_ModularizationWeapon
  definition: RW_ModularizationWeapon.FieldReaderInstList`1
  name: FieldReaderInstList<VerbProperties>
  nameWithType: FieldReaderInstList<VerbProperties>
  fullName: RW_ModularizationWeapon.FieldReaderInstList<Verse.VerbProperties>
  nameWithType.vb: FieldReaderInstList(Of VerbProperties)
  fullName.vb: RW_ModularizationWeapon.FieldReaderInstList(Of Verse.VerbProperties)
  name.vb: FieldReaderInstList(Of VerbProperties)
  spec.csharp:
  - uid: RW_ModularizationWeapon.FieldReaderInstList`1
    name: FieldReaderInstList
    nameWithType: FieldReaderInstList
    fullName: RW_ModularizationWeapon.FieldReaderInstList
  - name: <
    nameWithType: <
    fullName: <
  - uid: Verse.VerbProperties
    name: VerbProperties
    nameWithType: VerbProperties
    fullName: Verse.VerbProperties
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: RW_ModularizationWeapon.FieldReaderInstList`1
    name: FieldReaderInstList
    nameWithType: FieldReaderInstList
    fullName: RW_ModularizationWeapon.FieldReaderInstList
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Verse.VerbProperties
    name: VerbProperties
    nameWithType: VerbProperties
    fullName: Verse.VerbProperties
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: RW_ModularizationWeapon.FieldReaderInstList`1
  commentId: T:RW_ModularizationWeapon.FieldReaderInstList`1
  parent: RW_ModularizationWeapon
  name: FieldReaderInstList<T>
  nameWithType: FieldReaderInstList<T>
  fullName: RW_ModularizationWeapon.FieldReaderInstList<T>
  nameWithType.vb: FieldReaderInstList(Of T)
  fullName.vb: RW_ModularizationWeapon.FieldReaderInstList(Of T)
  name.vb: FieldReaderInstList(Of T)
  spec.csharp:
  - uid: RW_ModularizationWeapon.FieldReaderInstList`1
    name: FieldReaderInstList
    nameWithType: FieldReaderInstList
    fullName: RW_ModularizationWeapon.FieldReaderInstList
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: RW_ModularizationWeapon.FieldReaderInstList`1
    name: FieldReaderInstList
    nameWithType: FieldReaderInstList
    fullName: RW_ModularizationWeapon.FieldReaderInstList
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: RW_ModularizationWeapon.CompModularizationWeapon.ToolsObjectPatch*
  commentId: Overload:RW_ModularizationWeapon.CompModularizationWeapon.ToolsObjectPatch
  name: ToolsObjectPatch
  nameWithType: CompModularizationWeapon.ToolsObjectPatch
  fullName: RW_ModularizationWeapon.CompModularizationWeapon.ToolsObjectPatch
- uid: RW_ModularizationWeapon.FieldReaderInstList{Verse.Tool}
  commentId: T:RW_ModularizationWeapon.FieldReaderInstList{Verse.Tool}
  parent: RW_ModularizationWeapon
  definition: RW_ModularizationWeapon.FieldReaderInstList`1
  name: FieldReaderInstList<Tool>
  nameWithType: FieldReaderInstList<Tool>
  fullName: RW_ModularizationWeapon.FieldReaderInstList<Verse.Tool>
  nameWithType.vb: FieldReaderInstList(Of Tool)
  fullName.vb: RW_ModularizationWeapon.FieldReaderInstList(Of Verse.Tool)
  name.vb: FieldReaderInstList(Of Tool)
  spec.csharp:
  - uid: RW_ModularizationWeapon.FieldReaderInstList`1
    name: FieldReaderInstList
    nameWithType: FieldReaderInstList
    fullName: RW_ModularizationWeapon.FieldReaderInstList
  - name: <
    nameWithType: <
    fullName: <
  - uid: Verse.Tool
    name: Tool
    nameWithType: Tool
    fullName: Verse.Tool
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: RW_ModularizationWeapon.FieldReaderInstList`1
    name: FieldReaderInstList
    nameWithType: FieldReaderInstList
    fullName: RW_ModularizationWeapon.FieldReaderInstList
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Verse.Tool
    name: Tool
    nameWithType: Tool
    fullName: Verse.Tool
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: RW_ModularizationWeapon.CompModularizationWeapon.CompPropertiesObjectPatch*
  commentId: Overload:RW_ModularizationWeapon.CompModularizationWeapon.CompPropertiesObjectPatch
  name: CompPropertiesObjectPatch
  nameWithType: CompModularizationWeapon.CompPropertiesObjectPatch
  fullName: RW_ModularizationWeapon.CompModularizationWeapon.CompPropertiesObjectPatch
- uid: RW_ModularizationWeapon.FieldReaderInstList{Verse.CompProperties}
  commentId: T:RW_ModularizationWeapon.FieldReaderInstList{Verse.CompProperties}
  parent: RW_ModularizationWeapon
  definition: RW_ModularizationWeapon.FieldReaderInstList`1
  name: FieldReaderInstList<CompProperties>
  nameWithType: FieldReaderInstList<CompProperties>
  fullName: RW_ModularizationWeapon.FieldReaderInstList<Verse.CompProperties>
  nameWithType.vb: FieldReaderInstList(Of CompProperties)
  fullName.vb: RW_ModularizationWeapon.FieldReaderInstList(Of Verse.CompProperties)
  name.vb: FieldReaderInstList(Of CompProperties)
  spec.csharp:
  - uid: RW_ModularizationWeapon.FieldReaderInstList`1
    name: FieldReaderInstList
    nameWithType: FieldReaderInstList
    fullName: RW_ModularizationWeapon.FieldReaderInstList
  - name: <
    nameWithType: <
    fullName: <
  - uid: Verse.CompProperties
    name: CompProperties
    nameWithType: CompProperties
    fullName: Verse.CompProperties
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: RW_ModularizationWeapon.FieldReaderInstList`1
    name: FieldReaderInstList
    nameWithType: FieldReaderInstList
    fullName: RW_ModularizationWeapon.FieldReaderInstList
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Verse.CompProperties
    name: CompProperties
    nameWithType: CompProperties
    fullName: Verse.CompProperties
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: RW_ModularizationWeapon.CompModularizationWeapon.VerbPropertiesBoolAndPatch*
  commentId: Overload:RW_ModularizationWeapon.CompModularizationWeapon.VerbPropertiesBoolAndPatch
  name: VerbPropertiesBoolAndPatch
  nameWithType: CompModularizationWeapon.VerbPropertiesBoolAndPatch
  fullName: RW_ModularizationWeapon.CompModularizationWeapon.VerbPropertiesBoolAndPatch
- uid: RW_ModularizationWeapon.FieldReaderBoolList{Verse.VerbProperties}
  commentId: T:RW_ModularizationWeapon.FieldReaderBoolList{Verse.VerbProperties}
  parent: RW_ModularizationWeapon
  definition: RW_ModularizationWeapon.FieldReaderBoolList`1
  name: FieldReaderBoolList<VerbProperties>
  nameWithType: FieldReaderBoolList<VerbProperties>
  fullName: RW_ModularizationWeapon.FieldReaderBoolList<Verse.VerbProperties>
  nameWithType.vb: FieldReaderBoolList(Of VerbProperties)
  fullName.vb: RW_ModularizationWeapon.FieldReaderBoolList(Of Verse.VerbProperties)
  name.vb: FieldReaderBoolList(Of VerbProperties)
  spec.csharp:
  - uid: RW_ModularizationWeapon.FieldReaderBoolList`1
    name: FieldReaderBoolList
    nameWithType: FieldReaderBoolList
    fullName: RW_ModularizationWeapon.FieldReaderBoolList
  - name: <
    nameWithType: <
    fullName: <
  - uid: Verse.VerbProperties
    name: VerbProperties
    nameWithType: VerbProperties
    fullName: Verse.VerbProperties
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: RW_ModularizationWeapon.FieldReaderBoolList`1
    name: FieldReaderBoolList
    nameWithType: FieldReaderBoolList
    fullName: RW_ModularizationWeapon.FieldReaderBoolList
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Verse.VerbProperties
    name: VerbProperties
    nameWithType: VerbProperties
    fullName: Verse.VerbProperties
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: RW_ModularizationWeapon.FieldReaderBoolList`1
  commentId: T:RW_ModularizationWeapon.FieldReaderBoolList`1
  parent: RW_ModularizationWeapon
  name: FieldReaderBoolList<T>
  nameWithType: FieldReaderBoolList<T>
  fullName: RW_ModularizationWeapon.FieldReaderBoolList<T>
  nameWithType.vb: FieldReaderBoolList(Of T)
  fullName.vb: RW_ModularizationWeapon.FieldReaderBoolList(Of T)
  name.vb: FieldReaderBoolList(Of T)
  spec.csharp:
  - uid: RW_ModularizationWeapon.FieldReaderBoolList`1
    name: FieldReaderBoolList
    nameWithType: FieldReaderBoolList
    fullName: RW_ModularizationWeapon.FieldReaderBoolList
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: RW_ModularizationWeapon.FieldReaderBoolList`1
    name: FieldReaderBoolList
    nameWithType: FieldReaderBoolList
    fullName: RW_ModularizationWeapon.FieldReaderBoolList
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: RW_ModularizationWeapon.CompModularizationWeapon.ToolsBoolAndPatch*
  commentId: Overload:RW_ModularizationWeapon.CompModularizationWeapon.ToolsBoolAndPatch
  name: ToolsBoolAndPatch
  nameWithType: CompModularizationWeapon.ToolsBoolAndPatch
  fullName: RW_ModularizationWeapon.CompModularizationWeapon.ToolsBoolAndPatch
- uid: RW_ModularizationWeapon.FieldReaderBoolList{Verse.Tool}
  commentId: T:RW_ModularizationWeapon.FieldReaderBoolList{Verse.Tool}
  parent: RW_ModularizationWeapon
  definition: RW_ModularizationWeapon.FieldReaderBoolList`1
  name: FieldReaderBoolList<Tool>
  nameWithType: FieldReaderBoolList<Tool>
  fullName: RW_ModularizationWeapon.FieldReaderBoolList<Verse.Tool>
  nameWithType.vb: FieldReaderBoolList(Of Tool)
  fullName.vb: RW_ModularizationWeapon.FieldReaderBoolList(Of Verse.Tool)
  name.vb: FieldReaderBoolList(Of Tool)
  spec.csharp:
  - uid: RW_ModularizationWeapon.FieldReaderBoolList`1
    name: FieldReaderBoolList
    nameWithType: FieldReaderBoolList
    fullName: RW_ModularizationWeapon.FieldReaderBoolList
  - name: <
    nameWithType: <
    fullName: <
  - uid: Verse.Tool
    name: Tool
    nameWithType: Tool
    fullName: Verse.Tool
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: RW_ModularizationWeapon.FieldReaderBoolList`1
    name: FieldReaderBoolList
    nameWithType: FieldReaderBoolList
    fullName: RW_ModularizationWeapon.FieldReaderBoolList
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Verse.Tool
    name: Tool
    nameWithType: Tool
    fullName: Verse.Tool
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: RW_ModularizationWeapon.CompModularizationWeapon.CompPropertiesBoolAndPatch*
  commentId: Overload:RW_ModularizationWeapon.CompModularizationWeapon.CompPropertiesBoolAndPatch
  name: CompPropertiesBoolAndPatch
  nameWithType: CompModularizationWeapon.CompPropertiesBoolAndPatch
  fullName: RW_ModularizationWeapon.CompModularizationWeapon.CompPropertiesBoolAndPatch
- uid: RW_ModularizationWeapon.FieldReaderBoolList{Verse.CompProperties}
  commentId: T:RW_ModularizationWeapon.FieldReaderBoolList{Verse.CompProperties}
  parent: RW_ModularizationWeapon
  definition: RW_ModularizationWeapon.FieldReaderBoolList`1
  name: FieldReaderBoolList<CompProperties>
  nameWithType: FieldReaderBoolList<CompProperties>
  fullName: RW_ModularizationWeapon.FieldReaderBoolList<Verse.CompProperties>
  nameWithType.vb: FieldReaderBoolList(Of CompProperties)
  fullName.vb: RW_ModularizationWeapon.FieldReaderBoolList(Of Verse.CompProperties)
  name.vb: FieldReaderBoolList(Of CompProperties)
  spec.csharp:
  - uid: RW_ModularizationWeapon.FieldReaderBoolList`1
    name: FieldReaderBoolList
    nameWithType: FieldReaderBoolList
    fullName: RW_ModularizationWeapon.FieldReaderBoolList
  - name: <
    nameWithType: <
    fullName: <
  - uid: Verse.CompProperties
    name: CompProperties
    nameWithType: CompProperties
    fullName: Verse.CompProperties
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: RW_ModularizationWeapon.FieldReaderBoolList`1
    name: FieldReaderBoolList
    nameWithType: FieldReaderBoolList
    fullName: RW_ModularizationWeapon.FieldReaderBoolList
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Verse.CompProperties
    name: CompProperties
    nameWithType: CompProperties
    fullName: Verse.CompProperties
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: RW_ModularizationWeapon.CompModularizationWeapon.VerbPropertiesBoolOrPatch*
  commentId: Overload:RW_ModularizationWeapon.CompModularizationWeapon.VerbPropertiesBoolOrPatch
  name: VerbPropertiesBoolOrPatch
  nameWithType: CompModularizationWeapon.VerbPropertiesBoolOrPatch
  fullName: RW_ModularizationWeapon.CompModularizationWeapon.VerbPropertiesBoolOrPatch
- uid: RW_ModularizationWeapon.CompModularizationWeapon.ToolsBoolOrPatch*
  commentId: Overload:RW_ModularizationWeapon.CompModularizationWeapon.ToolsBoolOrPatch
  name: ToolsBoolOrPatch
  nameWithType: CompModularizationWeapon.ToolsBoolOrPatch
  fullName: RW_ModularizationWeapon.CompModularizationWeapon.ToolsBoolOrPatch
- uid: RW_ModularizationWeapon.CompModularizationWeapon.CompPropertiesBoolOrPatch*
  commentId: Overload:RW_ModularizationWeapon.CompModularizationWeapon.CompPropertiesBoolOrPatch
  name: CompPropertiesBoolOrPatch
  nameWithType: CompModularizationWeapon.CompPropertiesBoolOrPatch
  fullName: RW_ModularizationWeapon.CompModularizationWeapon.CompPropertiesBoolOrPatch
- uid: RW_ModularizationWeapon.CompModularizationWeapon.PreStatWorker_GetValueUnfinalized*
  commentId: Overload:RW_ModularizationWeapon.CompModularizationWeapon.PreStatWorker_GetValueUnfinalized
  name: PreStatWorker_GetValueUnfinalized
  nameWithType: CompModularizationWeapon.PreStatWorker_GetValueUnfinalized
  fullName: RW_ModularizationWeapon.CompModularizationWeapon.PreStatWorker_GetValueUnfinalized
- uid: RimWorld.StatWorker
  commentId: T:RimWorld.StatWorker
  parent: RimWorld
  isExternal: true
  name: StatWorker
  nameWithType: StatWorker
  fullName: RimWorld.StatWorker
- uid: RimWorld.StatRequest
  commentId: T:RimWorld.StatRequest
  parent: RimWorld
  isExternal: true
  name: StatRequest
  nameWithType: StatRequest
  fullName: RimWorld.StatRequest
- uid: RW_ModularizationWeapon.CompModularizationWeapon.FinalStatWorker_GetValueUnfinalized*
  commentId: Overload:RW_ModularizationWeapon.CompModularizationWeapon.FinalStatWorker_GetValueUnfinalized
  name: FinalStatWorker_GetValueUnfinalized
  nameWithType: CompModularizationWeapon.FinalStatWorker_GetValueUnfinalized
  fullName: RW_ModularizationWeapon.CompModularizationWeapon.FinalStatWorker_GetValueUnfinalized
- uid: System.Exception
  commentId: T:System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: RW_ModularizationWeapon.CompModularizationWeapon.PreStatWorker_FinalizeValue*
  commentId: Overload:RW_ModularizationWeapon.CompModularizationWeapon.PreStatWorker_FinalizeValue
  name: PreStatWorker_FinalizeValue
  nameWithType: CompModularizationWeapon.PreStatWorker_FinalizeValue
  fullName: RW_ModularizationWeapon.CompModularizationWeapon.PreStatWorker_FinalizeValue
- uid: RW_ModularizationWeapon.CompModularizationWeapon.FinalStatWorker_FinalizeValue*
  commentId: Overload:RW_ModularizationWeapon.CompModularizationWeapon.FinalStatWorker_FinalizeValue
  name: FinalStatWorker_FinalizeValue
  nameWithType: CompModularizationWeapon.FinalStatWorker_FinalizeValue
  fullName: RW_ModularizationWeapon.CompModularizationWeapon.FinalStatWorker_FinalizeValue
- uid: RW_ModularizationWeapon.CompModularizationWeapon.PreStatWorker_GetStatDrawEntryLabel*
  commentId: Overload:RW_ModularizationWeapon.CompModularizationWeapon.PreStatWorker_GetStatDrawEntryLabel
  name: PreStatWorker_GetStatDrawEntryLabel
  nameWithType: CompModularizationWeapon.PreStatWorker_GetStatDrawEntryLabel
  fullName: RW_ModularizationWeapon.CompModularizationWeapon.PreStatWorker_GetStatDrawEntryLabel
- uid: Verse.ToStringNumberSense
  commentId: T:Verse.ToStringNumberSense
  parent: Verse
  isExternal: true
  name: ToStringNumberSense
  nameWithType: ToStringNumberSense
  fullName: Verse.ToStringNumberSense
- uid: RW_ModularizationWeapon.CompModularizationWeapon.FinalStatWorker_GetStatDrawEntryLabel*
  commentId: Overload:RW_ModularizationWeapon.CompModularizationWeapon.FinalStatWorker_GetStatDrawEntryLabel
  name: FinalStatWorker_GetStatDrawEntryLabel
  nameWithType: CompModularizationWeapon.FinalStatWorker_GetStatDrawEntryLabel
  fullName: RW_ModularizationWeapon.CompModularizationWeapon.FinalStatWorker_GetStatDrawEntryLabel
- uid: RW_ModularizationWeapon.CompModularizationWeapon.PreStatWorker_GetExplanationUnfinalized*
  commentId: Overload:RW_ModularizationWeapon.CompModularizationWeapon.PreStatWorker_GetExplanationUnfinalized
  name: PreStatWorker_GetExplanationUnfinalized
  nameWithType: CompModularizationWeapon.PreStatWorker_GetExplanationUnfinalized
  fullName: RW_ModularizationWeapon.CompModularizationWeapon.PreStatWorker_GetExplanationUnfinalized
- uid: RW_ModularizationWeapon.CompModularizationWeapon.FinalStatWorker_GetExplanationUnfinalized*
  commentId: Overload:RW_ModularizationWeapon.CompModularizationWeapon.FinalStatWorker_GetExplanationUnfinalized
  name: FinalStatWorker_GetExplanationUnfinalized
  nameWithType: CompModularizationWeapon.FinalStatWorker_GetExplanationUnfinalized
  fullName: RW_ModularizationWeapon.CompModularizationWeapon.FinalStatWorker_GetExplanationUnfinalized
- uid: RW_ModularizationWeapon.CompModularizationWeapon.PostStatWorker_GetInfoCardHyperlinks*
  commentId: Overload:RW_ModularizationWeapon.CompModularizationWeapon.PostStatWorker_GetInfoCardHyperlinks
  name: PostStatWorker_GetInfoCardHyperlinks
  nameWithType: CompModularizationWeapon.PostStatWorker_GetInfoCardHyperlinks
  fullName: RW_ModularizationWeapon.CompModularizationWeapon.PostStatWorker_GetInfoCardHyperlinks
- uid: System.Collections.Generic.IEnumerable{Verse.Dialog_InfoCard.Hyperlink}
  commentId: T:System.Collections.Generic.IEnumerable{Verse.Dialog_InfoCard.Hyperlink}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<Dialog_InfoCard.Hyperlink>
  nameWithType: IEnumerable<Dialog_InfoCard.Hyperlink>
  fullName: System.Collections.Generic.IEnumerable<Verse.Dialog_InfoCard.Hyperlink>
  nameWithType.vb: IEnumerable(Of Dialog_InfoCard.Hyperlink)
  fullName.vb: System.Collections.Generic.IEnumerable(Of Verse.Dialog_InfoCard.Hyperlink)
  name.vb: IEnumerable(Of Dialog_InfoCard.Hyperlink)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Verse.Dialog_InfoCard.Hyperlink
    name: Dialog_InfoCard.Hyperlink
    nameWithType: Dialog_InfoCard.Hyperlink
    fullName: Verse.Dialog_InfoCard.Hyperlink
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Verse.Dialog_InfoCard.Hyperlink
    name: Dialog_InfoCard.Hyperlink
    nameWithType: Dialog_InfoCard.Hyperlink
    fullName: Verse.Dialog_InfoCard.Hyperlink
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: RW_ModularizationWeapon.CompModularizationWeapon.PostThingDef_SpecialDisplayStats*
  commentId: Overload:RW_ModularizationWeapon.CompModularizationWeapon.PostThingDef_SpecialDisplayStats
  name: PostThingDef_SpecialDisplayStats
  nameWithType: CompModularizationWeapon.PostThingDef_SpecialDisplayStats
  fullName: RW_ModularizationWeapon.CompModularizationWeapon.PostThingDef_SpecialDisplayStats
- uid: Verse.ThingDef
  commentId: T:Verse.ThingDef
  parent: Verse
  isExternal: true
  name: ThingDef
  nameWithType: ThingDef
  fullName: Verse.ThingDef
- uid: System.Collections.Generic.IEnumerable{RimWorld.StatDrawEntry}
  commentId: T:System.Collections.Generic.IEnumerable{RimWorld.StatDrawEntry}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<StatDrawEntry>
  nameWithType: IEnumerable<StatDrawEntry>
  fullName: System.Collections.Generic.IEnumerable<RimWorld.StatDrawEntry>
  nameWithType.vb: IEnumerable(Of StatDrawEntry)
  fullName.vb: System.Collections.Generic.IEnumerable(Of RimWorld.StatDrawEntry)
  name.vb: IEnumerable(Of StatDrawEntry)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: RimWorld.StatDrawEntry
    name: StatDrawEntry
    nameWithType: StatDrawEntry
    fullName: RimWorld.StatDrawEntry
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: RimWorld.StatDrawEntry
    name: StatDrawEntry
    nameWithType: StatDrawEntry
    fullName: RimWorld.StatDrawEntry
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: RW_ModularizationWeapon.CompModularizationWeapon.PostStatsReportUtility_StatsToDraw*
  commentId: Overload:RW_ModularizationWeapon.CompModularizationWeapon.PostStatsReportUtility_StatsToDraw
  name: PostStatsReportUtility_StatsToDraw
  nameWithType: CompModularizationWeapon.PostStatsReportUtility_StatsToDraw
  fullName: RW_ModularizationWeapon.CompModularizationWeapon.PostStatsReportUtility_StatsToDraw
- uid: RW_ModularizationWeapon.CompModularizationWeapon.FinalStatWorker_StatOffsetFromGear*
  commentId: Overload:RW_ModularizationWeapon.CompModularizationWeapon.FinalStatWorker_StatOffsetFromGear
  name: FinalStatWorker_StatOffsetFromGear
  nameWithType: CompModularizationWeapon.FinalStatWorker_StatOffsetFromGear
  fullName: RW_ModularizationWeapon.CompModularizationWeapon.FinalStatWorker_StatOffsetFromGear
- uid: RW_ModularizationWeapon.CompModularizationWeapon.FinalStatWorker_GearHasCompsThatAffectStat*
  commentId: Overload:RW_ModularizationWeapon.CompModularizationWeapon.FinalStatWorker_GearHasCompsThatAffectStat
  name: FinalStatWorker_GearHasCompsThatAffectStat
  nameWithType: CompModularizationWeapon.FinalStatWorker_GearHasCompsThatAffectStat
  fullName: RW_ModularizationWeapon.CompModularizationWeapon.FinalStatWorker_GearHasCompsThatAffectStat
- uid: RW_ModularizationWeapon.CompModularizationWeapon.AllowSwap*
  commentId: Overload:RW_ModularizationWeapon.CompModularizationWeapon.AllowSwap
  name: AllowSwap
  nameWithType: CompModularizationWeapon.AllowSwap
  fullName: RW_ModularizationWeapon.CompModularizationWeapon.AllowSwap
- uid: RW_ModularizationWeapon.CompModularizationWeapon.SetTargetPart*
  commentId: Overload:RW_ModularizationWeapon.CompModularizationWeapon.SetTargetPart
  name: SetTargetPart
  nameWithType: CompModularizationWeapon.SetTargetPart
  fullName: RW_ModularizationWeapon.CompModularizationWeapon.SetTargetPart
- uid: Verse.LocalTargetInfo
  commentId: T:Verse.LocalTargetInfo
  parent: Verse
  isExternal: true
  name: LocalTargetInfo
  nameWithType: LocalTargetInfo
  fullName: Verse.LocalTargetInfo
- uid: RW_ModularizationWeapon.CompModularizationWeapon.GetTargetPart*
  commentId: Overload:RW_ModularizationWeapon.CompModularizationWeapon.GetTargetPart
  name: GetTargetPart
  nameWithType: CompModularizationWeapon.GetTargetPart
  fullName: RW_ModularizationWeapon.CompModularizationWeapon.GetTargetPart
- uid: RW_ModularizationWeapon.CompModularizationWeapon.SwapTargetPart*
  commentId: Overload:RW_ModularizationWeapon.CompModularizationWeapon.SwapTargetPart
  name: SwapTargetPart
  nameWithType: CompModularizationWeapon.SwapTargetPart
  fullName: RW_ModularizationWeapon.CompModularizationWeapon.SwapTargetPart
- uid: RW_ModularizationWeapon.CompModularizationWeapon.ClearTargetPart*
  commentId: Overload:RW_ModularizationWeapon.CompModularizationWeapon.ClearTargetPart
  name: ClearTargetPart
  nameWithType: CompModularizationWeapon.ClearTargetPart
  fullName: RW_ModularizationWeapon.CompModularizationWeapon.ClearTargetPart
- uid: RW_ModularizationWeapon.CompModularizationWeapon.GetEnumerator*
  commentId: Overload:RW_ModularizationWeapon.CompModularizationWeapon.GetEnumerator
  name: GetEnumerator
  nameWithType: CompModularizationWeapon.GetEnumerator
  fullName: RW_ModularizationWeapon.CompModularizationWeapon.GetEnumerator
- uid: System.Collections.Generic.IEnumerable{System.ValueTuple{System.String,Verse.Thing,RW_ModularizationWeapon.WeaponAttachmentProperties}}.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable{System.ValueTuple{System.String,Verse.Thing,RW_ModularizationWeapon.WeaponAttachmentProperties}}.GetEnumerator
  parent: System.Collections.Generic.IEnumerable{System.ValueTuple{System.String,Verse.Thing,RW_ModularizationWeapon.WeaponAttachmentProperties}}
  definition: System.Collections.Generic.IEnumerable`1.GetEnumerator
  name: GetEnumerator()
  nameWithType: IEnumerable<(String, Thing, WeaponAttachmentProperties)>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<System.ValueTuple<System.String, Verse.Thing, RW_ModularizationWeapon.WeaponAttachmentProperties>>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of (String, Thing, WeaponAttachmentProperties)(Of String, Thing, WeaponAttachmentProperties)).GetEnumerator()
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.ValueTuple(Of System.String, Verse.Thing, RW_ModularizationWeapon.WeaponAttachmentProperties)).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable<(String, Thing, WeaponAttachmentProperties)>.GetEnumerator
    fullName: System.Collections.Generic.IEnumerable<System.ValueTuple<System.String, Verse.Thing, RW_ModularizationWeapon.WeaponAttachmentProperties>>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable(Of (String, Thing, WeaponAttachmentProperties)(Of String, Thing, WeaponAttachmentProperties)).GetEnumerator
    fullName: System.Collections.Generic.IEnumerable(Of System.ValueTuple(Of System.String, Verse.Thing, RW_ModularizationWeapon.WeaponAttachmentProperties)).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerator{System.ValueTuple{System.String,Verse.Thing,RW_ModularizationWeapon.WeaponAttachmentProperties}}
  commentId: T:System.Collections.Generic.IEnumerator{System.ValueTuple{System.String,Verse.Thing,RW_ModularizationWeapon.WeaponAttachmentProperties}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerator`1
  name: IEnumerator<(T1, T2, T3)<String, Thing, WeaponAttachmentProperties>>
  nameWithType: IEnumerator<(T1, T2, T3)<String, Thing, WeaponAttachmentProperties>>
  fullName: System.Collections.Generic.IEnumerator<System.ValueTuple<System.String, Verse.Thing, RW_ModularizationWeapon.WeaponAttachmentProperties>>
  nameWithType.vb: IEnumerator(Of (T1, T2, T3)(Of String, Thing, WeaponAttachmentProperties))
  fullName.vb: System.Collections.Generic.IEnumerator(Of System.ValueTuple(Of System.String, Verse.Thing, RW_ModularizationWeapon.WeaponAttachmentProperties))
  name.vb: IEnumerator(Of (T1, T2, T3)(Of String, Thing, WeaponAttachmentProperties))
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.ValueTuple`3
    name: (T1, T2, T3)
    nameWithType: (T1, T2, T3)
    fullName: System.ValueTuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Verse.Thing
    name: Thing
    nameWithType: Thing
    fullName: Verse.Thing
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: RW_ModularizationWeapon.WeaponAttachmentProperties
    name: WeaponAttachmentProperties
    nameWithType: WeaponAttachmentProperties
    fullName: RW_ModularizationWeapon.WeaponAttachmentProperties
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.ValueTuple`3
    name: (T1, T2, T3)
    nameWithType: (T1, T2, T3)
    fullName: System.ValueTuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Verse.Thing
    name: Thing
    nameWithType: Thing
    fullName: Verse.Thing
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: RW_ModularizationWeapon.WeaponAttachmentProperties
    name: WeaponAttachmentProperties
    nameWithType: WeaponAttachmentProperties
    fullName: RW_ModularizationWeapon.WeaponAttachmentProperties
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable`1.GetEnumerator
  isExternal: true
  name: GetEnumerator()
  nameWithType: IEnumerable<T>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of T).GetEnumerator()
  fullName.vb: System.Collections.Generic.IEnumerable(Of T).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable<T>.GetEnumerator
    fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable(Of T).GetEnumerator
    fullName: System.Collections.Generic.IEnumerable(Of T).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerator`1
  commentId: T:System.Collections.Generic.IEnumerator`1
  isExternal: true
  name: IEnumerator<T>
  nameWithType: IEnumerator<T>
  fullName: System.Collections.Generic.IEnumerator<T>
  nameWithType.vb: IEnumerator(Of T)
  fullName.vb: System.Collections.Generic.IEnumerator(Of T)
  name.vb: IEnumerator(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: RW_ModularizationWeapon.CompModularizationWeapon.System#Collections#IEnumerable#GetEnumerator*
  commentId: Overload:RW_ModularizationWeapon.CompModularizationWeapon.System#Collections#IEnumerable#GetEnumerator
  name: IEnumerable.GetEnumerator
  nameWithType: CompModularizationWeapon.IEnumerable.GetEnumerator
  fullName: RW_ModularizationWeapon.CompModularizationWeapon.System.Collections.IEnumerable.GetEnumerator
  nameWithType.vb: CompModularizationWeapon.System.Collections.IEnumerable.GetEnumerator
  name.vb: System.Collections.IEnumerable.GetEnumerator
- uid: System.Collections.IEnumerable.GetEnumerator
  commentId: M:System.Collections.IEnumerable.GetEnumerator
  parent: System.Collections.IEnumerable
  isExternal: true
  name: GetEnumerator()
  nameWithType: IEnumerable.GetEnumerator()
  fullName: System.Collections.IEnumerable.GetEnumerator()
  spec.csharp:
  - uid: System.Collections.IEnumerable.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable.GetEnumerator
    fullName: System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.IEnumerable.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable.GetEnumerator
    fullName: System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IEnumerator
  commentId: T:System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: RW_ModularizationWeapon.CompModularizationWeapon.GetChildTreeViewOpend*
  commentId: Overload:RW_ModularizationWeapon.CompModularizationWeapon.GetChildTreeViewOpend
  name: GetChildTreeViewOpend
  nameWithType: CompModularizationWeapon.GetChildTreeViewOpend
  fullName: RW_ModularizationWeapon.CompModularizationWeapon.GetChildTreeViewOpend
- uid: RW_ModularizationWeapon.CompModularizationWeapon.SetChildTreeViewOpend*
  commentId: Overload:RW_ModularizationWeapon.CompModularizationWeapon.SetChildTreeViewOpend
  name: SetChildTreeViewOpend
  nameWithType: CompModularizationWeapon.SetChildTreeViewOpend
  fullName: RW_ModularizationWeapon.CompModularizationWeapon.SetChildTreeViewOpend
- uid: RW_ModularizationWeapon.CompModularizationWeapon.TreeViewDrawSize*
  commentId: Overload:RW_ModularizationWeapon.CompModularizationWeapon.TreeViewDrawSize
  name: TreeViewDrawSize
  nameWithType: CompModularizationWeapon.TreeViewDrawSize
  fullName: RW_ModularizationWeapon.CompModularizationWeapon.TreeViewDrawSize
- uid: UnityEngine.Vector2
  commentId: T:UnityEngine.Vector2
  parent: UnityEngine
  isExternal: true
  name: Vector2
  nameWithType: Vector2
  fullName: UnityEngine.Vector2
- uid: RW_ModularizationWeapon.CompModularizationWeapon.DrawChildTreeView*
  commentId: Overload:RW_ModularizationWeapon.CompModularizationWeapon.DrawChildTreeView
  name: DrawChildTreeView
  nameWithType: CompModularizationWeapon.DrawChildTreeView
  fullName: RW_ModularizationWeapon.CompModularizationWeapon.DrawChildTreeView
- uid: System.Action{System.String,Verse.Thing,RW_ModularizationWeapon.CompModularizationWeapon}
  commentId: T:System.Action{System.String,Verse.Thing,RW_ModularizationWeapon.CompModularizationWeapon}
  parent: System
  definition: System.Action`3
  name: Action<String, Thing, CompModularizationWeapon>
  nameWithType: Action<String, Thing, CompModularizationWeapon>
  fullName: System.Action<System.String, Verse.Thing, RW_ModularizationWeapon.CompModularizationWeapon>
  nameWithType.vb: Action(Of String, Thing, CompModularizationWeapon)
  fullName.vb: System.Action(Of System.String, Verse.Thing, RW_ModularizationWeapon.CompModularizationWeapon)
  name.vb: Action(Of String, Thing, CompModularizationWeapon)
  spec.csharp:
  - uid: System.Action`3
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Verse.Thing
    name: Thing
    nameWithType: Thing
    fullName: Verse.Thing
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: RW_ModularizationWeapon.CompModularizationWeapon
    name: CompModularizationWeapon
    nameWithType: CompModularizationWeapon
    fullName: RW_ModularizationWeapon.CompModularizationWeapon
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`3
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Verse.Thing
    name: Thing
    nameWithType: Thing
    fullName: Verse.Thing
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: RW_ModularizationWeapon.CompModularizationWeapon
    name: CompModularizationWeapon
    nameWithType: CompModularizationWeapon
    fullName: RW_ModularizationWeapon.CompModularizationWeapon
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.HashSet{System.ValueTuple{System.String,RW_ModularizationWeapon.CompModularizationWeapon}}
  commentId: T:System.Collections.Generic.HashSet{System.ValueTuple{System.String,RW_ModularizationWeapon.CompModularizationWeapon}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.HashSet`1
  name: HashSet<(T1, T2)<String, CompModularizationWeapon>>
  nameWithType: HashSet<(T1, T2)<String, CompModularizationWeapon>>
  fullName: System.Collections.Generic.HashSet<System.ValueTuple<System.String, RW_ModularizationWeapon.CompModularizationWeapon>>
  nameWithType.vb: HashSet(Of (T1, T2)(Of String, CompModularizationWeapon))
  fullName.vb: System.Collections.Generic.HashSet(Of System.ValueTuple(Of System.String, RW_ModularizationWeapon.CompModularizationWeapon))
  name.vb: HashSet(Of (T1, T2)(Of String, CompModularizationWeapon))
  spec.csharp:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    nameWithType: HashSet
    fullName: System.Collections.Generic.HashSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.ValueTuple`2
    name: (T1, T2)
    nameWithType: (T1, T2)
    fullName: System.ValueTuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: RW_ModularizationWeapon.CompModularizationWeapon
    name: CompModularizationWeapon
    nameWithType: CompModularizationWeapon
    fullName: RW_ModularizationWeapon.CompModularizationWeapon
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    nameWithType: HashSet
    fullName: System.Collections.Generic.HashSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.ValueTuple`2
    name: (T1, T2)
    nameWithType: (T1, T2)
    fullName: System.ValueTuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: RW_ModularizationWeapon.CompModularizationWeapon
    name: CompModularizationWeapon
    nameWithType: CompModularizationWeapon
    fullName: RW_ModularizationWeapon.CompModularizationWeapon
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action`3
  commentId: T:System.Action`3
  isExternal: true
  name: Action<T1, T2, T3>
  nameWithType: Action<T1, T2, T3>
  fullName: System.Action<T1, T2, T3>
  nameWithType.vb: Action(Of T1, T2, T3)
  fullName.vb: System.Action(Of T1, T2, T3)
  name.vb: Action(Of T1, T2, T3)
  spec.csharp:
  - uid: System.Action`3
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T3
    nameWithType: T3
    fullName: T3
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`3
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T3
    nameWithType: T3
    fullName: T3
  - name: )
    nameWithType: )
    fullName: )
- uid: RW_ModularizationWeapon.CompModularizationWeapon.VerbPropertiesRegiestInfoUpadte*
  commentId: Overload:RW_ModularizationWeapon.CompModularizationWeapon.VerbPropertiesRegiestInfoUpadte
  name: VerbPropertiesRegiestInfoUpadte
  nameWithType: CompModularizationWeapon.VerbPropertiesRegiestInfoUpadte
  fullName: RW_ModularizationWeapon.CompModularizationWeapon.VerbPropertiesRegiestInfoUpadte
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Collections.Generic.List{VerbPropertiesRegiestInfo}
  commentId: T:System.Collections.Generic.List{VerbPropertiesRegiestInfo}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<VerbPropertiesRegiestInfo>
  nameWithType: List<VerbPropertiesRegiestInfo>
  fullName: System.Collections.Generic.List<VerbPropertiesRegiestInfo>
  nameWithType.vb: List(Of VerbPropertiesRegiestInfo)
  fullName.vb: System.Collections.Generic.List(Of VerbPropertiesRegiestInfo)
  name.vb: List(Of VerbPropertiesRegiestInfo)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VerbPropertiesRegiestInfo
    name: VerbPropertiesRegiestInfo
    nameWithType: VerbPropertiesRegiestInfo
    fullName: VerbPropertiesRegiestInfo
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VerbPropertiesRegiestInfo
    name: VerbPropertiesRegiestInfo
    nameWithType: VerbPropertiesRegiestInfo
    fullName: VerbPropertiesRegiestInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: RW_ModularizationWeapon.CompModularizationWeapon.VerbToolRegiestInfoUpdate*
  commentId: Overload:RW_ModularizationWeapon.CompModularizationWeapon.VerbToolRegiestInfoUpdate
  name: VerbToolRegiestInfoUpdate
  nameWithType: CompModularizationWeapon.VerbToolRegiestInfoUpdate
  fullName: RW_ModularizationWeapon.CompModularizationWeapon.VerbToolRegiestInfoUpdate
- uid: System.Collections.Generic.List{VerbToolRegiestInfo}
  commentId: T:System.Collections.Generic.List{VerbToolRegiestInfo}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<VerbToolRegiestInfo>
  nameWithType: List<VerbToolRegiestInfo>
  fullName: System.Collections.Generic.List<VerbToolRegiestInfo>
  nameWithType.vb: List(Of VerbToolRegiestInfo)
  fullName.vb: System.Collections.Generic.List(Of VerbToolRegiestInfo)
  name.vb: List(Of VerbToolRegiestInfo)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VerbToolRegiestInfo
    name: VerbToolRegiestInfo
    nameWithType: VerbToolRegiestInfo
    fullName: VerbToolRegiestInfo
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VerbToolRegiestInfo
    name: VerbToolRegiestInfo
    nameWithType: VerbToolRegiestInfo
    fullName: VerbToolRegiestInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
