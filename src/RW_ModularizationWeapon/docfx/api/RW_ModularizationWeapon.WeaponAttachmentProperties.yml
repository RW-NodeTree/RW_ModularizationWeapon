### YamlMime:ManagedReference
items:
- uid: RW_ModularizationWeapon.WeaponAttachmentProperties
  commentId: T:RW_ModularizationWeapon.WeaponAttachmentProperties
  id: WeaponAttachmentProperties
  parent: RW_ModularizationWeapon
  children:
  - RW_ModularizationWeapon.WeaponAttachmentProperties.allowedExtraCompType
  - RW_ModularizationWeapon.WeaponAttachmentProperties.allowEmpty
  - RW_ModularizationWeapon.WeaponAttachmentProperties.compPropertiesBoolAndPatchByChildPart
  - RW_ModularizationWeapon.WeaponAttachmentProperties.compPropertiesBoolOrPatchByChildPart
  - RW_ModularizationWeapon.WeaponAttachmentProperties.compPropertiesMultiplierAffectHorizon
  - RW_ModularizationWeapon.WeaponAttachmentProperties.compPropertiesObjectPatchByChildPart
  - RW_ModularizationWeapon.WeaponAttachmentProperties.compPropertiesOffseterAffectHorizon
  - RW_ModularizationWeapon.WeaponAttachmentProperties.defultThing
  - RW_ModularizationWeapon.WeaponAttachmentProperties.drawWeight
  - RW_ModularizationWeapon.WeaponAttachmentProperties.filter
  - RW_ModularizationWeapon.WeaponAttachmentProperties.id
  - RW_ModularizationWeapon.WeaponAttachmentProperties.name
  - RW_ModularizationWeapon.WeaponAttachmentProperties.Name
  - RW_ModularizationWeapon.WeaponAttachmentProperties.notDraw
  - RW_ModularizationWeapon.WeaponAttachmentProperties.notUseTools
  - RW_ModularizationWeapon.WeaponAttachmentProperties.notUseVerbProperties
  - RW_ModularizationWeapon.WeaponAttachmentProperties.postion
  - RW_ModularizationWeapon.WeaponAttachmentProperties.postionInPixelSize
  - RW_ModularizationWeapon.WeaponAttachmentProperties.randomThingDefWeights
  - RW_ModularizationWeapon.WeaponAttachmentProperties.ResolveReferences
  - RW_ModularizationWeapon.WeaponAttachmentProperties.rotation
  - RW_ModularizationWeapon.WeaponAttachmentProperties.scale
  - RW_ModularizationWeapon.WeaponAttachmentProperties.statMultiplierAffectHorizon
  - RW_ModularizationWeapon.WeaponAttachmentProperties.statMultiplierAffectHorizonDefaultValue
  - RW_ModularizationWeapon.WeaponAttachmentProperties.statOffsetAffectHorizon
  - RW_ModularizationWeapon.WeaponAttachmentProperties.statOffsetAffectHorizonDefaultValue
  - RW_ModularizationWeapon.WeaponAttachmentProperties.statOtherPartMultiplierAffectHorizon
  - RW_ModularizationWeapon.WeaponAttachmentProperties.statOtherPartMultiplierAffectHorizonDefaultValue
  - RW_ModularizationWeapon.WeaponAttachmentProperties.statOtherPartOffseterAffectHorizon
  - RW_ModularizationWeapon.WeaponAttachmentProperties.statOtherPartOffseterAffectHorizonDefaultValue
  - RW_ModularizationWeapon.WeaponAttachmentProperties.toolsBoolAndPatchByChildPart
  - RW_ModularizationWeapon.WeaponAttachmentProperties.toolsBoolAndPatchByOtherPart
  - RW_ModularizationWeapon.WeaponAttachmentProperties.toolsBoolAndPatchByOtherPartDefaultValue
  - RW_ModularizationWeapon.WeaponAttachmentProperties.toolsBoolOrPatchByChildPart
  - RW_ModularizationWeapon.WeaponAttachmentProperties.toolsBoolOrPatchByOtherPart
  - RW_ModularizationWeapon.WeaponAttachmentProperties.toolsBoolOrPatchByOtherPartDefaultValue
  - RW_ModularizationWeapon.WeaponAttachmentProperties.toolsMultiplierAffectHorizon
  - RW_ModularizationWeapon.WeaponAttachmentProperties.toolsObjectPatchByChildPart
  - RW_ModularizationWeapon.WeaponAttachmentProperties.toolsObjectPatchByOtherPart
  - RW_ModularizationWeapon.WeaponAttachmentProperties.toolsObjectPatchByOtherPartDefaultValue
  - RW_ModularizationWeapon.WeaponAttachmentProperties.toolsOffseterAffectHorizon
  - RW_ModularizationWeapon.WeaponAttachmentProperties.toolsOtherPartMultiplierAffectHorizon
  - RW_ModularizationWeapon.WeaponAttachmentProperties.toolsOtherPartMultiplierAffectHorizonDefaultValue
  - RW_ModularizationWeapon.WeaponAttachmentProperties.toolsOtherPartOffseterAffectHorizon
  - RW_ModularizationWeapon.WeaponAttachmentProperties.toolsOtherPartOffseterAffectHorizonDefaultValue
  - RW_ModularizationWeapon.WeaponAttachmentProperties.Transfrom
  - RW_ModularizationWeapon.WeaponAttachmentProperties.UITexPath
  - RW_ModularizationWeapon.WeaponAttachmentProperties.UITexture
  - RW_ModularizationWeapon.WeaponAttachmentProperties.unchangeable
  - RW_ModularizationWeapon.WeaponAttachmentProperties.verbPropertiesBoolAndPatchByChildPart
  - RW_ModularizationWeapon.WeaponAttachmentProperties.verbPropertiesBoolAndPatchByOtherPart
  - RW_ModularizationWeapon.WeaponAttachmentProperties.verbPropertiesBoolAndPatchByOtherPartDefaultValue
  - RW_ModularizationWeapon.WeaponAttachmentProperties.verbPropertiesBoolOrPatchByChildPart
  - RW_ModularizationWeapon.WeaponAttachmentProperties.verbPropertiesBoolOrPatchByOtherPart
  - RW_ModularizationWeapon.WeaponAttachmentProperties.verbPropertiesBoolOrPatchByOtherPartDefaultValue
  - RW_ModularizationWeapon.WeaponAttachmentProperties.verbPropertiesMultiplierAffectHorizon
  - RW_ModularizationWeapon.WeaponAttachmentProperties.verbPropertiesObjectPatchByChildPart
  - RW_ModularizationWeapon.WeaponAttachmentProperties.verbPropertiesObjectPatchByOtherPart
  - RW_ModularizationWeapon.WeaponAttachmentProperties.verbPropertiesObjectPatchByOtherPartDefaultValue
  - RW_ModularizationWeapon.WeaponAttachmentProperties.verbPropertiesOffseterAffectHorizon
  - RW_ModularizationWeapon.WeaponAttachmentProperties.verbPropertiesOtherPartMultiplierAffectHorizon
  - RW_ModularizationWeapon.WeaponAttachmentProperties.verbPropertiesOtherPartMultiplierAffectHorizonDefaultValue
  - RW_ModularizationWeapon.WeaponAttachmentProperties.verbPropertiesOtherPartOffseterAffectHorizon
  - RW_ModularizationWeapon.WeaponAttachmentProperties.verbPropertiesOtherPartOffseterAffectHorizonDefaultValue
  langs:
  - csharp
  - vb
  name: WeaponAttachmentProperties
  nameWithType: WeaponAttachmentProperties
  fullName: RW_ModularizationWeapon.WeaponAttachmentProperties
  type: Class
  source:
    remote:
      path: src/RW_ModularizationWeapon/WeaponAttachmentProperties.cs
      branch: master
      repo: https://github.com/RW-NodeTree/RW_ModularizationWeapon.git
    id: WeaponAttachmentProperties
    path: WeaponAttachmentProperties.cs
    startLine: 11
  assemblies:
  - RW_ModularizationWeapon
  namespace: RW_ModularizationWeapon
  summary: "\nProperties of attach point\n"
  example: []
  syntax:
    content: public class WeaponAttachmentProperties
    content.vb: Public Class WeaponAttachmentProperties
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ToString
  - System.Object.ReferenceEquals(System.Object,System.Object)
  extensionMethods:
  - System.Object.RW_ModularizationWeapon.Tools.ToolsFunction.LogAllField
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: RW_ModularizationWeapon.WeaponAttachmentProperties.UITexture
  commentId: P:RW_ModularizationWeapon.WeaponAttachmentProperties.UITexture
  id: UITexture
  parent: RW_ModularizationWeapon.WeaponAttachmentProperties
  langs:
  - csharp
  - vb
  name: UITexture
  nameWithType: WeaponAttachmentProperties.UITexture
  fullName: RW_ModularizationWeapon.WeaponAttachmentProperties.UITexture
  type: Property
  source:
    remote:
      path: src/RW_ModularizationWeapon/WeaponAttachmentProperties.cs
      branch: master
      repo: https://github.com/RW-NodeTree/RW_ModularizationWeapon.git
    id: UITexture
    path: WeaponAttachmentProperties.cs
    startLine: 14
  assemblies:
  - RW_ModularizationWeapon
  namespace: RW_ModularizationWeapon
  syntax:
    content: public Texture2D UITexture { get; }
    parameters: []
    return:
      type: UnityEngine.Texture2D
    content.vb: Public ReadOnly Property UITexture As Texture2D
  overload: RW_ModularizationWeapon.WeaponAttachmentProperties.UITexture*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: RW_ModularizationWeapon.WeaponAttachmentProperties.Transfrom
  commentId: P:RW_ModularizationWeapon.WeaponAttachmentProperties.Transfrom
  id: Transfrom
  parent: RW_ModularizationWeapon.WeaponAttachmentProperties
  langs:
  - csharp
  - vb
  name: Transfrom
  nameWithType: WeaponAttachmentProperties.Transfrom
  fullName: RW_ModularizationWeapon.WeaponAttachmentProperties.Transfrom
  type: Property
  source:
    remote:
      path: src/RW_ModularizationWeapon/WeaponAttachmentProperties.cs
      branch: master
      repo: https://github.com/RW-NodeTree/RW_ModularizationWeapon.git
    id: Transfrom
    path: WeaponAttachmentProperties.cs
    startLine: 23
  assemblies:
  - RW_ModularizationWeapon
  namespace: RW_ModularizationWeapon
  syntax:
    content: public Matrix4x4 Transfrom { get; }
    parameters: []
    return:
      type: UnityEngine.Matrix4x4
    content.vb: Public ReadOnly Property Transfrom As Matrix4x4
  overload: RW_ModularizationWeapon.WeaponAttachmentProperties.Transfrom*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: RW_ModularizationWeapon.WeaponAttachmentProperties.Name
  commentId: P:RW_ModularizationWeapon.WeaponAttachmentProperties.Name
  id: Name
  parent: RW_ModularizationWeapon.WeaponAttachmentProperties
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: WeaponAttachmentProperties.Name
  fullName: RW_ModularizationWeapon.WeaponAttachmentProperties.Name
  type: Property
  source:
    remote:
      path: src/RW_ModularizationWeapon/WeaponAttachmentProperties.cs
      branch: master
      repo: https://github.com/RW-NodeTree/RW_ModularizationWeapon.git
    id: Name
    path: WeaponAttachmentProperties.cs
    startLine: 25
  assemblies:
  - RW_ModularizationWeapon
  namespace: RW_ModularizationWeapon
  syntax:
    content: public string Name { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Name As String
  overload: RW_ModularizationWeapon.WeaponAttachmentProperties.Name*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: RW_ModularizationWeapon.WeaponAttachmentProperties.ResolveReferences
  commentId: M:RW_ModularizationWeapon.WeaponAttachmentProperties.ResolveReferences
  id: ResolveReferences
  parent: RW_ModularizationWeapon.WeaponAttachmentProperties
  langs:
  - csharp
  - vb
  name: ResolveReferences()
  nameWithType: WeaponAttachmentProperties.ResolveReferences()
  fullName: RW_ModularizationWeapon.WeaponAttachmentProperties.ResolveReferences()
  type: Method
  source:
    remote:
      path: src/RW_ModularizationWeapon/WeaponAttachmentProperties.cs
      branch: master
      repo: https://github.com/RW-NodeTree/RW_ModularizationWeapon.git
    id: ResolveReferences
    path: WeaponAttachmentProperties.cs
    startLine: 28
  assemblies:
  - RW_ModularizationWeapon
  namespace: RW_ModularizationWeapon
  syntax:
    content: public void ResolveReferences()
    content.vb: Public Sub ResolveReferences
  overload: RW_ModularizationWeapon.WeaponAttachmentProperties.ResolveReferences*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: RW_ModularizationWeapon.WeaponAttachmentProperties.id
  commentId: F:RW_ModularizationWeapon.WeaponAttachmentProperties.id
  id: id
  parent: RW_ModularizationWeapon.WeaponAttachmentProperties
  langs:
  - csharp
  - vb
  name: id
  nameWithType: WeaponAttachmentProperties.id
  fullName: RW_ModularizationWeapon.WeaponAttachmentProperties.id
  type: Field
  source:
    remote:
      path: src/RW_ModularizationWeapon/WeaponAttachmentProperties.cs
      branch: master
      repo: https://github.com/RW-NodeTree/RW_ModularizationWeapon.git
    id: id
    path: WeaponAttachmentProperties.cs
    startLine: 177
  assemblies:
  - RW_ModularizationWeapon
  namespace: RW_ModularizationWeapon
  summary: "\nattach point unique id\n"
  example: []
  syntax:
    content: public string id
    return:
      type: System.String
    content.vb: Public id As String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: RW_ModularizationWeapon.WeaponAttachmentProperties.name
  commentId: F:RW_ModularizationWeapon.WeaponAttachmentProperties.name
  id: name
  parent: RW_ModularizationWeapon.WeaponAttachmentProperties
  langs:
  - csharp
  - vb
  name: name
  nameWithType: WeaponAttachmentProperties.name
  fullName: RW_ModularizationWeapon.WeaponAttachmentProperties.name
  type: Field
  source:
    remote:
      path: src/RW_ModularizationWeapon/WeaponAttachmentProperties.cs
      branch: master
      repo: https://github.com/RW-NodeTree/RW_ModularizationWeapon.git
    id: name
    path: WeaponAttachmentProperties.cs
    startLine: 181
  assemblies:
  - RW_ModularizationWeapon
  namespace: RW_ModularizationWeapon
  summary: "\nattach point name\n"
  example: []
  syntax:
    content: public string name
    return:
      type: System.String
    content.vb: Public name As String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: RW_ModularizationWeapon.WeaponAttachmentProperties.filter
  commentId: F:RW_ModularizationWeapon.WeaponAttachmentProperties.filter
  id: filter
  parent: RW_ModularizationWeapon.WeaponAttachmentProperties
  langs:
  - csharp
  - vb
  name: filter
  nameWithType: WeaponAttachmentProperties.filter
  fullName: RW_ModularizationWeapon.WeaponAttachmentProperties.filter
  type: Field
  source:
    remote:
      path: src/RW_ModularizationWeapon/WeaponAttachmentProperties.cs
      branch: master
      repo: https://github.com/RW-NodeTree/RW_ModularizationWeapon.git
    id: filter
    path: WeaponAttachmentProperties.cs
    startLine: 185
  assemblies:
  - RW_ModularizationWeapon
  namespace: RW_ModularizationWeapon
  summary: "\nwhat thing can attach on this attach point\n"
  example: []
  syntax:
    content: public ThingFilter filter
    return:
      type: Verse.ThingFilter
    content.vb: Public filter As ThingFilter
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: RW_ModularizationWeapon.WeaponAttachmentProperties.defultThing
  commentId: F:RW_ModularizationWeapon.WeaponAttachmentProperties.defultThing
  id: defultThing
  parent: RW_ModularizationWeapon.WeaponAttachmentProperties
  langs:
  - csharp
  - vb
  name: defultThing
  nameWithType: WeaponAttachmentProperties.defultThing
  fullName: RW_ModularizationWeapon.WeaponAttachmentProperties.defultThing
  type: Field
  source:
    remote:
      path: src/RW_ModularizationWeapon/WeaponAttachmentProperties.cs
      branch: master
      repo: https://github.com/RW-NodeTree/RW_ModularizationWeapon.git
    id: defultThing
    path: WeaponAttachmentProperties.cs
    startLine: 189
  assemblies:
  - RW_ModularizationWeapon
  namespace: RW_ModularizationWeapon
  summary: "\ndefultThing when create part instance, if `CompProperties_ModularizationWeapon.setRandomPartWhenCreate` is `false` or create by crafting\n"
  example: []
  syntax:
    content: public ThingDef defultThing
    return:
      type: Verse.ThingDef
    content.vb: Public defultThing As ThingDef
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: RW_ModularizationWeapon.WeaponAttachmentProperties.randomThingDefWeights
  commentId: F:RW_ModularizationWeapon.WeaponAttachmentProperties.randomThingDefWeights
  id: randomThingDefWeights
  parent: RW_ModularizationWeapon.WeaponAttachmentProperties
  langs:
  - csharp
  - vb
  name: randomThingDefWeights
  nameWithType: WeaponAttachmentProperties.randomThingDefWeights
  fullName: RW_ModularizationWeapon.WeaponAttachmentProperties.randomThingDefWeights
  type: Field
  source:
    remote:
      path: src/RW_ModularizationWeapon/WeaponAttachmentProperties.cs
      branch: master
      repo: https://github.com/RW-NodeTree/RW_ModularizationWeapon.git
    id: randomThingDefWeights
    path: WeaponAttachmentProperties.cs
    startLine: 193
  assemblies:
  - RW_ModularizationWeapon
  namespace: RW_ModularizationWeapon
  summary: "\nrandom part weight of this attach point\n"
  example: []
  syntax:
    content: public List<ThingDefCountClass> randomThingDefWeights
    return:
      type: System.Collections.Generic.List{Verse.ThingDefCountClass}
    content.vb: Public randomThingDefWeights As List(Of ThingDefCountClass)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: RW_ModularizationWeapon.WeaponAttachmentProperties.postion
  commentId: F:RW_ModularizationWeapon.WeaponAttachmentProperties.postion
  id: postion
  parent: RW_ModularizationWeapon.WeaponAttachmentProperties
  langs:
  - csharp
  - vb
  name: postion
  nameWithType: WeaponAttachmentProperties.postion
  fullName: RW_ModularizationWeapon.WeaponAttachmentProperties.postion
  type: Field
  source:
    remote:
      path: src/RW_ModularizationWeapon/WeaponAttachmentProperties.cs
      branch: master
      repo: https://github.com/RW-NodeTree/RW_ModularizationWeapon.git
    id: postion
    path: WeaponAttachmentProperties.cs
    startLine: 197
  assemblies:
  - RW_ModularizationWeapon
  namespace: RW_ModularizationWeapon
  summary: "\nattach point drawing postion\n"
  example: []
  syntax:
    content: public Vector3 postion
    return:
      type: UnityEngine.Vector3
    content.vb: Public postion As Vector3
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: RW_ModularizationWeapon.WeaponAttachmentProperties.rotation
  commentId: F:RW_ModularizationWeapon.WeaponAttachmentProperties.rotation
  id: rotation
  parent: RW_ModularizationWeapon.WeaponAttachmentProperties
  langs:
  - csharp
  - vb
  name: rotation
  nameWithType: WeaponAttachmentProperties.rotation
  fullName: RW_ModularizationWeapon.WeaponAttachmentProperties.rotation
  type: Field
  source:
    remote:
      path: src/RW_ModularizationWeapon/WeaponAttachmentProperties.cs
      branch: master
      repo: https://github.com/RW-NodeTree/RW_ModularizationWeapon.git
    id: rotation
    path: WeaponAttachmentProperties.cs
    startLine: 201
  assemblies:
  - RW_ModularizationWeapon
  namespace: RW_ModularizationWeapon
  summary: "\nattach point drawing rotation(Euler)\n"
  example: []
  syntax:
    content: public Vector3 rotation
    return:
      type: UnityEngine.Vector3
    content.vb: Public rotation As Vector3
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: RW_ModularizationWeapon.WeaponAttachmentProperties.scale
  commentId: F:RW_ModularizationWeapon.WeaponAttachmentProperties.scale
  id: scale
  parent: RW_ModularizationWeapon.WeaponAttachmentProperties
  langs:
  - csharp
  - vb
  name: scale
  nameWithType: WeaponAttachmentProperties.scale
  fullName: RW_ModularizationWeapon.WeaponAttachmentProperties.scale
  type: Field
  source:
    remote:
      path: src/RW_ModularizationWeapon/WeaponAttachmentProperties.cs
      branch: master
      repo: https://github.com/RW-NodeTree/RW_ModularizationWeapon.git
    id: scale
    path: WeaponAttachmentProperties.cs
    startLine: 205
  assemblies:
  - RW_ModularizationWeapon
  namespace: RW_ModularizationWeapon
  summary: "\nattach point drawing scale\n"
  example: []
  syntax:
    content: public Vector3 scale
    return:
      type: UnityEngine.Vector3
    content.vb: Public scale As Vector3
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: RW_ModularizationWeapon.WeaponAttachmentProperties.UITexPath
  commentId: F:RW_ModularizationWeapon.WeaponAttachmentProperties.UITexPath
  id: UITexPath
  parent: RW_ModularizationWeapon.WeaponAttachmentProperties
  langs:
  - csharp
  - vb
  name: UITexPath
  nameWithType: WeaponAttachmentProperties.UITexPath
  fullName: RW_ModularizationWeapon.WeaponAttachmentProperties.UITexPath
  type: Field
  source:
    remote:
      path: src/RW_ModularizationWeapon/WeaponAttachmentProperties.cs
      branch: master
      repo: https://github.com/RW-NodeTree/RW_ModularizationWeapon.git
    id: UITexPath
    path: WeaponAttachmentProperties.cs
    startLine: 209
  assemblies:
  - RW_ModularizationWeapon
  namespace: RW_ModularizationWeapon
  summary: "\nattach point ICON textrue path\n"
  example: []
  syntax:
    content: public string UITexPath
    return:
      type: System.String
    content.vb: Public UITexPath As String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: RW_ModularizationWeapon.WeaponAttachmentProperties.allowEmpty
  commentId: F:RW_ModularizationWeapon.WeaponAttachmentProperties.allowEmpty
  id: allowEmpty
  parent: RW_ModularizationWeapon.WeaponAttachmentProperties
  langs:
  - csharp
  - vb
  name: allowEmpty
  nameWithType: WeaponAttachmentProperties.allowEmpty
  fullName: RW_ModularizationWeapon.WeaponAttachmentProperties.allowEmpty
  type: Field
  source:
    remote:
      path: src/RW_ModularizationWeapon/WeaponAttachmentProperties.cs
      branch: master
      repo: https://github.com/RW-NodeTree/RW_ModularizationWeapon.git
    id: allowEmpty
    path: WeaponAttachmentProperties.cs
    startLine: 213
  assemblies:
  - RW_ModularizationWeapon
  namespace: RW_ModularizationWeapon
  summary: "\nif it&apos;s **`true`**, it&apos;s able to set empty part on this attach point\n"
  example: []
  syntax:
    content: public bool allowEmpty
    return:
      type: System.Boolean
    content.vb: Public allowEmpty As Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: RW_ModularizationWeapon.WeaponAttachmentProperties.unchangeable
  commentId: F:RW_ModularizationWeapon.WeaponAttachmentProperties.unchangeable
  id: unchangeable
  parent: RW_ModularizationWeapon.WeaponAttachmentProperties
  langs:
  - csharp
  - vb
  name: unchangeable
  nameWithType: WeaponAttachmentProperties.unchangeable
  fullName: RW_ModularizationWeapon.WeaponAttachmentProperties.unchangeable
  type: Field
  source:
    remote:
      path: src/RW_ModularizationWeapon/WeaponAttachmentProperties.cs
      branch: master
      repo: https://github.com/RW-NodeTree/RW_ModularizationWeapon.git
    id: unchangeable
    path: WeaponAttachmentProperties.cs
    startLine: 217
  assemblies:
  - RW_ModularizationWeapon
  namespace: RW_ModularizationWeapon
  summary: "\nnot allow this attach point set to other attachment\n"
  example: []
  syntax:
    content: public bool unchangeable
    return:
      type: System.Boolean
    content.vb: Public unchangeable As Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: RW_ModularizationWeapon.WeaponAttachmentProperties.notDraw
  commentId: F:RW_ModularizationWeapon.WeaponAttachmentProperties.notDraw
  id: notDraw
  parent: RW_ModularizationWeapon.WeaponAttachmentProperties
  langs:
  - csharp
  - vb
  name: notDraw
  nameWithType: WeaponAttachmentProperties.notDraw
  fullName: RW_ModularizationWeapon.WeaponAttachmentProperties.notDraw
  type: Field
  source:
    remote:
      path: src/RW_ModularizationWeapon/WeaponAttachmentProperties.cs
      branch: master
      repo: https://github.com/RW-NodeTree/RW_ModularizationWeapon.git
    id: notDraw
    path: WeaponAttachmentProperties.cs
    startLine: 221
  assemblies:
  - RW_ModularizationWeapon
  namespace: RW_ModularizationWeapon
  summary: "\nif it&apos;s **`true`**, this attach point and it&apos;s child attach point will not rendering\n"
  example: []
  syntax:
    content: public bool notDraw
    return:
      type: System.Boolean
    content.vb: Public notDraw As Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: RW_ModularizationWeapon.WeaponAttachmentProperties.notUseTools
  commentId: F:RW_ModularizationWeapon.WeaponAttachmentProperties.notUseTools
  id: notUseTools
  parent: RW_ModularizationWeapon.WeaponAttachmentProperties
  langs:
  - csharp
  - vb
  name: notUseTools
  nameWithType: WeaponAttachmentProperties.notUseTools
  fullName: RW_ModularizationWeapon.WeaponAttachmentProperties.notUseTools
  type: Field
  source:
    remote:
      path: src/RW_ModularizationWeapon/WeaponAttachmentProperties.cs
      branch: master
      repo: https://github.com/RW-NodeTree/RW_ModularizationWeapon.git
    id: notUseTools
    path: WeaponAttachmentProperties.cs
    startLine: 225
  assemblies:
  - RW_ModularizationWeapon
  namespace: RW_ModularizationWeapon
  summary: "\nif it&apos;s **`true`**,the parent part will not able to read `IVerbOwner.Tools` from this attach point\n"
  example: []
  syntax:
    content: public bool notUseTools
    return:
      type: System.Boolean
    content.vb: Public notUseTools As Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: RW_ModularizationWeapon.WeaponAttachmentProperties.notUseVerbProperties
  commentId: F:RW_ModularizationWeapon.WeaponAttachmentProperties.notUseVerbProperties
  id: notUseVerbProperties
  parent: RW_ModularizationWeapon.WeaponAttachmentProperties
  langs:
  - csharp
  - vb
  name: notUseVerbProperties
  nameWithType: WeaponAttachmentProperties.notUseVerbProperties
  fullName: RW_ModularizationWeapon.WeaponAttachmentProperties.notUseVerbProperties
  type: Field
  source:
    remote:
      path: src/RW_ModularizationWeapon/WeaponAttachmentProperties.cs
      branch: master
      repo: https://github.com/RW-NodeTree/RW_ModularizationWeapon.git
    id: notUseVerbProperties
    path: WeaponAttachmentProperties.cs
    startLine: 229
  assemblies:
  - RW_ModularizationWeapon
  namespace: RW_ModularizationWeapon
  summary: "\nif it&apos;s **`true`**,the parent part will not able to read `IVerbOwner.VerbProperties` from this attach point\n"
  example: []
  syntax:
    content: public bool notUseVerbProperties
    return:
      type: System.Boolean
    content.vb: Public notUseVerbProperties As Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: RW_ModularizationWeapon.WeaponAttachmentProperties.postionInPixelSize
  commentId: F:RW_ModularizationWeapon.WeaponAttachmentProperties.postionInPixelSize
  id: postionInPixelSize
  parent: RW_ModularizationWeapon.WeaponAttachmentProperties
  langs:
  - csharp
  - vb
  name: postionInPixelSize
  nameWithType: WeaponAttachmentProperties.postionInPixelSize
  fullName: RW_ModularizationWeapon.WeaponAttachmentProperties.postionInPixelSize
  type: Field
  source:
    remote:
      path: src/RW_ModularizationWeapon/WeaponAttachmentProperties.cs
      branch: master
      repo: https://github.com/RW-NodeTree/RW_ModularizationWeapon.git
    id: postionInPixelSize
    path: WeaponAttachmentProperties.cs
    startLine: 233
  assemblies:
  - RW_ModularizationWeapon
  namespace: RW_ModularizationWeapon
  summary: "\nif is&apos;s **`true`**,the randering postion of this part will offset by the pixel scale\n"
  example: []
  syntax:
    content: public bool postionInPixelSize
    return:
      type: System.Boolean
    content.vb: Public postionInPixelSize As Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: RW_ModularizationWeapon.WeaponAttachmentProperties.drawWeight
  commentId: F:RW_ModularizationWeapon.WeaponAttachmentProperties.drawWeight
  id: drawWeight
  parent: RW_ModularizationWeapon.WeaponAttachmentProperties
  langs:
  - csharp
  - vb
  name: drawWeight
  nameWithType: WeaponAttachmentProperties.drawWeight
  fullName: RW_ModularizationWeapon.WeaponAttachmentProperties.drawWeight
  type: Field
  source:
    remote:
      path: src/RW_ModularizationWeapon/WeaponAttachmentProperties.cs
      branch: master
      repo: https://github.com/RW-NodeTree/RW_ModularizationWeapon.git
    id: drawWeight
    path: WeaponAttachmentProperties.cs
    startLine: 237
  assemblies:
  - RW_ModularizationWeapon
  namespace: RW_ModularizationWeapon
  summary: "\ndrawing weight of this attach point\n"
  example: []
  syntax:
    content: public int drawWeight
    return:
      type: System.Int32
    content.vb: Public drawWeight As Integer
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: RW_ModularizationWeapon.WeaponAttachmentProperties.allowedExtraCompType
  commentId: F:RW_ModularizationWeapon.WeaponAttachmentProperties.allowedExtraCompType
  id: allowedExtraCompType
  parent: RW_ModularizationWeapon.WeaponAttachmentProperties
  langs:
  - csharp
  - vb
  name: allowedExtraCompType
  nameWithType: WeaponAttachmentProperties.allowedExtraCompType
  fullName: RW_ModularizationWeapon.WeaponAttachmentProperties.allowedExtraCompType
  type: Field
  source:
    remote:
      path: src/RW_ModularizationWeapon/WeaponAttachmentProperties.cs
      branch: master
      repo: https://github.com/RW-NodeTree/RW_ModularizationWeapon.git
    id: allowedExtraCompType
    path: WeaponAttachmentProperties.cs
    startLine: 241
  assemblies:
  - RW_ModularizationWeapon
  namespace: RW_ModularizationWeapon
  summary: "\nallowed extra ThingComp type that will append on perent\n"
  example: []
  syntax:
    content: public List<Type> allowedExtraCompType
    return:
      type: System.Collections.Generic.List{System.Type}
    content.vb: Public allowedExtraCompType As List(Of Type)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: RW_ModularizationWeapon.WeaponAttachmentProperties.verbPropertiesOffseterAffectHorizon
  commentId: F:RW_ModularizationWeapon.WeaponAttachmentProperties.verbPropertiesOffseterAffectHorizon
  id: verbPropertiesOffseterAffectHorizon
  parent: RW_ModularizationWeapon.WeaponAttachmentProperties
  langs:
  - csharp
  - vb
  name: verbPropertiesOffseterAffectHorizon
  nameWithType: WeaponAttachmentProperties.verbPropertiesOffseterAffectHorizon
  fullName: RW_ModularizationWeapon.WeaponAttachmentProperties.verbPropertiesOffseterAffectHorizon
  type: Field
  source:
    remote:
      path: src/RW_ModularizationWeapon/WeaponAttachmentProperties.cs
      branch: master
      repo: https://github.com/RW-NodeTree/RW_ModularizationWeapon.git
    id: verbPropertiesOffseterAffectHorizon
    path: WeaponAttachmentProperties.cs
    startLine: 246
  assemblies:
  - RW_ModularizationWeapon
  namespace: RW_ModularizationWeapon
  syntax:
    content: public FieldReaderDgitList<VerbProperties> verbPropertiesOffseterAffectHorizon
    return:
      type: RW_ModularizationWeapon.FieldReaderDgitList{Verse.VerbProperties}
    content.vb: Public verbPropertiesOffseterAffectHorizon As FieldReaderDgitList(Of VerbProperties)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: RW_ModularizationWeapon.WeaponAttachmentProperties.toolsOffseterAffectHorizon
  commentId: F:RW_ModularizationWeapon.WeaponAttachmentProperties.toolsOffseterAffectHorizon
  id: toolsOffseterAffectHorizon
  parent: RW_ModularizationWeapon.WeaponAttachmentProperties
  langs:
  - csharp
  - vb
  name: toolsOffseterAffectHorizon
  nameWithType: WeaponAttachmentProperties.toolsOffseterAffectHorizon
  fullName: RW_ModularizationWeapon.WeaponAttachmentProperties.toolsOffseterAffectHorizon
  type: Field
  source:
    remote:
      path: src/RW_ModularizationWeapon/WeaponAttachmentProperties.cs
      branch: master
      repo: https://github.com/RW-NodeTree/RW_ModularizationWeapon.git
    id: toolsOffseterAffectHorizon
    path: WeaponAttachmentProperties.cs
    startLine: 248
  assemblies:
  - RW_ModularizationWeapon
  namespace: RW_ModularizationWeapon
  syntax:
    content: public FieldReaderDgitList<Tool> toolsOffseterAffectHorizon
    return:
      type: RW_ModularizationWeapon.FieldReaderDgitList{Verse.Tool}
    content.vb: Public toolsOffseterAffectHorizon As FieldReaderDgitList(Of Tool)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: RW_ModularizationWeapon.WeaponAttachmentProperties.compPropertiesOffseterAffectHorizon
  commentId: F:RW_ModularizationWeapon.WeaponAttachmentProperties.compPropertiesOffseterAffectHorizon
  id: compPropertiesOffseterAffectHorizon
  parent: RW_ModularizationWeapon.WeaponAttachmentProperties
  langs:
  - csharp
  - vb
  name: compPropertiesOffseterAffectHorizon
  nameWithType: WeaponAttachmentProperties.compPropertiesOffseterAffectHorizon
  fullName: RW_ModularizationWeapon.WeaponAttachmentProperties.compPropertiesOffseterAffectHorizon
  type: Field
  source:
    remote:
      path: src/RW_ModularizationWeapon/WeaponAttachmentProperties.cs
      branch: master
      repo: https://github.com/RW-NodeTree/RW_ModularizationWeapon.git
    id: compPropertiesOffseterAffectHorizon
    path: WeaponAttachmentProperties.cs
    startLine: 250
  assemblies:
  - RW_ModularizationWeapon
  namespace: RW_ModularizationWeapon
  syntax:
    content: public FieldReaderDgitList<CompProperties> compPropertiesOffseterAffectHorizon
    return:
      type: RW_ModularizationWeapon.FieldReaderDgitList{Verse.CompProperties}
    content.vb: Public compPropertiesOffseterAffectHorizon As FieldReaderDgitList(Of CompProperties)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: RW_ModularizationWeapon.WeaponAttachmentProperties.statOffsetAffectHorizon
  commentId: F:RW_ModularizationWeapon.WeaponAttachmentProperties.statOffsetAffectHorizon
  id: statOffsetAffectHorizon
  parent: RW_ModularizationWeapon.WeaponAttachmentProperties
  langs:
  - csharp
  - vb
  name: statOffsetAffectHorizon
  nameWithType: WeaponAttachmentProperties.statOffsetAffectHorizon
  fullName: RW_ModularizationWeapon.WeaponAttachmentProperties.statOffsetAffectHorizon
  type: Field
  source:
    remote:
      path: src/RW_ModularizationWeapon/WeaponAttachmentProperties.cs
      branch: master
      repo: https://github.com/RW-NodeTree/RW_ModularizationWeapon.git
    id: statOffsetAffectHorizon
    path: WeaponAttachmentProperties.cs
    startLine: 252
  assemblies:
  - RW_ModularizationWeapon
  namespace: RW_ModularizationWeapon
  syntax:
    content: public List<StatModifier> statOffsetAffectHorizon
    return:
      type: System.Collections.Generic.List{RimWorld.StatModifier}
    content.vb: Public statOffsetAffectHorizon As List(Of StatModifier)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: RW_ModularizationWeapon.WeaponAttachmentProperties.statOffsetAffectHorizonDefaultValue
  commentId: F:RW_ModularizationWeapon.WeaponAttachmentProperties.statOffsetAffectHorizonDefaultValue
  id: statOffsetAffectHorizonDefaultValue
  parent: RW_ModularizationWeapon.WeaponAttachmentProperties
  langs:
  - csharp
  - vb
  name: statOffsetAffectHorizonDefaultValue
  nameWithType: WeaponAttachmentProperties.statOffsetAffectHorizonDefaultValue
  fullName: RW_ModularizationWeapon.WeaponAttachmentProperties.statOffsetAffectHorizonDefaultValue
  type: Field
  source:
    remote:
      path: src/RW_ModularizationWeapon/WeaponAttachmentProperties.cs
      branch: master
      repo: https://github.com/RW-NodeTree/RW_ModularizationWeapon.git
    id: statOffsetAffectHorizonDefaultValue
    path: WeaponAttachmentProperties.cs
    startLine: 254
  assemblies:
  - RW_ModularizationWeapon
  namespace: RW_ModularizationWeapon
  syntax:
    content: public float statOffsetAffectHorizonDefaultValue
    return:
      type: System.Single
    content.vb: Public statOffsetAffectHorizonDefaultValue As Single
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: RW_ModularizationWeapon.WeaponAttachmentProperties.verbPropertiesOtherPartOffseterAffectHorizon
  commentId: F:RW_ModularizationWeapon.WeaponAttachmentProperties.verbPropertiesOtherPartOffseterAffectHorizon
  id: verbPropertiesOtherPartOffseterAffectHorizon
  parent: RW_ModularizationWeapon.WeaponAttachmentProperties
  langs:
  - csharp
  - vb
  name: verbPropertiesOtherPartOffseterAffectHorizon
  nameWithType: WeaponAttachmentProperties.verbPropertiesOtherPartOffseterAffectHorizon
  fullName: RW_ModularizationWeapon.WeaponAttachmentProperties.verbPropertiesOtherPartOffseterAffectHorizon
  type: Field
  source:
    remote:
      path: src/RW_ModularizationWeapon/WeaponAttachmentProperties.cs
      branch: master
      repo: https://github.com/RW-NodeTree/RW_ModularizationWeapon.git
    id: verbPropertiesOtherPartOffseterAffectHorizon
    path: WeaponAttachmentProperties.cs
    startLine: 258
  assemblies:
  - RW_ModularizationWeapon
  namespace: RW_ModularizationWeapon
  syntax:
    content: public Dictionary<string, FieldReaderDgitList<VerbProperties>> verbPropertiesOtherPartOffseterAffectHorizon
    return:
      type: System.Collections.Generic.Dictionary{System.String,RW_ModularizationWeapon.FieldReaderDgitList{Verse.VerbProperties}}
    content.vb: Public verbPropertiesOtherPartOffseterAffectHorizon As Dictionary(Of String, FieldReaderDgitList(Of VerbProperties))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: RW_ModularizationWeapon.WeaponAttachmentProperties.toolsOtherPartOffseterAffectHorizon
  commentId: F:RW_ModularizationWeapon.WeaponAttachmentProperties.toolsOtherPartOffseterAffectHorizon
  id: toolsOtherPartOffseterAffectHorizon
  parent: RW_ModularizationWeapon.WeaponAttachmentProperties
  langs:
  - csharp
  - vb
  name: toolsOtherPartOffseterAffectHorizon
  nameWithType: WeaponAttachmentProperties.toolsOtherPartOffseterAffectHorizon
  fullName: RW_ModularizationWeapon.WeaponAttachmentProperties.toolsOtherPartOffseterAffectHorizon
  type: Field
  source:
    remote:
      path: src/RW_ModularizationWeapon/WeaponAttachmentProperties.cs
      branch: master
      repo: https://github.com/RW-NodeTree/RW_ModularizationWeapon.git
    id: toolsOtherPartOffseterAffectHorizon
    path: WeaponAttachmentProperties.cs
    startLine: 260
  assemblies:
  - RW_ModularizationWeapon
  namespace: RW_ModularizationWeapon
  syntax:
    content: public Dictionary<string, FieldReaderDgitList<Tool>> toolsOtherPartOffseterAffectHorizon
    return:
      type: System.Collections.Generic.Dictionary{System.String,RW_ModularizationWeapon.FieldReaderDgitList{Verse.Tool}}
    content.vb: Public toolsOtherPartOffseterAffectHorizon As Dictionary(Of String, FieldReaderDgitList(Of Tool))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: RW_ModularizationWeapon.WeaponAttachmentProperties.statOtherPartOffseterAffectHorizon
  commentId: F:RW_ModularizationWeapon.WeaponAttachmentProperties.statOtherPartOffseterAffectHorizon
  id: statOtherPartOffseterAffectHorizon
  parent: RW_ModularizationWeapon.WeaponAttachmentProperties
  langs:
  - csharp
  - vb
  name: statOtherPartOffseterAffectHorizon
  nameWithType: WeaponAttachmentProperties.statOtherPartOffseterAffectHorizon
  fullName: RW_ModularizationWeapon.WeaponAttachmentProperties.statOtherPartOffseterAffectHorizon
  type: Field
  source:
    remote:
      path: src/RW_ModularizationWeapon/WeaponAttachmentProperties.cs
      branch: master
      repo: https://github.com/RW-NodeTree/RW_ModularizationWeapon.git
    id: statOtherPartOffseterAffectHorizon
    path: WeaponAttachmentProperties.cs
    startLine: 262
  assemblies:
  - RW_ModularizationWeapon
  namespace: RW_ModularizationWeapon
  syntax:
    content: public Dictionary<string, List<StatModifier>> statOtherPartOffseterAffectHorizon
    return:
      type: System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{RimWorld.StatModifier}}
    content.vb: Public statOtherPartOffseterAffectHorizon As Dictionary(Of String, List(Of StatModifier))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: RW_ModularizationWeapon.WeaponAttachmentProperties.verbPropertiesOtherPartOffseterAffectHorizonDefaultValue
  commentId: F:RW_ModularizationWeapon.WeaponAttachmentProperties.verbPropertiesOtherPartOffseterAffectHorizonDefaultValue
  id: verbPropertiesOtherPartOffseterAffectHorizonDefaultValue
  parent: RW_ModularizationWeapon.WeaponAttachmentProperties
  langs:
  - csharp
  - vb
  name: verbPropertiesOtherPartOffseterAffectHorizonDefaultValue
  nameWithType: WeaponAttachmentProperties.verbPropertiesOtherPartOffseterAffectHorizonDefaultValue
  fullName: RW_ModularizationWeapon.WeaponAttachmentProperties.verbPropertiesOtherPartOffseterAffectHorizonDefaultValue
  type: Field
  source:
    remote:
      path: src/RW_ModularizationWeapon/WeaponAttachmentProperties.cs
      branch: master
      repo: https://github.com/RW-NodeTree/RW_ModularizationWeapon.git
    id: verbPropertiesOtherPartOffseterAffectHorizonDefaultValue
    path: WeaponAttachmentProperties.cs
    startLine: 264
  assemblies:
  - RW_ModularizationWeapon
  namespace: RW_ModularizationWeapon
  syntax:
    content: public float verbPropertiesOtherPartOffseterAffectHorizonDefaultValue
    return:
      type: System.Single
    content.vb: Public verbPropertiesOtherPartOffseterAffectHorizonDefaultValue As Single
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: RW_ModularizationWeapon.WeaponAttachmentProperties.toolsOtherPartOffseterAffectHorizonDefaultValue
  commentId: F:RW_ModularizationWeapon.WeaponAttachmentProperties.toolsOtherPartOffseterAffectHorizonDefaultValue
  id: toolsOtherPartOffseterAffectHorizonDefaultValue
  parent: RW_ModularizationWeapon.WeaponAttachmentProperties
  langs:
  - csharp
  - vb
  name: toolsOtherPartOffseterAffectHorizonDefaultValue
  nameWithType: WeaponAttachmentProperties.toolsOtherPartOffseterAffectHorizonDefaultValue
  fullName: RW_ModularizationWeapon.WeaponAttachmentProperties.toolsOtherPartOffseterAffectHorizonDefaultValue
  type: Field
  source:
    remote:
      path: src/RW_ModularizationWeapon/WeaponAttachmentProperties.cs
      branch: master
      repo: https://github.com/RW-NodeTree/RW_ModularizationWeapon.git
    id: toolsOtherPartOffseterAffectHorizonDefaultValue
    path: WeaponAttachmentProperties.cs
    startLine: 266
  assemblies:
  - RW_ModularizationWeapon
  namespace: RW_ModularizationWeapon
  syntax:
    content: public float toolsOtherPartOffseterAffectHorizonDefaultValue
    return:
      type: System.Single
    content.vb: Public toolsOtherPartOffseterAffectHorizonDefaultValue As Single
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: RW_ModularizationWeapon.WeaponAttachmentProperties.statOtherPartOffseterAffectHorizonDefaultValue
  commentId: F:RW_ModularizationWeapon.WeaponAttachmentProperties.statOtherPartOffseterAffectHorizonDefaultValue
  id: statOtherPartOffseterAffectHorizonDefaultValue
  parent: RW_ModularizationWeapon.WeaponAttachmentProperties
  langs:
  - csharp
  - vb
  name: statOtherPartOffseterAffectHorizonDefaultValue
  nameWithType: WeaponAttachmentProperties.statOtherPartOffseterAffectHorizonDefaultValue
  fullName: RW_ModularizationWeapon.WeaponAttachmentProperties.statOtherPartOffseterAffectHorizonDefaultValue
  type: Field
  source:
    remote:
      path: src/RW_ModularizationWeapon/WeaponAttachmentProperties.cs
      branch: master
      repo: https://github.com/RW-NodeTree/RW_ModularizationWeapon.git
    id: statOtherPartOffseterAffectHorizonDefaultValue
    path: WeaponAttachmentProperties.cs
    startLine: 268
  assemblies:
  - RW_ModularizationWeapon
  namespace: RW_ModularizationWeapon
  syntax:
    content: public float statOtherPartOffseterAffectHorizonDefaultValue
    return:
      type: System.Single
    content.vb: Public statOtherPartOffseterAffectHorizonDefaultValue As Single
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: RW_ModularizationWeapon.WeaponAttachmentProperties.verbPropertiesMultiplierAffectHorizon
  commentId: F:RW_ModularizationWeapon.WeaponAttachmentProperties.verbPropertiesMultiplierAffectHorizon
  id: verbPropertiesMultiplierAffectHorizon
  parent: RW_ModularizationWeapon.WeaponAttachmentProperties
  langs:
  - csharp
  - vb
  name: verbPropertiesMultiplierAffectHorizon
  nameWithType: WeaponAttachmentProperties.verbPropertiesMultiplierAffectHorizon
  fullName: RW_ModularizationWeapon.WeaponAttachmentProperties.verbPropertiesMultiplierAffectHorizon
  type: Field
  source:
    remote:
      path: src/RW_ModularizationWeapon/WeaponAttachmentProperties.cs
      branch: master
      repo: https://github.com/RW-NodeTree/RW_ModularizationWeapon.git
    id: verbPropertiesMultiplierAffectHorizon
    path: WeaponAttachmentProperties.cs
    startLine: 275
  assemblies:
  - RW_ModularizationWeapon
  namespace: RW_ModularizationWeapon
  syntax:
    content: public FieldReaderDgitList<VerbProperties> verbPropertiesMultiplierAffectHorizon
    return:
      type: RW_ModularizationWeapon.FieldReaderDgitList{Verse.VerbProperties}
    content.vb: Public verbPropertiesMultiplierAffectHorizon As FieldReaderDgitList(Of VerbProperties)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: RW_ModularizationWeapon.WeaponAttachmentProperties.toolsMultiplierAffectHorizon
  commentId: F:RW_ModularizationWeapon.WeaponAttachmentProperties.toolsMultiplierAffectHorizon
  id: toolsMultiplierAffectHorizon
  parent: RW_ModularizationWeapon.WeaponAttachmentProperties
  langs:
  - csharp
  - vb
  name: toolsMultiplierAffectHorizon
  nameWithType: WeaponAttachmentProperties.toolsMultiplierAffectHorizon
  fullName: RW_ModularizationWeapon.WeaponAttachmentProperties.toolsMultiplierAffectHorizon
  type: Field
  source:
    remote:
      path: src/RW_ModularizationWeapon/WeaponAttachmentProperties.cs
      branch: master
      repo: https://github.com/RW-NodeTree/RW_ModularizationWeapon.git
    id: toolsMultiplierAffectHorizon
    path: WeaponAttachmentProperties.cs
    startLine: 277
  assemblies:
  - RW_ModularizationWeapon
  namespace: RW_ModularizationWeapon
  syntax:
    content: public FieldReaderDgitList<Tool> toolsMultiplierAffectHorizon
    return:
      type: RW_ModularizationWeapon.FieldReaderDgitList{Verse.Tool}
    content.vb: Public toolsMultiplierAffectHorizon As FieldReaderDgitList(Of Tool)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: RW_ModularizationWeapon.WeaponAttachmentProperties.compPropertiesMultiplierAffectHorizon
  commentId: F:RW_ModularizationWeapon.WeaponAttachmentProperties.compPropertiesMultiplierAffectHorizon
  id: compPropertiesMultiplierAffectHorizon
  parent: RW_ModularizationWeapon.WeaponAttachmentProperties
  langs:
  - csharp
  - vb
  name: compPropertiesMultiplierAffectHorizon
  nameWithType: WeaponAttachmentProperties.compPropertiesMultiplierAffectHorizon
  fullName: RW_ModularizationWeapon.WeaponAttachmentProperties.compPropertiesMultiplierAffectHorizon
  type: Field
  source:
    remote:
      path: src/RW_ModularizationWeapon/WeaponAttachmentProperties.cs
      branch: master
      repo: https://github.com/RW-NodeTree/RW_ModularizationWeapon.git
    id: compPropertiesMultiplierAffectHorizon
    path: WeaponAttachmentProperties.cs
    startLine: 279
  assemblies:
  - RW_ModularizationWeapon
  namespace: RW_ModularizationWeapon
  syntax:
    content: public FieldReaderDgitList<CompProperties> compPropertiesMultiplierAffectHorizon
    return:
      type: RW_ModularizationWeapon.FieldReaderDgitList{Verse.CompProperties}
    content.vb: Public compPropertiesMultiplierAffectHorizon As FieldReaderDgitList(Of CompProperties)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: RW_ModularizationWeapon.WeaponAttachmentProperties.statMultiplierAffectHorizon
  commentId: F:RW_ModularizationWeapon.WeaponAttachmentProperties.statMultiplierAffectHorizon
  id: statMultiplierAffectHorizon
  parent: RW_ModularizationWeapon.WeaponAttachmentProperties
  langs:
  - csharp
  - vb
  name: statMultiplierAffectHorizon
  nameWithType: WeaponAttachmentProperties.statMultiplierAffectHorizon
  fullName: RW_ModularizationWeapon.WeaponAttachmentProperties.statMultiplierAffectHorizon
  type: Field
  source:
    remote:
      path: src/RW_ModularizationWeapon/WeaponAttachmentProperties.cs
      branch: master
      repo: https://github.com/RW-NodeTree/RW_ModularizationWeapon.git
    id: statMultiplierAffectHorizon
    path: WeaponAttachmentProperties.cs
    startLine: 281
  assemblies:
  - RW_ModularizationWeapon
  namespace: RW_ModularizationWeapon
  syntax:
    content: public List<StatModifier> statMultiplierAffectHorizon
    return:
      type: System.Collections.Generic.List{RimWorld.StatModifier}
    content.vb: Public statMultiplierAffectHorizon As List(Of StatModifier)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: RW_ModularizationWeapon.WeaponAttachmentProperties.statMultiplierAffectHorizonDefaultValue
  commentId: F:RW_ModularizationWeapon.WeaponAttachmentProperties.statMultiplierAffectHorizonDefaultValue
  id: statMultiplierAffectHorizonDefaultValue
  parent: RW_ModularizationWeapon.WeaponAttachmentProperties
  langs:
  - csharp
  - vb
  name: statMultiplierAffectHorizonDefaultValue
  nameWithType: WeaponAttachmentProperties.statMultiplierAffectHorizonDefaultValue
  fullName: RW_ModularizationWeapon.WeaponAttachmentProperties.statMultiplierAffectHorizonDefaultValue
  type: Field
  source:
    remote:
      path: src/RW_ModularizationWeapon/WeaponAttachmentProperties.cs
      branch: master
      repo: https://github.com/RW-NodeTree/RW_ModularizationWeapon.git
    id: statMultiplierAffectHorizonDefaultValue
    path: WeaponAttachmentProperties.cs
    startLine: 283
  assemblies:
  - RW_ModularizationWeapon
  namespace: RW_ModularizationWeapon
  syntax:
    content: public float statMultiplierAffectHorizonDefaultValue
    return:
      type: System.Single
    content.vb: Public statMultiplierAffectHorizonDefaultValue As Single
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: RW_ModularizationWeapon.WeaponAttachmentProperties.verbPropertiesOtherPartMultiplierAffectHorizon
  commentId: F:RW_ModularizationWeapon.WeaponAttachmentProperties.verbPropertiesOtherPartMultiplierAffectHorizon
  id: verbPropertiesOtherPartMultiplierAffectHorizon
  parent: RW_ModularizationWeapon.WeaponAttachmentProperties
  langs:
  - csharp
  - vb
  name: verbPropertiesOtherPartMultiplierAffectHorizon
  nameWithType: WeaponAttachmentProperties.verbPropertiesOtherPartMultiplierAffectHorizon
  fullName: RW_ModularizationWeapon.WeaponAttachmentProperties.verbPropertiesOtherPartMultiplierAffectHorizon
  type: Field
  source:
    remote:
      path: src/RW_ModularizationWeapon/WeaponAttachmentProperties.cs
      branch: master
      repo: https://github.com/RW-NodeTree/RW_ModularizationWeapon.git
    id: verbPropertiesOtherPartMultiplierAffectHorizon
    path: WeaponAttachmentProperties.cs
    startLine: 287
  assemblies:
  - RW_ModularizationWeapon
  namespace: RW_ModularizationWeapon
  syntax:
    content: public Dictionary<string, FieldReaderDgitList<VerbProperties>> verbPropertiesOtherPartMultiplierAffectHorizon
    return:
      type: System.Collections.Generic.Dictionary{System.String,RW_ModularizationWeapon.FieldReaderDgitList{Verse.VerbProperties}}
    content.vb: Public verbPropertiesOtherPartMultiplierAffectHorizon As Dictionary(Of String, FieldReaderDgitList(Of VerbProperties))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: RW_ModularizationWeapon.WeaponAttachmentProperties.toolsOtherPartMultiplierAffectHorizon
  commentId: F:RW_ModularizationWeapon.WeaponAttachmentProperties.toolsOtherPartMultiplierAffectHorizon
  id: toolsOtherPartMultiplierAffectHorizon
  parent: RW_ModularizationWeapon.WeaponAttachmentProperties
  langs:
  - csharp
  - vb
  name: toolsOtherPartMultiplierAffectHorizon
  nameWithType: WeaponAttachmentProperties.toolsOtherPartMultiplierAffectHorizon
  fullName: RW_ModularizationWeapon.WeaponAttachmentProperties.toolsOtherPartMultiplierAffectHorizon
  type: Field
  source:
    remote:
      path: src/RW_ModularizationWeapon/WeaponAttachmentProperties.cs
      branch: master
      repo: https://github.com/RW-NodeTree/RW_ModularizationWeapon.git
    id: toolsOtherPartMultiplierAffectHorizon
    path: WeaponAttachmentProperties.cs
    startLine: 289
  assemblies:
  - RW_ModularizationWeapon
  namespace: RW_ModularizationWeapon
  syntax:
    content: public Dictionary<string, FieldReaderDgitList<Tool>> toolsOtherPartMultiplierAffectHorizon
    return:
      type: System.Collections.Generic.Dictionary{System.String,RW_ModularizationWeapon.FieldReaderDgitList{Verse.Tool}}
    content.vb: Public toolsOtherPartMultiplierAffectHorizon As Dictionary(Of String, FieldReaderDgitList(Of Tool))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: RW_ModularizationWeapon.WeaponAttachmentProperties.statOtherPartMultiplierAffectHorizon
  commentId: F:RW_ModularizationWeapon.WeaponAttachmentProperties.statOtherPartMultiplierAffectHorizon
  id: statOtherPartMultiplierAffectHorizon
  parent: RW_ModularizationWeapon.WeaponAttachmentProperties
  langs:
  - csharp
  - vb
  name: statOtherPartMultiplierAffectHorizon
  nameWithType: WeaponAttachmentProperties.statOtherPartMultiplierAffectHorizon
  fullName: RW_ModularizationWeapon.WeaponAttachmentProperties.statOtherPartMultiplierAffectHorizon
  type: Field
  source:
    remote:
      path: src/RW_ModularizationWeapon/WeaponAttachmentProperties.cs
      branch: master
      repo: https://github.com/RW-NodeTree/RW_ModularizationWeapon.git
    id: statOtherPartMultiplierAffectHorizon
    path: WeaponAttachmentProperties.cs
    startLine: 291
  assemblies:
  - RW_ModularizationWeapon
  namespace: RW_ModularizationWeapon
  syntax:
    content: public Dictionary<string, List<StatModifier>> statOtherPartMultiplierAffectHorizon
    return:
      type: System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{RimWorld.StatModifier}}
    content.vb: Public statOtherPartMultiplierAffectHorizon As Dictionary(Of String, List(Of StatModifier))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: RW_ModularizationWeapon.WeaponAttachmentProperties.verbPropertiesOtherPartMultiplierAffectHorizonDefaultValue
  commentId: F:RW_ModularizationWeapon.WeaponAttachmentProperties.verbPropertiesOtherPartMultiplierAffectHorizonDefaultValue
  id: verbPropertiesOtherPartMultiplierAffectHorizonDefaultValue
  parent: RW_ModularizationWeapon.WeaponAttachmentProperties
  langs:
  - csharp
  - vb
  name: verbPropertiesOtherPartMultiplierAffectHorizonDefaultValue
  nameWithType: WeaponAttachmentProperties.verbPropertiesOtherPartMultiplierAffectHorizonDefaultValue
  fullName: RW_ModularizationWeapon.WeaponAttachmentProperties.verbPropertiesOtherPartMultiplierAffectHorizonDefaultValue
  type: Field
  source:
    remote:
      path: src/RW_ModularizationWeapon/WeaponAttachmentProperties.cs
      branch: master
      repo: https://github.com/RW-NodeTree/RW_ModularizationWeapon.git
    id: verbPropertiesOtherPartMultiplierAffectHorizonDefaultValue
    path: WeaponAttachmentProperties.cs
    startLine: 293
  assemblies:
  - RW_ModularizationWeapon
  namespace: RW_ModularizationWeapon
  syntax:
    content: public float verbPropertiesOtherPartMultiplierAffectHorizonDefaultValue
    return:
      type: System.Single
    content.vb: Public verbPropertiesOtherPartMultiplierAffectHorizonDefaultValue As Single
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: RW_ModularizationWeapon.WeaponAttachmentProperties.toolsOtherPartMultiplierAffectHorizonDefaultValue
  commentId: F:RW_ModularizationWeapon.WeaponAttachmentProperties.toolsOtherPartMultiplierAffectHorizonDefaultValue
  id: toolsOtherPartMultiplierAffectHorizonDefaultValue
  parent: RW_ModularizationWeapon.WeaponAttachmentProperties
  langs:
  - csharp
  - vb
  name: toolsOtherPartMultiplierAffectHorizonDefaultValue
  nameWithType: WeaponAttachmentProperties.toolsOtherPartMultiplierAffectHorizonDefaultValue
  fullName: RW_ModularizationWeapon.WeaponAttachmentProperties.toolsOtherPartMultiplierAffectHorizonDefaultValue
  type: Field
  source:
    remote:
      path: src/RW_ModularizationWeapon/WeaponAttachmentProperties.cs
      branch: master
      repo: https://github.com/RW-NodeTree/RW_ModularizationWeapon.git
    id: toolsOtherPartMultiplierAffectHorizonDefaultValue
    path: WeaponAttachmentProperties.cs
    startLine: 295
  assemblies:
  - RW_ModularizationWeapon
  namespace: RW_ModularizationWeapon
  syntax:
    content: public float toolsOtherPartMultiplierAffectHorizonDefaultValue
    return:
      type: System.Single
    content.vb: Public toolsOtherPartMultiplierAffectHorizonDefaultValue As Single
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: RW_ModularizationWeapon.WeaponAttachmentProperties.statOtherPartMultiplierAffectHorizonDefaultValue
  commentId: F:RW_ModularizationWeapon.WeaponAttachmentProperties.statOtherPartMultiplierAffectHorizonDefaultValue
  id: statOtherPartMultiplierAffectHorizonDefaultValue
  parent: RW_ModularizationWeapon.WeaponAttachmentProperties
  langs:
  - csharp
  - vb
  name: statOtherPartMultiplierAffectHorizonDefaultValue
  nameWithType: WeaponAttachmentProperties.statOtherPartMultiplierAffectHorizonDefaultValue
  fullName: RW_ModularizationWeapon.WeaponAttachmentProperties.statOtherPartMultiplierAffectHorizonDefaultValue
  type: Field
  source:
    remote:
      path: src/RW_ModularizationWeapon/WeaponAttachmentProperties.cs
      branch: master
      repo: https://github.com/RW-NodeTree/RW_ModularizationWeapon.git
    id: statOtherPartMultiplierAffectHorizonDefaultValue
    path: WeaponAttachmentProperties.cs
    startLine: 297
  assemblies:
  - RW_ModularizationWeapon
  namespace: RW_ModularizationWeapon
  syntax:
    content: public float statOtherPartMultiplierAffectHorizonDefaultValue
    return:
      type: System.Single
    content.vb: Public statOtherPartMultiplierAffectHorizonDefaultValue As Single
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: RW_ModularizationWeapon.WeaponAttachmentProperties.verbPropertiesBoolAndPatchByChildPart
  commentId: F:RW_ModularizationWeapon.WeaponAttachmentProperties.verbPropertiesBoolAndPatchByChildPart
  id: verbPropertiesBoolAndPatchByChildPart
  parent: RW_ModularizationWeapon.WeaponAttachmentProperties
  langs:
  - csharp
  - vb
  name: verbPropertiesBoolAndPatchByChildPart
  nameWithType: WeaponAttachmentProperties.verbPropertiesBoolAndPatchByChildPart
  fullName: RW_ModularizationWeapon.WeaponAttachmentProperties.verbPropertiesBoolAndPatchByChildPart
  type: Field
  source:
    remote:
      path: src/RW_ModularizationWeapon/WeaponAttachmentProperties.cs
      branch: master
      repo: https://github.com/RW-NodeTree/RW_ModularizationWeapon.git
    id: verbPropertiesBoolAndPatchByChildPart
    path: WeaponAttachmentProperties.cs
    startLine: 305
  assemblies:
  - RW_ModularizationWeapon
  namespace: RW_ModularizationWeapon
  syntax:
    content: public FieldReaderBoolList<VerbProperties> verbPropertiesBoolAndPatchByChildPart
    return:
      type: RW_ModularizationWeapon.FieldReaderBoolList{Verse.VerbProperties}
    content.vb: Public verbPropertiesBoolAndPatchByChildPart As FieldReaderBoolList(Of VerbProperties)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: RW_ModularizationWeapon.WeaponAttachmentProperties.toolsBoolAndPatchByChildPart
  commentId: F:RW_ModularizationWeapon.WeaponAttachmentProperties.toolsBoolAndPatchByChildPart
  id: toolsBoolAndPatchByChildPart
  parent: RW_ModularizationWeapon.WeaponAttachmentProperties
  langs:
  - csharp
  - vb
  name: toolsBoolAndPatchByChildPart
  nameWithType: WeaponAttachmentProperties.toolsBoolAndPatchByChildPart
  fullName: RW_ModularizationWeapon.WeaponAttachmentProperties.toolsBoolAndPatchByChildPart
  type: Field
  source:
    remote:
      path: src/RW_ModularizationWeapon/WeaponAttachmentProperties.cs
      branch: master
      repo: https://github.com/RW-NodeTree/RW_ModularizationWeapon.git
    id: toolsBoolAndPatchByChildPart
    path: WeaponAttachmentProperties.cs
    startLine: 307
  assemblies:
  - RW_ModularizationWeapon
  namespace: RW_ModularizationWeapon
  syntax:
    content: public FieldReaderBoolList<Tool> toolsBoolAndPatchByChildPart
    return:
      type: RW_ModularizationWeapon.FieldReaderBoolList{Verse.Tool}
    content.vb: Public toolsBoolAndPatchByChildPart As FieldReaderBoolList(Of Tool)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: RW_ModularizationWeapon.WeaponAttachmentProperties.compPropertiesBoolAndPatchByChildPart
  commentId: F:RW_ModularizationWeapon.WeaponAttachmentProperties.compPropertiesBoolAndPatchByChildPart
  id: compPropertiesBoolAndPatchByChildPart
  parent: RW_ModularizationWeapon.WeaponAttachmentProperties
  langs:
  - csharp
  - vb
  name: compPropertiesBoolAndPatchByChildPart
  nameWithType: WeaponAttachmentProperties.compPropertiesBoolAndPatchByChildPart
  fullName: RW_ModularizationWeapon.WeaponAttachmentProperties.compPropertiesBoolAndPatchByChildPart
  type: Field
  source:
    remote:
      path: src/RW_ModularizationWeapon/WeaponAttachmentProperties.cs
      branch: master
      repo: https://github.com/RW-NodeTree/RW_ModularizationWeapon.git
    id: compPropertiesBoolAndPatchByChildPart
    path: WeaponAttachmentProperties.cs
    startLine: 309
  assemblies:
  - RW_ModularizationWeapon
  namespace: RW_ModularizationWeapon
  syntax:
    content: public FieldReaderBoolList<CompProperties> compPropertiesBoolAndPatchByChildPart
    return:
      type: RW_ModularizationWeapon.FieldReaderBoolList{Verse.CompProperties}
    content.vb: Public compPropertiesBoolAndPatchByChildPart As FieldReaderBoolList(Of CompProperties)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: RW_ModularizationWeapon.WeaponAttachmentProperties.verbPropertiesBoolAndPatchByOtherPart
  commentId: F:RW_ModularizationWeapon.WeaponAttachmentProperties.verbPropertiesBoolAndPatchByOtherPart
  id: verbPropertiesBoolAndPatchByOtherPart
  parent: RW_ModularizationWeapon.WeaponAttachmentProperties
  langs:
  - csharp
  - vb
  name: verbPropertiesBoolAndPatchByOtherPart
  nameWithType: WeaponAttachmentProperties.verbPropertiesBoolAndPatchByOtherPart
  fullName: RW_ModularizationWeapon.WeaponAttachmentProperties.verbPropertiesBoolAndPatchByOtherPart
  type: Field
  source:
    remote:
      path: src/RW_ModularizationWeapon/WeaponAttachmentProperties.cs
      branch: master
      repo: https://github.com/RW-NodeTree/RW_ModularizationWeapon.git
    id: verbPropertiesBoolAndPatchByOtherPart
    path: WeaponAttachmentProperties.cs
    startLine: 313
  assemblies:
  - RW_ModularizationWeapon
  namespace: RW_ModularizationWeapon
  syntax:
    content: public Dictionary<string, FieldReaderBoolList<VerbProperties>> verbPropertiesBoolAndPatchByOtherPart
    return:
      type: System.Collections.Generic.Dictionary{System.String,RW_ModularizationWeapon.FieldReaderBoolList{Verse.VerbProperties}}
    content.vb: Public verbPropertiesBoolAndPatchByOtherPart As Dictionary(Of String, FieldReaderBoolList(Of VerbProperties))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: RW_ModularizationWeapon.WeaponAttachmentProperties.toolsBoolAndPatchByOtherPart
  commentId: F:RW_ModularizationWeapon.WeaponAttachmentProperties.toolsBoolAndPatchByOtherPart
  id: toolsBoolAndPatchByOtherPart
  parent: RW_ModularizationWeapon.WeaponAttachmentProperties
  langs:
  - csharp
  - vb
  name: toolsBoolAndPatchByOtherPart
  nameWithType: WeaponAttachmentProperties.toolsBoolAndPatchByOtherPart
  fullName: RW_ModularizationWeapon.WeaponAttachmentProperties.toolsBoolAndPatchByOtherPart
  type: Field
  source:
    remote:
      path: src/RW_ModularizationWeapon/WeaponAttachmentProperties.cs
      branch: master
      repo: https://github.com/RW-NodeTree/RW_ModularizationWeapon.git
    id: toolsBoolAndPatchByOtherPart
    path: WeaponAttachmentProperties.cs
    startLine: 315
  assemblies:
  - RW_ModularizationWeapon
  namespace: RW_ModularizationWeapon
  syntax:
    content: public Dictionary<string, FieldReaderBoolList<Tool>> toolsBoolAndPatchByOtherPart
    return:
      type: System.Collections.Generic.Dictionary{System.String,RW_ModularizationWeapon.FieldReaderBoolList{Verse.Tool}}
    content.vb: Public toolsBoolAndPatchByOtherPart As Dictionary(Of String, FieldReaderBoolList(Of Tool))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: RW_ModularizationWeapon.WeaponAttachmentProperties.verbPropertiesBoolAndPatchByOtherPartDefaultValue
  commentId: F:RW_ModularizationWeapon.WeaponAttachmentProperties.verbPropertiesBoolAndPatchByOtherPartDefaultValue
  id: verbPropertiesBoolAndPatchByOtherPartDefaultValue
  parent: RW_ModularizationWeapon.WeaponAttachmentProperties
  langs:
  - csharp
  - vb
  name: verbPropertiesBoolAndPatchByOtherPartDefaultValue
  nameWithType: WeaponAttachmentProperties.verbPropertiesBoolAndPatchByOtherPartDefaultValue
  fullName: RW_ModularizationWeapon.WeaponAttachmentProperties.verbPropertiesBoolAndPatchByOtherPartDefaultValue
  type: Field
  source:
    remote:
      path: src/RW_ModularizationWeapon/WeaponAttachmentProperties.cs
      branch: master
      repo: https://github.com/RW-NodeTree/RW_ModularizationWeapon.git
    id: verbPropertiesBoolAndPatchByOtherPartDefaultValue
    path: WeaponAttachmentProperties.cs
    startLine: 317
  assemblies:
  - RW_ModularizationWeapon
  namespace: RW_ModularizationWeapon
  syntax:
    content: public bool verbPropertiesBoolAndPatchByOtherPartDefaultValue
    return:
      type: System.Boolean
    content.vb: Public verbPropertiesBoolAndPatchByOtherPartDefaultValue As Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: RW_ModularizationWeapon.WeaponAttachmentProperties.toolsBoolAndPatchByOtherPartDefaultValue
  commentId: F:RW_ModularizationWeapon.WeaponAttachmentProperties.toolsBoolAndPatchByOtherPartDefaultValue
  id: toolsBoolAndPatchByOtherPartDefaultValue
  parent: RW_ModularizationWeapon.WeaponAttachmentProperties
  langs:
  - csharp
  - vb
  name: toolsBoolAndPatchByOtherPartDefaultValue
  nameWithType: WeaponAttachmentProperties.toolsBoolAndPatchByOtherPartDefaultValue
  fullName: RW_ModularizationWeapon.WeaponAttachmentProperties.toolsBoolAndPatchByOtherPartDefaultValue
  type: Field
  source:
    remote:
      path: src/RW_ModularizationWeapon/WeaponAttachmentProperties.cs
      branch: master
      repo: https://github.com/RW-NodeTree/RW_ModularizationWeapon.git
    id: toolsBoolAndPatchByOtherPartDefaultValue
    path: WeaponAttachmentProperties.cs
    startLine: 319
  assemblies:
  - RW_ModularizationWeapon
  namespace: RW_ModularizationWeapon
  syntax:
    content: public bool toolsBoolAndPatchByOtherPartDefaultValue
    return:
      type: System.Boolean
    content.vb: Public toolsBoolAndPatchByOtherPartDefaultValue As Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: RW_ModularizationWeapon.WeaponAttachmentProperties.verbPropertiesBoolOrPatchByChildPart
  commentId: F:RW_ModularizationWeapon.WeaponAttachmentProperties.verbPropertiesBoolOrPatchByChildPart
  id: verbPropertiesBoolOrPatchByChildPart
  parent: RW_ModularizationWeapon.WeaponAttachmentProperties
  langs:
  - csharp
  - vb
  name: verbPropertiesBoolOrPatchByChildPart
  nameWithType: WeaponAttachmentProperties.verbPropertiesBoolOrPatchByChildPart
  fullName: RW_ModularizationWeapon.WeaponAttachmentProperties.verbPropertiesBoolOrPatchByChildPart
  type: Field
  source:
    remote:
      path: src/RW_ModularizationWeapon/WeaponAttachmentProperties.cs
      branch: master
      repo: https://github.com/RW-NodeTree/RW_ModularizationWeapon.git
    id: verbPropertiesBoolOrPatchByChildPart
    path: WeaponAttachmentProperties.cs
    startLine: 327
  assemblies:
  - RW_ModularizationWeapon
  namespace: RW_ModularizationWeapon
  syntax:
    content: public FieldReaderBoolList<VerbProperties> verbPropertiesBoolOrPatchByChildPart
    return:
      type: RW_ModularizationWeapon.FieldReaderBoolList{Verse.VerbProperties}
    content.vb: Public verbPropertiesBoolOrPatchByChildPart As FieldReaderBoolList(Of VerbProperties)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: RW_ModularizationWeapon.WeaponAttachmentProperties.toolsBoolOrPatchByChildPart
  commentId: F:RW_ModularizationWeapon.WeaponAttachmentProperties.toolsBoolOrPatchByChildPart
  id: toolsBoolOrPatchByChildPart
  parent: RW_ModularizationWeapon.WeaponAttachmentProperties
  langs:
  - csharp
  - vb
  name: toolsBoolOrPatchByChildPart
  nameWithType: WeaponAttachmentProperties.toolsBoolOrPatchByChildPart
  fullName: RW_ModularizationWeapon.WeaponAttachmentProperties.toolsBoolOrPatchByChildPart
  type: Field
  source:
    remote:
      path: src/RW_ModularizationWeapon/WeaponAttachmentProperties.cs
      branch: master
      repo: https://github.com/RW-NodeTree/RW_ModularizationWeapon.git
    id: toolsBoolOrPatchByChildPart
    path: WeaponAttachmentProperties.cs
    startLine: 329
  assemblies:
  - RW_ModularizationWeapon
  namespace: RW_ModularizationWeapon
  syntax:
    content: public FieldReaderBoolList<Tool> toolsBoolOrPatchByChildPart
    return:
      type: RW_ModularizationWeapon.FieldReaderBoolList{Verse.Tool}
    content.vb: Public toolsBoolOrPatchByChildPart As FieldReaderBoolList(Of Tool)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: RW_ModularizationWeapon.WeaponAttachmentProperties.compPropertiesBoolOrPatchByChildPart
  commentId: F:RW_ModularizationWeapon.WeaponAttachmentProperties.compPropertiesBoolOrPatchByChildPart
  id: compPropertiesBoolOrPatchByChildPart
  parent: RW_ModularizationWeapon.WeaponAttachmentProperties
  langs:
  - csharp
  - vb
  name: compPropertiesBoolOrPatchByChildPart
  nameWithType: WeaponAttachmentProperties.compPropertiesBoolOrPatchByChildPart
  fullName: RW_ModularizationWeapon.WeaponAttachmentProperties.compPropertiesBoolOrPatchByChildPart
  type: Field
  source:
    remote:
      path: src/RW_ModularizationWeapon/WeaponAttachmentProperties.cs
      branch: master
      repo: https://github.com/RW-NodeTree/RW_ModularizationWeapon.git
    id: compPropertiesBoolOrPatchByChildPart
    path: WeaponAttachmentProperties.cs
    startLine: 331
  assemblies:
  - RW_ModularizationWeapon
  namespace: RW_ModularizationWeapon
  syntax:
    content: public FieldReaderBoolList<CompProperties> compPropertiesBoolOrPatchByChildPart
    return:
      type: RW_ModularizationWeapon.FieldReaderBoolList{Verse.CompProperties}
    content.vb: Public compPropertiesBoolOrPatchByChildPart As FieldReaderBoolList(Of CompProperties)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: RW_ModularizationWeapon.WeaponAttachmentProperties.verbPropertiesBoolOrPatchByOtherPart
  commentId: F:RW_ModularizationWeapon.WeaponAttachmentProperties.verbPropertiesBoolOrPatchByOtherPart
  id: verbPropertiesBoolOrPatchByOtherPart
  parent: RW_ModularizationWeapon.WeaponAttachmentProperties
  langs:
  - csharp
  - vb
  name: verbPropertiesBoolOrPatchByOtherPart
  nameWithType: WeaponAttachmentProperties.verbPropertiesBoolOrPatchByOtherPart
  fullName: RW_ModularizationWeapon.WeaponAttachmentProperties.verbPropertiesBoolOrPatchByOtherPart
  type: Field
  source:
    remote:
      path: src/RW_ModularizationWeapon/WeaponAttachmentProperties.cs
      branch: master
      repo: https://github.com/RW-NodeTree/RW_ModularizationWeapon.git
    id: verbPropertiesBoolOrPatchByOtherPart
    path: WeaponAttachmentProperties.cs
    startLine: 335
  assemblies:
  - RW_ModularizationWeapon
  namespace: RW_ModularizationWeapon
  syntax:
    content: public Dictionary<string, FieldReaderBoolList<VerbProperties>> verbPropertiesBoolOrPatchByOtherPart
    return:
      type: System.Collections.Generic.Dictionary{System.String,RW_ModularizationWeapon.FieldReaderBoolList{Verse.VerbProperties}}
    content.vb: Public verbPropertiesBoolOrPatchByOtherPart As Dictionary(Of String, FieldReaderBoolList(Of VerbProperties))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: RW_ModularizationWeapon.WeaponAttachmentProperties.toolsBoolOrPatchByOtherPart
  commentId: F:RW_ModularizationWeapon.WeaponAttachmentProperties.toolsBoolOrPatchByOtherPart
  id: toolsBoolOrPatchByOtherPart
  parent: RW_ModularizationWeapon.WeaponAttachmentProperties
  langs:
  - csharp
  - vb
  name: toolsBoolOrPatchByOtherPart
  nameWithType: WeaponAttachmentProperties.toolsBoolOrPatchByOtherPart
  fullName: RW_ModularizationWeapon.WeaponAttachmentProperties.toolsBoolOrPatchByOtherPart
  type: Field
  source:
    remote:
      path: src/RW_ModularizationWeapon/WeaponAttachmentProperties.cs
      branch: master
      repo: https://github.com/RW-NodeTree/RW_ModularizationWeapon.git
    id: toolsBoolOrPatchByOtherPart
    path: WeaponAttachmentProperties.cs
    startLine: 337
  assemblies:
  - RW_ModularizationWeapon
  namespace: RW_ModularizationWeapon
  syntax:
    content: public Dictionary<string, FieldReaderBoolList<Tool>> toolsBoolOrPatchByOtherPart
    return:
      type: System.Collections.Generic.Dictionary{System.String,RW_ModularizationWeapon.FieldReaderBoolList{Verse.Tool}}
    content.vb: Public toolsBoolOrPatchByOtherPart As Dictionary(Of String, FieldReaderBoolList(Of Tool))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: RW_ModularizationWeapon.WeaponAttachmentProperties.verbPropertiesBoolOrPatchByOtherPartDefaultValue
  commentId: F:RW_ModularizationWeapon.WeaponAttachmentProperties.verbPropertiesBoolOrPatchByOtherPartDefaultValue
  id: verbPropertiesBoolOrPatchByOtherPartDefaultValue
  parent: RW_ModularizationWeapon.WeaponAttachmentProperties
  langs:
  - csharp
  - vb
  name: verbPropertiesBoolOrPatchByOtherPartDefaultValue
  nameWithType: WeaponAttachmentProperties.verbPropertiesBoolOrPatchByOtherPartDefaultValue
  fullName: RW_ModularizationWeapon.WeaponAttachmentProperties.verbPropertiesBoolOrPatchByOtherPartDefaultValue
  type: Field
  source:
    remote:
      path: src/RW_ModularizationWeapon/WeaponAttachmentProperties.cs
      branch: master
      repo: https://github.com/RW-NodeTree/RW_ModularizationWeapon.git
    id: verbPropertiesBoolOrPatchByOtherPartDefaultValue
    path: WeaponAttachmentProperties.cs
    startLine: 339
  assemblies:
  - RW_ModularizationWeapon
  namespace: RW_ModularizationWeapon
  syntax:
    content: public bool verbPropertiesBoolOrPatchByOtherPartDefaultValue
    return:
      type: System.Boolean
    content.vb: Public verbPropertiesBoolOrPatchByOtherPartDefaultValue As Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: RW_ModularizationWeapon.WeaponAttachmentProperties.toolsBoolOrPatchByOtherPartDefaultValue
  commentId: F:RW_ModularizationWeapon.WeaponAttachmentProperties.toolsBoolOrPatchByOtherPartDefaultValue
  id: toolsBoolOrPatchByOtherPartDefaultValue
  parent: RW_ModularizationWeapon.WeaponAttachmentProperties
  langs:
  - csharp
  - vb
  name: toolsBoolOrPatchByOtherPartDefaultValue
  nameWithType: WeaponAttachmentProperties.toolsBoolOrPatchByOtherPartDefaultValue
  fullName: RW_ModularizationWeapon.WeaponAttachmentProperties.toolsBoolOrPatchByOtherPartDefaultValue
  type: Field
  source:
    remote:
      path: src/RW_ModularizationWeapon/WeaponAttachmentProperties.cs
      branch: master
      repo: https://github.com/RW-NodeTree/RW_ModularizationWeapon.git
    id: toolsBoolOrPatchByOtherPartDefaultValue
    path: WeaponAttachmentProperties.cs
    startLine: 341
  assemblies:
  - RW_ModularizationWeapon
  namespace: RW_ModularizationWeapon
  syntax:
    content: public bool toolsBoolOrPatchByOtherPartDefaultValue
    return:
      type: System.Boolean
    content.vb: Public toolsBoolOrPatchByOtherPartDefaultValue As Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: RW_ModularizationWeapon.WeaponAttachmentProperties.verbPropertiesObjectPatchByChildPart
  commentId: F:RW_ModularizationWeapon.WeaponAttachmentProperties.verbPropertiesObjectPatchByChildPart
  id: verbPropertiesObjectPatchByChildPart
  parent: RW_ModularizationWeapon.WeaponAttachmentProperties
  langs:
  - csharp
  - vb
  name: verbPropertiesObjectPatchByChildPart
  nameWithType: WeaponAttachmentProperties.verbPropertiesObjectPatchByChildPart
  fullName: RW_ModularizationWeapon.WeaponAttachmentProperties.verbPropertiesObjectPatchByChildPart
  type: Field
  source:
    remote:
      path: src/RW_ModularizationWeapon/WeaponAttachmentProperties.cs
      branch: master
      repo: https://github.com/RW-NodeTree/RW_ModularizationWeapon.git
    id: verbPropertiesObjectPatchByChildPart
    path: WeaponAttachmentProperties.cs
    startLine: 348
  assemblies:
  - RW_ModularizationWeapon
  namespace: RW_ModularizationWeapon
  syntax:
    content: public FieldReaderFiltList<VerbProperties> verbPropertiesObjectPatchByChildPart
    return:
      type: RW_ModularizationWeapon.FieldReaderFiltList{Verse.VerbProperties}
    content.vb: Public verbPropertiesObjectPatchByChildPart As FieldReaderFiltList(Of VerbProperties)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: RW_ModularizationWeapon.WeaponAttachmentProperties.toolsObjectPatchByChildPart
  commentId: F:RW_ModularizationWeapon.WeaponAttachmentProperties.toolsObjectPatchByChildPart
  id: toolsObjectPatchByChildPart
  parent: RW_ModularizationWeapon.WeaponAttachmentProperties
  langs:
  - csharp
  - vb
  name: toolsObjectPatchByChildPart
  nameWithType: WeaponAttachmentProperties.toolsObjectPatchByChildPart
  fullName: RW_ModularizationWeapon.WeaponAttachmentProperties.toolsObjectPatchByChildPart
  type: Field
  source:
    remote:
      path: src/RW_ModularizationWeapon/WeaponAttachmentProperties.cs
      branch: master
      repo: https://github.com/RW-NodeTree/RW_ModularizationWeapon.git
    id: toolsObjectPatchByChildPart
    path: WeaponAttachmentProperties.cs
    startLine: 350
  assemblies:
  - RW_ModularizationWeapon
  namespace: RW_ModularizationWeapon
  syntax:
    content: public FieldReaderFiltList<Tool> toolsObjectPatchByChildPart
    return:
      type: RW_ModularizationWeapon.FieldReaderFiltList{Verse.Tool}
    content.vb: Public toolsObjectPatchByChildPart As FieldReaderFiltList(Of Tool)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: RW_ModularizationWeapon.WeaponAttachmentProperties.compPropertiesObjectPatchByChildPart
  commentId: F:RW_ModularizationWeapon.WeaponAttachmentProperties.compPropertiesObjectPatchByChildPart
  id: compPropertiesObjectPatchByChildPart
  parent: RW_ModularizationWeapon.WeaponAttachmentProperties
  langs:
  - csharp
  - vb
  name: compPropertiesObjectPatchByChildPart
  nameWithType: WeaponAttachmentProperties.compPropertiesObjectPatchByChildPart
  fullName: RW_ModularizationWeapon.WeaponAttachmentProperties.compPropertiesObjectPatchByChildPart
  type: Field
  source:
    remote:
      path: src/RW_ModularizationWeapon/WeaponAttachmentProperties.cs
      branch: master
      repo: https://github.com/RW-NodeTree/RW_ModularizationWeapon.git
    id: compPropertiesObjectPatchByChildPart
    path: WeaponAttachmentProperties.cs
    startLine: 352
  assemblies:
  - RW_ModularizationWeapon
  namespace: RW_ModularizationWeapon
  syntax:
    content: public FieldReaderFiltList<CompProperties> compPropertiesObjectPatchByChildPart
    return:
      type: RW_ModularizationWeapon.FieldReaderFiltList{Verse.CompProperties}
    content.vb: Public compPropertiesObjectPatchByChildPart As FieldReaderFiltList(Of CompProperties)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: RW_ModularizationWeapon.WeaponAttachmentProperties.verbPropertiesObjectPatchByOtherPart
  commentId: F:RW_ModularizationWeapon.WeaponAttachmentProperties.verbPropertiesObjectPatchByOtherPart
  id: verbPropertiesObjectPatchByOtherPart
  parent: RW_ModularizationWeapon.WeaponAttachmentProperties
  langs:
  - csharp
  - vb
  name: verbPropertiesObjectPatchByOtherPart
  nameWithType: WeaponAttachmentProperties.verbPropertiesObjectPatchByOtherPart
  fullName: RW_ModularizationWeapon.WeaponAttachmentProperties.verbPropertiesObjectPatchByOtherPart
  type: Field
  source:
    remote:
      path: src/RW_ModularizationWeapon/WeaponAttachmentProperties.cs
      branch: master
      repo: https://github.com/RW-NodeTree/RW_ModularizationWeapon.git
    id: verbPropertiesObjectPatchByOtherPart
    path: WeaponAttachmentProperties.cs
    startLine: 356
  assemblies:
  - RW_ModularizationWeapon
  namespace: RW_ModularizationWeapon
  syntax:
    content: public Dictionary<string, FieldReaderFiltList<VerbProperties>> verbPropertiesObjectPatchByOtherPart
    return:
      type: System.Collections.Generic.Dictionary{System.String,RW_ModularizationWeapon.FieldReaderFiltList{Verse.VerbProperties}}
    content.vb: Public verbPropertiesObjectPatchByOtherPart As Dictionary(Of String, FieldReaderFiltList(Of VerbProperties))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: RW_ModularizationWeapon.WeaponAttachmentProperties.toolsObjectPatchByOtherPart
  commentId: F:RW_ModularizationWeapon.WeaponAttachmentProperties.toolsObjectPatchByOtherPart
  id: toolsObjectPatchByOtherPart
  parent: RW_ModularizationWeapon.WeaponAttachmentProperties
  langs:
  - csharp
  - vb
  name: toolsObjectPatchByOtherPart
  nameWithType: WeaponAttachmentProperties.toolsObjectPatchByOtherPart
  fullName: RW_ModularizationWeapon.WeaponAttachmentProperties.toolsObjectPatchByOtherPart
  type: Field
  source:
    remote:
      path: src/RW_ModularizationWeapon/WeaponAttachmentProperties.cs
      branch: master
      repo: https://github.com/RW-NodeTree/RW_ModularizationWeapon.git
    id: toolsObjectPatchByOtherPart
    path: WeaponAttachmentProperties.cs
    startLine: 358
  assemblies:
  - RW_ModularizationWeapon
  namespace: RW_ModularizationWeapon
  syntax:
    content: public Dictionary<string, FieldReaderFiltList<Tool>> toolsObjectPatchByOtherPart
    return:
      type: System.Collections.Generic.Dictionary{System.String,RW_ModularizationWeapon.FieldReaderFiltList{Verse.Tool}}
    content.vb: Public toolsObjectPatchByOtherPart As Dictionary(Of String, FieldReaderFiltList(Of Tool))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: RW_ModularizationWeapon.WeaponAttachmentProperties.verbPropertiesObjectPatchByOtherPartDefaultValue
  commentId: F:RW_ModularizationWeapon.WeaponAttachmentProperties.verbPropertiesObjectPatchByOtherPartDefaultValue
  id: verbPropertiesObjectPatchByOtherPartDefaultValue
  parent: RW_ModularizationWeapon.WeaponAttachmentProperties
  langs:
  - csharp
  - vb
  name: verbPropertiesObjectPatchByOtherPartDefaultValue
  nameWithType: WeaponAttachmentProperties.verbPropertiesObjectPatchByOtherPartDefaultValue
  fullName: RW_ModularizationWeapon.WeaponAttachmentProperties.verbPropertiesObjectPatchByOtherPartDefaultValue
  type: Field
  source:
    remote:
      path: src/RW_ModularizationWeapon/WeaponAttachmentProperties.cs
      branch: master
      repo: https://github.com/RW-NodeTree/RW_ModularizationWeapon.git
    id: verbPropertiesObjectPatchByOtherPartDefaultValue
    path: WeaponAttachmentProperties.cs
    startLine: 360
  assemblies:
  - RW_ModularizationWeapon
  namespace: RW_ModularizationWeapon
  syntax:
    content: public bool verbPropertiesObjectPatchByOtherPartDefaultValue
    return:
      type: System.Boolean
    content.vb: Public verbPropertiesObjectPatchByOtherPartDefaultValue As Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: RW_ModularizationWeapon.WeaponAttachmentProperties.toolsObjectPatchByOtherPartDefaultValue
  commentId: F:RW_ModularizationWeapon.WeaponAttachmentProperties.toolsObjectPatchByOtherPartDefaultValue
  id: toolsObjectPatchByOtherPartDefaultValue
  parent: RW_ModularizationWeapon.WeaponAttachmentProperties
  langs:
  - csharp
  - vb
  name: toolsObjectPatchByOtherPartDefaultValue
  nameWithType: WeaponAttachmentProperties.toolsObjectPatchByOtherPartDefaultValue
  fullName: RW_ModularizationWeapon.WeaponAttachmentProperties.toolsObjectPatchByOtherPartDefaultValue
  type: Field
  source:
    remote:
      path: src/RW_ModularizationWeapon/WeaponAttachmentProperties.cs
      branch: master
      repo: https://github.com/RW-NodeTree/RW_ModularizationWeapon.git
    id: toolsObjectPatchByOtherPartDefaultValue
    path: WeaponAttachmentProperties.cs
    startLine: 362
  assemblies:
  - RW_ModularizationWeapon
  namespace: RW_ModularizationWeapon
  syntax:
    content: public bool toolsObjectPatchByOtherPartDefaultValue
    return:
      type: System.Boolean
    content.vb: Public toolsObjectPatchByOtherPartDefaultValue As Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: RW_ModularizationWeapon
  commentId: N:RW_ModularizationWeapon
  name: RW_ModularizationWeapon
  nameWithType: RW_ModularizationWeapon
  fullName: RW_ModularizationWeapon
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.RW_ModularizationWeapon.Tools.ToolsFunction.LogAllField
  commentId: M:RW_ModularizationWeapon.Tools.ToolsFunction.LogAllField(System.Object)
  parent: RW_ModularizationWeapon.Tools.ToolsFunction
  definition: RW_ModularizationWeapon.Tools.ToolsFunction.LogAllField(System.Object)
  name: LogAllField()
  nameWithType: ToolsFunction.LogAllField()
  fullName: RW_ModularizationWeapon.Tools.ToolsFunction.LogAllField()
  spec.csharp:
  - uid: RW_ModularizationWeapon.Tools.ToolsFunction.LogAllField
    name: LogAllField
    nameWithType: ToolsFunction.LogAllField
    fullName: RW_ModularizationWeapon.Tools.ToolsFunction.LogAllField
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: RW_ModularizationWeapon.Tools.ToolsFunction.LogAllField
    name: LogAllField
    nameWithType: ToolsFunction.LogAllField
    fullName: RW_ModularizationWeapon.Tools.ToolsFunction.LogAllField
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: RW_ModularizationWeapon.Tools.ToolsFunction.LogAllField(System.Object)
  commentId: M:RW_ModularizationWeapon.Tools.ToolsFunction.LogAllField(System.Object)
  isExternal: true
  name: LogAllField(Object)
  nameWithType: ToolsFunction.LogAllField(Object)
  fullName: RW_ModularizationWeapon.Tools.ToolsFunction.LogAllField(System.Object)
  spec.csharp:
  - uid: RW_ModularizationWeapon.Tools.ToolsFunction.LogAllField(System.Object)
    name: LogAllField
    nameWithType: ToolsFunction.LogAllField
    fullName: RW_ModularizationWeapon.Tools.ToolsFunction.LogAllField
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: RW_ModularizationWeapon.Tools.ToolsFunction.LogAllField(System.Object)
    name: LogAllField
    nameWithType: ToolsFunction.LogAllField
    fullName: RW_ModularizationWeapon.Tools.ToolsFunction.LogAllField
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: RW_ModularizationWeapon.Tools.ToolsFunction
  commentId: T:RW_ModularizationWeapon.Tools.ToolsFunction
  parent: RW_ModularizationWeapon.Tools
  name: ToolsFunction
  nameWithType: ToolsFunction
  fullName: RW_ModularizationWeapon.Tools.ToolsFunction
- uid: RW_ModularizationWeapon.Tools
  commentId: N:RW_ModularizationWeapon.Tools
  name: RW_ModularizationWeapon.Tools
  nameWithType: RW_ModularizationWeapon.Tools
  fullName: RW_ModularizationWeapon.Tools
- uid: RW_ModularizationWeapon.WeaponAttachmentProperties.UITexture*
  commentId: Overload:RW_ModularizationWeapon.WeaponAttachmentProperties.UITexture
  name: UITexture
  nameWithType: WeaponAttachmentProperties.UITexture
  fullName: RW_ModularizationWeapon.WeaponAttachmentProperties.UITexture
- uid: UnityEngine.Texture2D
  commentId: T:UnityEngine.Texture2D
  parent: UnityEngine
  isExternal: true
  name: Texture2D
  nameWithType: Texture2D
  fullName: UnityEngine.Texture2D
- uid: UnityEngine
  commentId: N:UnityEngine
  isExternal: true
  name: UnityEngine
  nameWithType: UnityEngine
  fullName: UnityEngine
- uid: RW_ModularizationWeapon.WeaponAttachmentProperties.Transfrom*
  commentId: Overload:RW_ModularizationWeapon.WeaponAttachmentProperties.Transfrom
  name: Transfrom
  nameWithType: WeaponAttachmentProperties.Transfrom
  fullName: RW_ModularizationWeapon.WeaponAttachmentProperties.Transfrom
- uid: UnityEngine.Matrix4x4
  commentId: T:UnityEngine.Matrix4x4
  parent: UnityEngine
  isExternal: true
  name: Matrix4x4
  nameWithType: Matrix4x4
  fullName: UnityEngine.Matrix4x4
- uid: RW_ModularizationWeapon.WeaponAttachmentProperties.Name*
  commentId: Overload:RW_ModularizationWeapon.WeaponAttachmentProperties.Name
  name: Name
  nameWithType: WeaponAttachmentProperties.Name
  fullName: RW_ModularizationWeapon.WeaponAttachmentProperties.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: RW_ModularizationWeapon.WeaponAttachmentProperties.ResolveReferences*
  commentId: Overload:RW_ModularizationWeapon.WeaponAttachmentProperties.ResolveReferences
  name: ResolveReferences
  nameWithType: WeaponAttachmentProperties.ResolveReferences
  fullName: RW_ModularizationWeapon.WeaponAttachmentProperties.ResolveReferences
- uid: Verse.ThingFilter
  commentId: T:Verse.ThingFilter
  parent: Verse
  isExternal: true
  name: ThingFilter
  nameWithType: ThingFilter
  fullName: Verse.ThingFilter
- uid: Verse
  commentId: N:Verse
  isExternal: true
  name: Verse
  nameWithType: Verse
  fullName: Verse
- uid: Verse.ThingDef
  commentId: T:Verse.ThingDef
  parent: Verse
  isExternal: true
  name: ThingDef
  nameWithType: ThingDef
  fullName: Verse.ThingDef
- uid: System.Collections.Generic.List{Verse.ThingDefCountClass}
  commentId: T:System.Collections.Generic.List{Verse.ThingDefCountClass}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<ThingDefCountClass>
  nameWithType: List<ThingDefCountClass>
  fullName: System.Collections.Generic.List<Verse.ThingDefCountClass>
  nameWithType.vb: List(Of ThingDefCountClass)
  fullName.vb: System.Collections.Generic.List(Of Verse.ThingDefCountClass)
  name.vb: List(Of ThingDefCountClass)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Verse.ThingDefCountClass
    name: ThingDefCountClass
    nameWithType: ThingDefCountClass
    fullName: Verse.ThingDefCountClass
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Verse.ThingDefCountClass
    name: ThingDefCountClass
    nameWithType: ThingDefCountClass
    fullName: Verse.ThingDefCountClass
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: UnityEngine.Vector3
  commentId: T:UnityEngine.Vector3
  parent: UnityEngine
  isExternal: true
  name: Vector3
  nameWithType: Vector3
  fullName: UnityEngine.Vector3
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Collections.Generic.List{System.Type}
  commentId: T:System.Collections.Generic.List{System.Type}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Type>
  nameWithType: List<Type>
  fullName: System.Collections.Generic.List<System.Type>
  nameWithType.vb: List(Of Type)
  fullName.vb: System.Collections.Generic.List(Of System.Type)
  name.vb: List(Of Type)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: RW_ModularizationWeapon.FieldReaderDgitList{Verse.VerbProperties}
  commentId: T:RW_ModularizationWeapon.FieldReaderDgitList{Verse.VerbProperties}
  parent: RW_ModularizationWeapon
  definition: RW_ModularizationWeapon.FieldReaderDgitList`1
  name: FieldReaderDgitList<VerbProperties>
  nameWithType: FieldReaderDgitList<VerbProperties>
  fullName: RW_ModularizationWeapon.FieldReaderDgitList<Verse.VerbProperties>
  nameWithType.vb: FieldReaderDgitList(Of VerbProperties)
  fullName.vb: RW_ModularizationWeapon.FieldReaderDgitList(Of Verse.VerbProperties)
  name.vb: FieldReaderDgitList(Of VerbProperties)
  spec.csharp:
  - uid: RW_ModularizationWeapon.FieldReaderDgitList`1
    name: FieldReaderDgitList
    nameWithType: FieldReaderDgitList
    fullName: RW_ModularizationWeapon.FieldReaderDgitList
  - name: <
    nameWithType: <
    fullName: <
  - uid: Verse.VerbProperties
    name: VerbProperties
    nameWithType: VerbProperties
    fullName: Verse.VerbProperties
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: RW_ModularizationWeapon.FieldReaderDgitList`1
    name: FieldReaderDgitList
    nameWithType: FieldReaderDgitList
    fullName: RW_ModularizationWeapon.FieldReaderDgitList
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Verse.VerbProperties
    name: VerbProperties
    nameWithType: VerbProperties
    fullName: Verse.VerbProperties
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: RW_ModularizationWeapon.FieldReaderDgitList`1
  commentId: T:RW_ModularizationWeapon.FieldReaderDgitList`1
  parent: RW_ModularizationWeapon
  name: FieldReaderDgitList<T>
  nameWithType: FieldReaderDgitList<T>
  fullName: RW_ModularizationWeapon.FieldReaderDgitList<T>
  nameWithType.vb: FieldReaderDgitList(Of T)
  fullName.vb: RW_ModularizationWeapon.FieldReaderDgitList(Of T)
  name.vb: FieldReaderDgitList(Of T)
  spec.csharp:
  - uid: RW_ModularizationWeapon.FieldReaderDgitList`1
    name: FieldReaderDgitList
    nameWithType: FieldReaderDgitList
    fullName: RW_ModularizationWeapon.FieldReaderDgitList
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: RW_ModularizationWeapon.FieldReaderDgitList`1
    name: FieldReaderDgitList
    nameWithType: FieldReaderDgitList
    fullName: RW_ModularizationWeapon.FieldReaderDgitList
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: RW_ModularizationWeapon.FieldReaderDgitList{Verse.Tool}
  commentId: T:RW_ModularizationWeapon.FieldReaderDgitList{Verse.Tool}
  parent: RW_ModularizationWeapon
  definition: RW_ModularizationWeapon.FieldReaderDgitList`1
  name: FieldReaderDgitList<Tool>
  nameWithType: FieldReaderDgitList<Tool>
  fullName: RW_ModularizationWeapon.FieldReaderDgitList<Verse.Tool>
  nameWithType.vb: FieldReaderDgitList(Of Tool)
  fullName.vb: RW_ModularizationWeapon.FieldReaderDgitList(Of Verse.Tool)
  name.vb: FieldReaderDgitList(Of Tool)
  spec.csharp:
  - uid: RW_ModularizationWeapon.FieldReaderDgitList`1
    name: FieldReaderDgitList
    nameWithType: FieldReaderDgitList
    fullName: RW_ModularizationWeapon.FieldReaderDgitList
  - name: <
    nameWithType: <
    fullName: <
  - uid: Verse.Tool
    name: Tool
    nameWithType: Tool
    fullName: Verse.Tool
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: RW_ModularizationWeapon.FieldReaderDgitList`1
    name: FieldReaderDgitList
    nameWithType: FieldReaderDgitList
    fullName: RW_ModularizationWeapon.FieldReaderDgitList
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Verse.Tool
    name: Tool
    nameWithType: Tool
    fullName: Verse.Tool
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: RW_ModularizationWeapon.FieldReaderDgitList{Verse.CompProperties}
  commentId: T:RW_ModularizationWeapon.FieldReaderDgitList{Verse.CompProperties}
  parent: RW_ModularizationWeapon
  definition: RW_ModularizationWeapon.FieldReaderDgitList`1
  name: FieldReaderDgitList<CompProperties>
  nameWithType: FieldReaderDgitList<CompProperties>
  fullName: RW_ModularizationWeapon.FieldReaderDgitList<Verse.CompProperties>
  nameWithType.vb: FieldReaderDgitList(Of CompProperties)
  fullName.vb: RW_ModularizationWeapon.FieldReaderDgitList(Of Verse.CompProperties)
  name.vb: FieldReaderDgitList(Of CompProperties)
  spec.csharp:
  - uid: RW_ModularizationWeapon.FieldReaderDgitList`1
    name: FieldReaderDgitList
    nameWithType: FieldReaderDgitList
    fullName: RW_ModularizationWeapon.FieldReaderDgitList
  - name: <
    nameWithType: <
    fullName: <
  - uid: Verse.CompProperties
    name: CompProperties
    nameWithType: CompProperties
    fullName: Verse.CompProperties
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: RW_ModularizationWeapon.FieldReaderDgitList`1
    name: FieldReaderDgitList
    nameWithType: FieldReaderDgitList
    fullName: RW_ModularizationWeapon.FieldReaderDgitList
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Verse.CompProperties
    name: CompProperties
    nameWithType: CompProperties
    fullName: Verse.CompProperties
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{RimWorld.StatModifier}
  commentId: T:System.Collections.Generic.List{RimWorld.StatModifier}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<StatModifier>
  nameWithType: List<StatModifier>
  fullName: System.Collections.Generic.List<RimWorld.StatModifier>
  nameWithType.vb: List(Of StatModifier)
  fullName.vb: System.Collections.Generic.List(Of RimWorld.StatModifier)
  name.vb: List(Of StatModifier)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: RimWorld.StatModifier
    name: StatModifier
    nameWithType: StatModifier
    fullName: RimWorld.StatModifier
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: RimWorld.StatModifier
    name: StatModifier
    nameWithType: StatModifier
    fullName: RimWorld.StatModifier
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.Collections.Generic.Dictionary{System.String,RW_ModularizationWeapon.FieldReaderDgitList{Verse.VerbProperties}}
  commentId: T:System.Collections.Generic.Dictionary{System.String,RW_ModularizationWeapon.FieldReaderDgitList{Verse.VerbProperties}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<String, FieldReaderDgitList<VerbProperties>>
  nameWithType: Dictionary<String, FieldReaderDgitList<VerbProperties>>
  fullName: System.Collections.Generic.Dictionary<System.String, RW_ModularizationWeapon.FieldReaderDgitList<Verse.VerbProperties>>
  nameWithType.vb: Dictionary(Of String, FieldReaderDgitList(Of VerbProperties))
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, RW_ModularizationWeapon.FieldReaderDgitList(Of Verse.VerbProperties))
  name.vb: Dictionary(Of String, FieldReaderDgitList(Of VerbProperties))
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: RW_ModularizationWeapon.FieldReaderDgitList`1
    name: FieldReaderDgitList
    nameWithType: FieldReaderDgitList
    fullName: RW_ModularizationWeapon.FieldReaderDgitList
  - name: <
    nameWithType: <
    fullName: <
  - uid: Verse.VerbProperties
    name: VerbProperties
    nameWithType: VerbProperties
    fullName: Verse.VerbProperties
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: RW_ModularizationWeapon.FieldReaderDgitList`1
    name: FieldReaderDgitList
    nameWithType: FieldReaderDgitList
    fullName: RW_ModularizationWeapon.FieldReaderDgitList
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Verse.VerbProperties
    name: VerbProperties
    nameWithType: VerbProperties
    fullName: Verse.VerbProperties
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary{System.String,RW_ModularizationWeapon.FieldReaderDgitList{Verse.Tool}}
  commentId: T:System.Collections.Generic.Dictionary{System.String,RW_ModularizationWeapon.FieldReaderDgitList{Verse.Tool}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<String, FieldReaderDgitList<Tool>>
  nameWithType: Dictionary<String, FieldReaderDgitList<Tool>>
  fullName: System.Collections.Generic.Dictionary<System.String, RW_ModularizationWeapon.FieldReaderDgitList<Verse.Tool>>
  nameWithType.vb: Dictionary(Of String, FieldReaderDgitList(Of Tool))
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, RW_ModularizationWeapon.FieldReaderDgitList(Of Verse.Tool))
  name.vb: Dictionary(Of String, FieldReaderDgitList(Of Tool))
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: RW_ModularizationWeapon.FieldReaderDgitList`1
    name: FieldReaderDgitList
    nameWithType: FieldReaderDgitList
    fullName: RW_ModularizationWeapon.FieldReaderDgitList
  - name: <
    nameWithType: <
    fullName: <
  - uid: Verse.Tool
    name: Tool
    nameWithType: Tool
    fullName: Verse.Tool
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: RW_ModularizationWeapon.FieldReaderDgitList`1
    name: FieldReaderDgitList
    nameWithType: FieldReaderDgitList
    fullName: RW_ModularizationWeapon.FieldReaderDgitList
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Verse.Tool
    name: Tool
    nameWithType: Tool
    fullName: Verse.Tool
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{RimWorld.StatModifier}}
  commentId: T:System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{RimWorld.StatModifier}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<String, List<StatModifier>>
  nameWithType: Dictionary<String, List<StatModifier>>
  fullName: System.Collections.Generic.Dictionary<System.String, System.Collections.Generic.List<RimWorld.StatModifier>>
  nameWithType.vb: Dictionary(Of String, List(Of StatModifier))
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, System.Collections.Generic.List(Of RimWorld.StatModifier))
  name.vb: Dictionary(Of String, List(Of StatModifier))
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: RimWorld.StatModifier
    name: StatModifier
    nameWithType: StatModifier
    fullName: RimWorld.StatModifier
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: RimWorld.StatModifier
    name: StatModifier
    nameWithType: StatModifier
    fullName: RimWorld.StatModifier
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: RW_ModularizationWeapon.FieldReaderBoolList{Verse.VerbProperties}
  commentId: T:RW_ModularizationWeapon.FieldReaderBoolList{Verse.VerbProperties}
  parent: RW_ModularizationWeapon
  definition: RW_ModularizationWeapon.FieldReaderBoolList`1
  name: FieldReaderBoolList<VerbProperties>
  nameWithType: FieldReaderBoolList<VerbProperties>
  fullName: RW_ModularizationWeapon.FieldReaderBoolList<Verse.VerbProperties>
  nameWithType.vb: FieldReaderBoolList(Of VerbProperties)
  fullName.vb: RW_ModularizationWeapon.FieldReaderBoolList(Of Verse.VerbProperties)
  name.vb: FieldReaderBoolList(Of VerbProperties)
  spec.csharp:
  - uid: RW_ModularizationWeapon.FieldReaderBoolList`1
    name: FieldReaderBoolList
    nameWithType: FieldReaderBoolList
    fullName: RW_ModularizationWeapon.FieldReaderBoolList
  - name: <
    nameWithType: <
    fullName: <
  - uid: Verse.VerbProperties
    name: VerbProperties
    nameWithType: VerbProperties
    fullName: Verse.VerbProperties
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: RW_ModularizationWeapon.FieldReaderBoolList`1
    name: FieldReaderBoolList
    nameWithType: FieldReaderBoolList
    fullName: RW_ModularizationWeapon.FieldReaderBoolList
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Verse.VerbProperties
    name: VerbProperties
    nameWithType: VerbProperties
    fullName: Verse.VerbProperties
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: RW_ModularizationWeapon.FieldReaderBoolList`1
  commentId: T:RW_ModularizationWeapon.FieldReaderBoolList`1
  parent: RW_ModularizationWeapon
  name: FieldReaderBoolList<T>
  nameWithType: FieldReaderBoolList<T>
  fullName: RW_ModularizationWeapon.FieldReaderBoolList<T>
  nameWithType.vb: FieldReaderBoolList(Of T)
  fullName.vb: RW_ModularizationWeapon.FieldReaderBoolList(Of T)
  name.vb: FieldReaderBoolList(Of T)
  spec.csharp:
  - uid: RW_ModularizationWeapon.FieldReaderBoolList`1
    name: FieldReaderBoolList
    nameWithType: FieldReaderBoolList
    fullName: RW_ModularizationWeapon.FieldReaderBoolList
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: RW_ModularizationWeapon.FieldReaderBoolList`1
    name: FieldReaderBoolList
    nameWithType: FieldReaderBoolList
    fullName: RW_ModularizationWeapon.FieldReaderBoolList
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: RW_ModularizationWeapon.FieldReaderBoolList{Verse.Tool}
  commentId: T:RW_ModularizationWeapon.FieldReaderBoolList{Verse.Tool}
  parent: RW_ModularizationWeapon
  definition: RW_ModularizationWeapon.FieldReaderBoolList`1
  name: FieldReaderBoolList<Tool>
  nameWithType: FieldReaderBoolList<Tool>
  fullName: RW_ModularizationWeapon.FieldReaderBoolList<Verse.Tool>
  nameWithType.vb: FieldReaderBoolList(Of Tool)
  fullName.vb: RW_ModularizationWeapon.FieldReaderBoolList(Of Verse.Tool)
  name.vb: FieldReaderBoolList(Of Tool)
  spec.csharp:
  - uid: RW_ModularizationWeapon.FieldReaderBoolList`1
    name: FieldReaderBoolList
    nameWithType: FieldReaderBoolList
    fullName: RW_ModularizationWeapon.FieldReaderBoolList
  - name: <
    nameWithType: <
    fullName: <
  - uid: Verse.Tool
    name: Tool
    nameWithType: Tool
    fullName: Verse.Tool
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: RW_ModularizationWeapon.FieldReaderBoolList`1
    name: FieldReaderBoolList
    nameWithType: FieldReaderBoolList
    fullName: RW_ModularizationWeapon.FieldReaderBoolList
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Verse.Tool
    name: Tool
    nameWithType: Tool
    fullName: Verse.Tool
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: RW_ModularizationWeapon.FieldReaderBoolList{Verse.CompProperties}
  commentId: T:RW_ModularizationWeapon.FieldReaderBoolList{Verse.CompProperties}
  parent: RW_ModularizationWeapon
  definition: RW_ModularizationWeapon.FieldReaderBoolList`1
  name: FieldReaderBoolList<CompProperties>
  nameWithType: FieldReaderBoolList<CompProperties>
  fullName: RW_ModularizationWeapon.FieldReaderBoolList<Verse.CompProperties>
  nameWithType.vb: FieldReaderBoolList(Of CompProperties)
  fullName.vb: RW_ModularizationWeapon.FieldReaderBoolList(Of Verse.CompProperties)
  name.vb: FieldReaderBoolList(Of CompProperties)
  spec.csharp:
  - uid: RW_ModularizationWeapon.FieldReaderBoolList`1
    name: FieldReaderBoolList
    nameWithType: FieldReaderBoolList
    fullName: RW_ModularizationWeapon.FieldReaderBoolList
  - name: <
    nameWithType: <
    fullName: <
  - uid: Verse.CompProperties
    name: CompProperties
    nameWithType: CompProperties
    fullName: Verse.CompProperties
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: RW_ModularizationWeapon.FieldReaderBoolList`1
    name: FieldReaderBoolList
    nameWithType: FieldReaderBoolList
    fullName: RW_ModularizationWeapon.FieldReaderBoolList
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Verse.CompProperties
    name: CompProperties
    nameWithType: CompProperties
    fullName: Verse.CompProperties
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary{System.String,RW_ModularizationWeapon.FieldReaderBoolList{Verse.VerbProperties}}
  commentId: T:System.Collections.Generic.Dictionary{System.String,RW_ModularizationWeapon.FieldReaderBoolList{Verse.VerbProperties}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<String, FieldReaderBoolList<VerbProperties>>
  nameWithType: Dictionary<String, FieldReaderBoolList<VerbProperties>>
  fullName: System.Collections.Generic.Dictionary<System.String, RW_ModularizationWeapon.FieldReaderBoolList<Verse.VerbProperties>>
  nameWithType.vb: Dictionary(Of String, FieldReaderBoolList(Of VerbProperties))
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, RW_ModularizationWeapon.FieldReaderBoolList(Of Verse.VerbProperties))
  name.vb: Dictionary(Of String, FieldReaderBoolList(Of VerbProperties))
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: RW_ModularizationWeapon.FieldReaderBoolList`1
    name: FieldReaderBoolList
    nameWithType: FieldReaderBoolList
    fullName: RW_ModularizationWeapon.FieldReaderBoolList
  - name: <
    nameWithType: <
    fullName: <
  - uid: Verse.VerbProperties
    name: VerbProperties
    nameWithType: VerbProperties
    fullName: Verse.VerbProperties
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: RW_ModularizationWeapon.FieldReaderBoolList`1
    name: FieldReaderBoolList
    nameWithType: FieldReaderBoolList
    fullName: RW_ModularizationWeapon.FieldReaderBoolList
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Verse.VerbProperties
    name: VerbProperties
    nameWithType: VerbProperties
    fullName: Verse.VerbProperties
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary{System.String,RW_ModularizationWeapon.FieldReaderBoolList{Verse.Tool}}
  commentId: T:System.Collections.Generic.Dictionary{System.String,RW_ModularizationWeapon.FieldReaderBoolList{Verse.Tool}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<String, FieldReaderBoolList<Tool>>
  nameWithType: Dictionary<String, FieldReaderBoolList<Tool>>
  fullName: System.Collections.Generic.Dictionary<System.String, RW_ModularizationWeapon.FieldReaderBoolList<Verse.Tool>>
  nameWithType.vb: Dictionary(Of String, FieldReaderBoolList(Of Tool))
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, RW_ModularizationWeapon.FieldReaderBoolList(Of Verse.Tool))
  name.vb: Dictionary(Of String, FieldReaderBoolList(Of Tool))
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: RW_ModularizationWeapon.FieldReaderBoolList`1
    name: FieldReaderBoolList
    nameWithType: FieldReaderBoolList
    fullName: RW_ModularizationWeapon.FieldReaderBoolList
  - name: <
    nameWithType: <
    fullName: <
  - uid: Verse.Tool
    name: Tool
    nameWithType: Tool
    fullName: Verse.Tool
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: RW_ModularizationWeapon.FieldReaderBoolList`1
    name: FieldReaderBoolList
    nameWithType: FieldReaderBoolList
    fullName: RW_ModularizationWeapon.FieldReaderBoolList
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Verse.Tool
    name: Tool
    nameWithType: Tool
    fullName: Verse.Tool
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: RW_ModularizationWeapon.FieldReaderFiltList{Verse.VerbProperties}
  commentId: T:RW_ModularizationWeapon.FieldReaderFiltList{Verse.VerbProperties}
  parent: RW_ModularizationWeapon
  definition: RW_ModularizationWeapon.FieldReaderFiltList`1
  name: FieldReaderFiltList<VerbProperties>
  nameWithType: FieldReaderFiltList<VerbProperties>
  fullName: RW_ModularizationWeapon.FieldReaderFiltList<Verse.VerbProperties>
  nameWithType.vb: FieldReaderFiltList(Of VerbProperties)
  fullName.vb: RW_ModularizationWeapon.FieldReaderFiltList(Of Verse.VerbProperties)
  name.vb: FieldReaderFiltList(Of VerbProperties)
  spec.csharp:
  - uid: RW_ModularizationWeapon.FieldReaderFiltList`1
    name: FieldReaderFiltList
    nameWithType: FieldReaderFiltList
    fullName: RW_ModularizationWeapon.FieldReaderFiltList
  - name: <
    nameWithType: <
    fullName: <
  - uid: Verse.VerbProperties
    name: VerbProperties
    nameWithType: VerbProperties
    fullName: Verse.VerbProperties
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: RW_ModularizationWeapon.FieldReaderFiltList`1
    name: FieldReaderFiltList
    nameWithType: FieldReaderFiltList
    fullName: RW_ModularizationWeapon.FieldReaderFiltList
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Verse.VerbProperties
    name: VerbProperties
    nameWithType: VerbProperties
    fullName: Verse.VerbProperties
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: RW_ModularizationWeapon.FieldReaderFiltList`1
  commentId: T:RW_ModularizationWeapon.FieldReaderFiltList`1
  parent: RW_ModularizationWeapon
  name: FieldReaderFiltList<T>
  nameWithType: FieldReaderFiltList<T>
  fullName: RW_ModularizationWeapon.FieldReaderFiltList<T>
  nameWithType.vb: FieldReaderFiltList(Of T)
  fullName.vb: RW_ModularizationWeapon.FieldReaderFiltList(Of T)
  name.vb: FieldReaderFiltList(Of T)
  spec.csharp:
  - uid: RW_ModularizationWeapon.FieldReaderFiltList`1
    name: FieldReaderFiltList
    nameWithType: FieldReaderFiltList
    fullName: RW_ModularizationWeapon.FieldReaderFiltList
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: RW_ModularizationWeapon.FieldReaderFiltList`1
    name: FieldReaderFiltList
    nameWithType: FieldReaderFiltList
    fullName: RW_ModularizationWeapon.FieldReaderFiltList
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: RW_ModularizationWeapon.FieldReaderFiltList{Verse.Tool}
  commentId: T:RW_ModularizationWeapon.FieldReaderFiltList{Verse.Tool}
  parent: RW_ModularizationWeapon
  definition: RW_ModularizationWeapon.FieldReaderFiltList`1
  name: FieldReaderFiltList<Tool>
  nameWithType: FieldReaderFiltList<Tool>
  fullName: RW_ModularizationWeapon.FieldReaderFiltList<Verse.Tool>
  nameWithType.vb: FieldReaderFiltList(Of Tool)
  fullName.vb: RW_ModularizationWeapon.FieldReaderFiltList(Of Verse.Tool)
  name.vb: FieldReaderFiltList(Of Tool)
  spec.csharp:
  - uid: RW_ModularizationWeapon.FieldReaderFiltList`1
    name: FieldReaderFiltList
    nameWithType: FieldReaderFiltList
    fullName: RW_ModularizationWeapon.FieldReaderFiltList
  - name: <
    nameWithType: <
    fullName: <
  - uid: Verse.Tool
    name: Tool
    nameWithType: Tool
    fullName: Verse.Tool
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: RW_ModularizationWeapon.FieldReaderFiltList`1
    name: FieldReaderFiltList
    nameWithType: FieldReaderFiltList
    fullName: RW_ModularizationWeapon.FieldReaderFiltList
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Verse.Tool
    name: Tool
    nameWithType: Tool
    fullName: Verse.Tool
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: RW_ModularizationWeapon.FieldReaderFiltList{Verse.CompProperties}
  commentId: T:RW_ModularizationWeapon.FieldReaderFiltList{Verse.CompProperties}
  parent: RW_ModularizationWeapon
  definition: RW_ModularizationWeapon.FieldReaderFiltList`1
  name: FieldReaderFiltList<CompProperties>
  nameWithType: FieldReaderFiltList<CompProperties>
  fullName: RW_ModularizationWeapon.FieldReaderFiltList<Verse.CompProperties>
  nameWithType.vb: FieldReaderFiltList(Of CompProperties)
  fullName.vb: RW_ModularizationWeapon.FieldReaderFiltList(Of Verse.CompProperties)
  name.vb: FieldReaderFiltList(Of CompProperties)
  spec.csharp:
  - uid: RW_ModularizationWeapon.FieldReaderFiltList`1
    name: FieldReaderFiltList
    nameWithType: FieldReaderFiltList
    fullName: RW_ModularizationWeapon.FieldReaderFiltList
  - name: <
    nameWithType: <
    fullName: <
  - uid: Verse.CompProperties
    name: CompProperties
    nameWithType: CompProperties
    fullName: Verse.CompProperties
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: RW_ModularizationWeapon.FieldReaderFiltList`1
    name: FieldReaderFiltList
    nameWithType: FieldReaderFiltList
    fullName: RW_ModularizationWeapon.FieldReaderFiltList
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Verse.CompProperties
    name: CompProperties
    nameWithType: CompProperties
    fullName: Verse.CompProperties
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary{System.String,RW_ModularizationWeapon.FieldReaderFiltList{Verse.VerbProperties}}
  commentId: T:System.Collections.Generic.Dictionary{System.String,RW_ModularizationWeapon.FieldReaderFiltList{Verse.VerbProperties}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<String, FieldReaderFiltList<VerbProperties>>
  nameWithType: Dictionary<String, FieldReaderFiltList<VerbProperties>>
  fullName: System.Collections.Generic.Dictionary<System.String, RW_ModularizationWeapon.FieldReaderFiltList<Verse.VerbProperties>>
  nameWithType.vb: Dictionary(Of String, FieldReaderFiltList(Of VerbProperties))
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, RW_ModularizationWeapon.FieldReaderFiltList(Of Verse.VerbProperties))
  name.vb: Dictionary(Of String, FieldReaderFiltList(Of VerbProperties))
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: RW_ModularizationWeapon.FieldReaderFiltList`1
    name: FieldReaderFiltList
    nameWithType: FieldReaderFiltList
    fullName: RW_ModularizationWeapon.FieldReaderFiltList
  - name: <
    nameWithType: <
    fullName: <
  - uid: Verse.VerbProperties
    name: VerbProperties
    nameWithType: VerbProperties
    fullName: Verse.VerbProperties
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: RW_ModularizationWeapon.FieldReaderFiltList`1
    name: FieldReaderFiltList
    nameWithType: FieldReaderFiltList
    fullName: RW_ModularizationWeapon.FieldReaderFiltList
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Verse.VerbProperties
    name: VerbProperties
    nameWithType: VerbProperties
    fullName: Verse.VerbProperties
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary{System.String,RW_ModularizationWeapon.FieldReaderFiltList{Verse.Tool}}
  commentId: T:System.Collections.Generic.Dictionary{System.String,RW_ModularizationWeapon.FieldReaderFiltList{Verse.Tool}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<String, FieldReaderFiltList<Tool>>
  nameWithType: Dictionary<String, FieldReaderFiltList<Tool>>
  fullName: System.Collections.Generic.Dictionary<System.String, RW_ModularizationWeapon.FieldReaderFiltList<Verse.Tool>>
  nameWithType.vb: Dictionary(Of String, FieldReaderFiltList(Of Tool))
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, RW_ModularizationWeapon.FieldReaderFiltList(Of Verse.Tool))
  name.vb: Dictionary(Of String, FieldReaderFiltList(Of Tool))
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: RW_ModularizationWeapon.FieldReaderFiltList`1
    name: FieldReaderFiltList
    nameWithType: FieldReaderFiltList
    fullName: RW_ModularizationWeapon.FieldReaderFiltList
  - name: <
    nameWithType: <
    fullName: <
  - uid: Verse.Tool
    name: Tool
    nameWithType: Tool
    fullName: Verse.Tool
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: RW_ModularizationWeapon.FieldReaderFiltList`1
    name: FieldReaderFiltList
    nameWithType: FieldReaderFiltList
    fullName: RW_ModularizationWeapon.FieldReaderFiltList
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Verse.Tool
    name: Tool
    nameWithType: Tool
    fullName: Verse.Tool
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
